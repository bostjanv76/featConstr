dataset: Balance scale.arff
								--------------
									Fold  1
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3250 num-of-N((left-distance >= 3) and (right-weight <= 2) and (left-weight >= 2))
 0,3079 num-of-N((left-weight >= 3) and (left-distance >= 2) and (right-weight <= 2))
 0,2125 num-of-N((left-distance >= 3) and (right-weight <= 2))
 0,2098 num-of-N((left-distance >= 3) and (left-weight >= 3))
 0,2071 left-distance_x_right-weight
 0,2052 left-distance_x_right-distance
 0,2042 left-distance MULTIPLY left-weight
 0,2011 left-distance_x_left-weight
 0,2004 right-distance DIVIDE left-distance
 0,2004 left-distance SUBTRACT right-distance
 0,2004 left-distance LESSTHAN right-distance
 0,2004 left-distance DIVIDE right-distance
 0,2003 right-weight DIVIDE left-distance
 0,2003 left-distance SUBTRACT right-weight
 0,2003 left-distance DIVIDE right-weight
 0,1969 left-distance LESSTHAN right-weight
 0,1930 left-distance ADD left-weight
 0,1916 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,1895 (left-distance >= 3) and (right-weight <= 2) and (left-weight >= 2)
 0,1892 right-weight_x_right-distance
 0,1872 num-of-N((right-distance <= 2) and (left-distance >= 2))
 0,1851 right-weight_x_left-weight
 0,1839 right-weight SUBTRACT left-weight
 0,1839 right-weight DIVIDE left-weight
 0,1839 left-weight DIVIDE right-weight
 0,1838 right-weight LESSTHAN left-weight
 0,1835 right-distance_x_left-weight
 0,1804 right-weight MULTIPLY right-distance
 0,1786 num-of-N((right-weight <= 2) and (left-weight >= 2))
 0,1785 right-weight ADD right-distance
 0,1768 left-distance==B2of2 and left-weight==B2of2
 0,1768 (left-distance >= 3) and (left-weight >= 3)
 0,1755 num-of-N((right-distance <= 1) and (left-distance >= 2))
 0,1733 right-distance SUBTRACT left-weight
 0,1733 right-distance LESSTHAN left-weight
 0,1733 right-distance DIVIDE left-weight
 0,1733 left-weight DIVIDE right-distance
 0,1665 (left-weight >= 3) and (left-distance >= 2) and (right-weight <= 2)
 0,1604 right-weight==B2of2 and right-distance==B2of2
 0,1424 left-distance==B2of2 impl right-weight==B2of2
 0,1424 (left-distance >= 3) and (right-weight <= 2)
 0,1372 (right-distance <= 2) and (left-distance >= 2)
 0,1362 (right-weight <= 2) and (left-weight >= 2)
 0,1314 left-distance==B2of2 impl right-distance==B2of2
 0,1303 (right-distance <= 2) and (left-weight >= 3)
 0,1285 right-weight==B2of2 impl left-weight==B2of2
 0,1179 right-distance==B2of2 impl left-weight==B2of2
 0,1066 left-distance
 0,0991 right-weight==B2of2 or right-distance==B2of2
 0,0963 (right-distance <= 1) and (left-distance >= 2)
 0,0951 left-distance==B2of2 or left-weight==B2of2
 0,0914 right-weight
 0,0865 right-distance
 0,0823 left-weight
 0,0287 left-distance==B2of2 and right-distance==B2of2 and left-weight==B2of2
 0,0271 left-weight DIVIDE left-distance
 0,0271 left-distance DIVIDE left-weight
 0,0265 left-distance==B2of2 and right-weight==B2of2 and left-weight==B2of2
 0,0258 right-weight==B2of2 and right-distance==B2of2 and left-weight==B2of2
 0,0250 left-distance==B2of2 xor left-weight==B2of2
 0,0250 left-distance==B2of2 equ left-weight==B2of2
 0,0226 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0205 left-distance DIFF right-weight
 0,0182 left-distance DIFF right-distance
 0,0182 right-weight==B2of2 or right-distance==B2of2 or left-weight==B2of2
 0,0182 left-distance==B2of2 or right-distance==B2of2 or left-weight==B2of2
 0,0177 right-weight DIFF left-weight
 0,0169 right-weight DIVIDE right-distance
 0,0169 right-distance DIVIDE right-weight
 0,0164 right-distance DIFF left-weight
 0,0161 left-distance==B2of2 or right-weight==B2of2 or left-weight==B2of2
 0,0159 right-weight==B2of2 xor right-distance==B2of2
 0,0159 right-weight==B2of2 equ right-distance==B2of2
 0,0152 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0017 left-distance MULTIPLY right-weight
 0,0017 left-distance ADD right-weight
 0,0005 left-distance==B2of2 xor right-weight==B2of2
 0,0005 left-distance==B2of2 equ right-weight==B2of2
 0,0004 left-distance MULTIPLY right-distance
 0,0004 left-distance ADD right-distance
 0,0004 left-distance==B2of2 or right-weight==B2of2
 0,0000 left-distance SUBTRACT left-weight
 0,0000 right-weight MULTIPLY left-weight
 0,0000 right-weight ADD left-weight
 -0,0007 right-distance MULTIPLY left-weight
 -0,0007 right-distance ADD left-weight
 -0,0013 right-distance==B2of2 xor left-weight==B2of2
 -0,0013 right-distance==B2of2 equ left-weight==B2of2
 -0,0022 right-weight==B2of2 impl right-distance==B2of2
 -0,0023 left-distance==B2of2 impl left-weight==B2of2
 -0,0028 left-distance==B2of2 xor right-distance==B2of2
 -0,0028 left-distance==B2of2 equ right-distance==B2of2
 -0,0032 right-weight==B2of2 xor left-weight==B2of2
 -0,0032 right-weight==B2of2 equ left-weight==B2of2
 -0,0032 left-distance==B2of2 or right-distance==B2of2
 -0,0041 right-weight==B2of2 or left-weight==B2of2
 -0,0043 right-weight SUBTRACT right-distance
 -0,0047 right-distance==B2of2 or left-weight==B2of2
 -0,0064 left-distance DIFF left-weight
 -0,0079 left-distance LESSTHAN left-weight
 -0,0080 right-weight DIFF right-distance
 -0,0091 right-distance==B2of2 and left-weight==B2of2
 -0,0099 right-weight LESSTHAN right-distance
 -0,0099 left-distance==B2of2 and right-distance==B2of2
 -0,0100 right-weight==B2of2 and left-weight==B2of2
 -0,0100 left-distance==B2of2 and right-weight==B2of2
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  2
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3212 num-of-N((right-distance <= 2) and (left-distance >= 3) and (left-weight >= 2))
 0,3120 num-of-N((right-weight <= 2) and (left-distance >= 3) and (left-weight >= 2))
 0,2170 right-weight_x_left-distance
 0,2145 right-weight_x_left-weight
 0,2137 right-weight MULTIPLY right-distance
 0,2126 right-weight SUBTRACT left-weight
 0,2126 right-weight DIVIDE left-weight
 0,2126 left-weight DIVIDE right-weight
 0,2107 right-weight_x_right-distance
 0,2106 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,2034 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,2030 left-distance_x_right-distance
 0,2022 right-distance DIVIDE left-distance
 0,2022 left-distance SUBTRACT right-distance
 0,2022 left-distance DIVIDE right-distance
 0,1960 num-of-N((left-weight >= 4) and (left-distance >= 3))
 0,1955 right-weight SUBTRACT left-distance
 0,1955 right-weight DIVIDE left-distance
 0,1955 right-distance SUBTRACT left-weight
 0,1955 right-distance LESSTHAN left-weight
 0,1955 right-distance DIVIDE left-weight
 0,1955 left-weight DIVIDE right-distance
 0,1955 left-distance DIVIDE right-weight
 0,1952 right-weight LESSTHAN left-distance
 0,1910 left-distance_x_left-weight
 0,1898 left-distance MULTIPLY left-weight
 0,1890 right-weight LESSTHAN left-weight
 0,1874 left-distance ADD left-weight
 0,1869 (right-distance <= 2) and (left-distance >= 3) and (left-weight >= 2)
 0,1866 right-weight ADD right-distance
 0,1846 right-distance_x_left-weight
 0,1844 num-of-N((right-weight <= 1) and (left-distance >= 2))
 0,1833 left-distance LESSTHAN right-distance
 0,1820 num-of-N((right-distance <= 2) and (left-weight >= 2))
 0,1766 (right-weight <= 2) and (left-distance >= 3) and (left-weight >= 2)
 0,1715 left-distance==B2of2 and left-weight==B2of2
 0,1639 num-of-N((right-distance <= 1) and (left-weight >= 4))
 0,1495 right-weight==B1of3 or left-distance==B2of2
 0,1474 (left-weight >= 4) and (left-distance >= 3)
 0,1453 right-weight==B1of3 or left-weight==B2of2
 0,1430 (right-distance <= 2) and (left-weight >= 2)
 0,1430 left-distance==B2of2 impl right-distance==B2of2
 0,1430 (right-distance <= 2) and (left-distance >= 3)
 0,1317 right-weight==B3of3 and right-distance==B2of2
 0,1293 right-distance==B2of2 impl left-weight==B2of2
 0,1271 (right-weight <= 2) and (left-weight >= 3)
 0,1228 (right-weight <= 1) and (left-distance >= 2)
 0,1013 right-weight==B3of3 or right-distance==B2of2
 0,0990 right-weight==B1of3 and left-distance==B2of2
 0,0983 right-weight
 0,0969 right-weight==B1of3 or left-distance==B2of2 or left-weight==B2of2
 0,0954 right-weight==B3of3 impl left-weight==B2of2
 0,0947 right-weight==B1of3 and left-weight==B2of2
 0,0938 left-distance
 0,0934 right-weight==B2of3 and left-distance==B2of2 and left-weight==B2of2
 0,0915 right-distance
 0,0878 left-distance==B2of2 or left-weight==B2of2
 0,0868 right-weight==B3of3 impl left-distance==B2of2
 0,0850 left-weight
 0,0811 right-weight==B1of3 xor right-distance==B2of2
 0,0811 right-weight==B1of3 equ right-distance==B2of2
 0,0713 right-weight==B1of3 and left-distance==B2of2 and left-weight==B2of2
 0,0661 (right-distance <= 1) and (left-weight >= 4)
 0,0594 right-weight==B1of3 impl right-distance==B2of2
 0,0421 right-weight==B1of3 and left-distance==B2of2 and right-distance==B2of2
 0,0404 right-weight==B1of3 and right-distance==B2of2 and left-weight==B2of2
 0,0397 right-weight==B2of3 or left-distance==B2of2 or left-weight==B2of2
 0,0356 right-weight==B3of3 and left-distance==B2of2 and right-distance==B2of2
 0,0316 right-weight==B3of3 and right-distance==B2of2 and left-weight==B2of2
 0,0311 right-weight==B3of3 or left-distance==B2of2 or left-weight==B2of2
 0,0311 right-weight==B2of3 impl right-distance==B2of2
 0,0310 right-weight==B2of3 impl left-distance==B2of2
 0,0306 right-weight==B2of3 and left-distance==B2of2
 0,0295 right-weight==B2of3 or left-distance==B2of2
 0,0286 right-weight==B1of3 and right-distance==B2of2
 0,0286 right-weight DIVIDE right-distance
 0,0286 right-distance DIVIDE right-weight
 0,0279 right-weight==B2of3 or right-distance==B2of2
 0,0279 right-weight==B2of3 or left-weight==B2of2
 0,0276 left-distance==B2of2 and right-distance==B2of2 and left-weight==B2of2
 0,0263 right-weight==B2of3 and left-weight==B2of2
 0,0261 right-weight==B1of3 or right-distance==B2of2
 0,0252 right-weight==B2of3 impl left-weight==B2of2
 0,0249 left-distance==B2of2 xor left-weight==B2of2
 0,0249 left-distance==B2of2 equ left-weight==B2of2
 0,0228 right-weight DIFF left-distance
 0,0227 right-distance DIFF left-weight
 0,0199 left-distance DIFF right-distance
 0,0197 right-weight DIFF left-weight
 0,0193 left-weight DIVIDE left-distance
 0,0193 left-distance DIVIDE left-weight
 0,0181 right-weight==B1of3 xor left-weight==B2of2
 0,0181 right-weight==B1of3 equ left-weight==B2of2
 0,0173 right-weight==B1of3 xor left-distance==B2of2
 0,0173 right-weight==B1of3 equ left-distance==B2of2
 0,0171 right-weight==B3of3 xor left-distance==B2of2
 0,0171 right-weight==B3of3 equ left-distance==B2of2
 0,0139 left-distance==B2of2 or right-distance==B2of2 or left-weight==B2of2
 0,0120 right-weight==B3of3 xor left-weight==B2of2
 0,0120 right-weight==B3of3 equ left-weight==B2of2
 0,0083 right-weight==B1of3 impl left-weight==B2of2
 0,0077 right-weight==B2of3 and right-distance==B2of2
 0,0068 right-weight==B1of3 impl left-distance==B2of2
 0,0045 right-weight==B3of3 or left-distance==B2of2
 0,0027 right-weight==B3of3 or right-distance==B2of2 or left-weight==B2of2
 0,0010 right-weight MULTIPLY left-weight
 0,0010 right-weight ADD left-weight
 0,0009 right-weight MULTIPLY left-distance
 0,0009 right-weight ADD left-distance
 0,0009 right-weight==B3of3 or left-distance==B2of2 or right-distance==B2of2
 0,0001 right-weight==B3of3 or left-weight==B2of2
 0,0000 left-distance==B2of2 impl left-weight==B2of2
 0,0000 right-distance MULTIPLY left-weight
 0,0000 right-distance ADD left-weight
 -0,0005 right-weight==B1of3 or left-distance==B2of2 or right-distance==B2of2
 -0,0007 left-distance MULTIPLY right-distance
 -0,0007 left-distance ADD right-distance
 -0,0015 left-distance==B2of2 xor right-distance==B2of2
 -0,0015 left-distance==B2of2 equ right-distance==B2of2
 -0,0016 right-weight==B3of3 and left-distance==B2of2 and left-weight==B2of2
 -0,0026 right-distance==B2of2 xor left-weight==B2of2
 -0,0026 right-distance==B2of2 equ left-weight==B2of2
 -0,0031 right-weight SUBTRACT right-distance
 -0,0034 left-distance SUBTRACT left-weight
 -0,0035 right-weight==B1of3 or right-distance==B2of2 or left-weight==B2of2
 -0,0040 left-distance==B2of2 or right-distance==B2of2
 -0,0040 right-weight==B2of3 or left-distance==B2of2 or right-distance==B2of2
 -0,0045 right-weight==B3of3 and left-distance==B2of2
 -0,0047 right-weight==B3of3 and left-weight==B2of2
 -0,0048 right-weight==B2of3 or right-distance==B2of2 or left-weight==B2of2
 -0,0050 right-distance==B2of2 or left-weight==B2of2
 -0,0068 left-distance DIFF left-weight
 -0,0069 right-weight DIFF right-distance
 -0,0069 right-weight==B2of3 and left-distance==B2of2 and right-distance==B2of2
 -0,0072 right-weight==B3of3 impl right-distance==B2of2
 -0,0074 right-weight==B2of3 and right-distance==B2of2 and left-weight==B2of2
 -0,0089 right-weight==B3of3 xor right-distance==B2of2
 -0,0089 right-weight==B3of3 equ right-distance==B2of2
 -0,0091 right-weight==B2of3 xor right-distance==B2of2
 -0,0091 right-weight==B2of3 equ right-distance==B2of2
 -0,0092 right-distance==B2of2 and left-weight==B2of2
 -0,0095 left-distance==B2of2 and right-distance==B2of2
 -0,0096 right-weight LESSTHAN right-distance
 -0,0109 left-distance LESSTHAN left-weight
 -0,0113 right-weight==B2of3 xor left-distance==B2of2
 -0,0113 right-weight==B2of3 equ left-distance==B2of2
 -0,0115 right-weight==B2of3 xor left-weight==B2of2
 -0,0115 right-weight==B2of3 equ left-weight==B2of2
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.5
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  3
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3209 num-of-N((left-distance >= 3) and (left-weight >= 2) and (right-distance <= 2))
 0,2217 num-of-N((left-distance >= 3) and (left-weight >= 3))
 0,2209 num-of-N((left-distance >= 3) and (right-weight <= 2))
 0,2144 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,2142 left-distance_x_right-weight
 0,2128 left-distance_x_left-weight
 0,2085 left-distance_x_right-distance
 0,2047 right-distance DIVIDE left-distance
 0,2047 left-distance SUBTRACT right-distance
 0,2047 left-distance LESSTHAN right-distance
 0,2047 left-distance DIVIDE right-distance
 0,1993 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,1989 right-weight DIVIDE left-distance
 0,1989 left-distance SUBTRACT right-weight
 0,1989 left-distance DIVIDE right-weight
 0,1947 left-distance MULTIPLY left-weight
 0,1930 right-weight_x_left-weight
 0,1921 right-weight MULTIPLY right-distance
 0,1906 left-distance LESSTHAN right-weight
 0,1897 num-of-N((left-weight >= 3) and (right-distance <= 2))
 0,1881 right-weight_x_right-distance
 0,1847 left-distance ADD left-weight
 0,1835 right-weight SUBTRACT left-weight
 0,1835 right-weight LESSTHAN left-weight
 0,1835 right-weight DIVIDE left-weight
 0,1835 left-weight DIVIDE right-weight
 0,1830 left-weight_x_right-distance
 0,1827 right-weight ADD right-distance
 0,1821 right-distance DIVIDE left-weight
 0,1821 left-weight SUBTRACT right-distance
 0,1821 left-weight DIVIDE right-distance
 0,1817 left-weight LESSTHAN right-distance
 0,1774 left-distance==B2of2 and left-weight==B2of2
 0,1774 (left-distance >= 3) and (left-weight >= 3)
 0,1764 num-of-N((right-distance <= 1) and (left-weight >= 3))
 0,1731 right-weight==B2of2 and right-distance==B2of2
 0,1721 (left-distance >= 3) and (left-weight >= 2) and (right-distance <= 2)
 0,1654 num-of-N((right-weight <= 1) and (left-weight >= 2))
 0,1400 left-distance==B2of2 impl right-weight==B2of2
 0,1400 (left-distance >= 3) and (right-weight <= 2)
 0,1349 left-distance==B2of2 impl right-distance==B2of2
 0,1349 (right-distance <= 2) and (left-distance >= 3)
 0,1334 left-weight==B2of2 impl right-distance==B2of2
 0,1334 (left-weight >= 3) and (right-distance <= 2)
 0,1331 (right-weight <= 2) and (left-weight >= 3)
 0,1263 right-weight==B2of2 impl left-weight==B2of2
 0,1132 left-distance==B2of2 or left-weight==B2of2
 0,1132 left-distance
 0,0963 (right-weight <= 1) and (left-weight >= 2)
 0,0926 (right-distance <= 1) and (left-weight >= 3)
 0,0914 right-weight
 0,0900 left-weight
 0,0830 right-distance
 0,0810 right-weight==B2of2 or right-distance==B2of2
 0,0295 right-weight==B2of2 and left-weight==B2of2 and right-distance==B2of2
 0,0277 right-weight==B2of2 xor right-distance==B2of2
 0,0277 right-weight==B2of2 equ right-distance==B2of2
 0,0264 left-distance==B2of2 and left-weight==B2of2 and right-distance==B2of2
 0,0253 left-distance==B2of2 and right-weight==B2of2 and left-weight==B2of2
 0,0243 left-distance==B2of2 or left-weight==B2of2 or right-distance==B2of2
 0,0240 left-distance DIFF right-distance
 0,0239 right-weight DIVIDE right-distance
 0,0239 right-distance DIVIDE right-weight
 0,0218 right-weight DIFF left-weight
 0,0218 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0207 left-weight DIVIDE left-distance
 0,0207 left-distance DIVIDE left-weight
 0,0190 left-weight DIFF right-distance
 0,0182 left-distance==B2of2 or right-weight==B2of2 or left-weight==B2of2
 0,0179 left-distance==B2of2 xor left-weight==B2of2
 0,0179 left-distance==B2of2 equ left-weight==B2of2
 0,0173 left-distance DIFF right-weight
 0,0103 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0088 right-weight==B2of2 or left-weight==B2of2 or right-distance==B2of2
 0,0013 right-weight MULTIPLY left-weight
 0,0013 right-weight ADD left-weight
 0,0010 right-weight==B2of2 impl right-distance==B2of2
 0,0009 left-weight MULTIPLY right-distance
 0,0009 left-weight ADD right-distance
 0,0001 left-distance==B2of2 xor right-distance==B2of2
 0,0001 left-distance==B2of2 equ right-distance==B2of2
 0,0000 left-distance MULTIPLY right-distance
 0,0000 left-distance ADD right-distance
 -0,0005 right-weight==B2of2 xor left-weight==B2of2
 -0,0005 right-weight==B2of2 equ left-weight==B2of2
 -0,0013 right-weight==B2of2 or left-weight==B2of2
 -0,0014 left-distance==B2of2 or right-distance==B2of2
 -0,0018 right-weight SUBTRACT right-distance
 -0,0025 left-distance MULTIPLY right-weight
 -0,0025 left-distance ADD right-weight
 -0,0033 left-weight==B2of2 or right-distance==B2of2
 -0,0036 left-distance==B2of2 impl left-weight==B2of2
 -0,0037 left-distance==B2of2 or right-weight==B2of2
 -0,0040 left-distance==B2of2 xor right-weight==B2of2
 -0,0040 left-distance==B2of2 equ right-weight==B2of2
 -0,0047 left-weight==B2of2 xor right-distance==B2of2
 -0,0047 left-weight==B2of2 equ right-distance==B2of2
 -0,0048 left-distance SUBTRACT left-weight
 -0,0069 right-weight DIFF right-distance
 -0,0088 left-distance==B2of2 and right-distance==B2of2
 -0,0088 left-distance DIFF left-weight
 -0,0099 left-distance==B2of2 and right-weight==B2of2
 -0,0100 right-weight==B2of2 and left-weight==B2of2
 -0,0105 left-distance LESSTHAN left-weight
 -0,0107 left-weight==B2of2 and right-distance==B2of2
 -0,0109 right-weight LESSTHAN right-distance
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  4
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3157 num-of-N((right-distance <= 2) and (left-weight >= 3) and (left-distance >= 2))
 0,2861 num-of-N((left-distance >= 3) and (right-distance <= 3) and (left-weight >= 2))
 0,2099 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,2089 (left-distance >= 3) and (right-distance <= 3) and (left-weight >= 2)
 0,2056 right-distance SUBTRACT left-weight
 0,2056 right-distance DIVIDE left-weight
 0,2056 left-weight DIVIDE right-distance
 0,2027 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,2019 right-distance_x_left-weight
 0,1980 right-distance LESSTHAN left-weight
 0,1960 right-distance MULTIPLY right-weight
 0,1941 right-distance_x_left-distance
 0,1930 right-weight DIVIDE left-distance
 0,1930 left-distance SUBTRACT right-weight
 0,1930 left-distance LESSTHAN right-weight
 0,1930 left-distance DIVIDE right-weight
 0,1922 left-distance_x_right-weight
 0,1912 right-distance DIVIDE left-distance
 0,1912 left-distance DIVIDE right-distance
 0,1912 right-distance_x_right-weight
 0,1910 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,1902 right-distance ADD right-weight
 0,1882 right-distance SUBTRACT left-distance
 0,1873 right-distance LESSTHAN left-distance
 0,1872 left-weight MULTIPLY left-distance
 0,1871 left-weight_x_right-weight
 0,1853 right-weight DIVIDE left-weight
 0,1853 left-weight SUBTRACT right-weight
 0,1853 left-weight LESSTHAN right-weight
 0,1853 left-weight DIVIDE right-weight
 0,1822 left-weight ADD left-distance
 0,1815 left-weight_x_left-distance
 0,1798 (right-distance <= 2) and (left-weight >= 3) and (left-distance >= 2)
 0,1792 num-of-N((right-weight <= 2) and (left-weight >= 2))
 0,1773 num-of-N((right-weight <= 2) and (left-distance >= 2))
 0,1668 num-of-N((right-weight <= 1) and (left-weight >= 2))
 0,1659 right-distance==B2of2 and right-weight==B2of2
 0,1643 num-of-N((right-distance <= 1) and (left-weight >= 4))
 0,1579 left-weight==B2of2 and left-distance==B2of2
 0,1579 (left-weight >= 3) and (left-distance >= 3)
 0,1577 num-of-N((left-distance >= 4) and (left-weight >= 4))
 0,1408 (right-distance <= 2) and (left-distance >= 3)
 0,1397 (right-distance <= 2) and (left-weight >= 3)
 0,1350 (right-weight <= 2) and (left-distance >= 2)
 0,1331 right-distance==B2of2 impl left-weight==B2of2
 0,1316 (right-weight <= 2) and (left-weight >= 2)
 0,1267 left-distance==B2of2 impl right-weight==B2of2
 0,1235 right-distance==B2of2 impl left-distance==B2of2
 0,1204 left-weight==B2of2 impl right-weight==B2of2
 0,1054 (left-distance >= 4) and (left-weight >= 4)
 0,0979 right-distance
 0,0968 right-distance==B2of2 or right-weight==B2of2
 0,0967 (right-weight <= 1) and (left-weight >= 2)
 0,0929 left-weight==B2of2 or left-distance==B2of2
 0,0897 left-weight
 0,0849 left-distance
 0,0848 right-weight
 0,0679 (right-distance <= 1) and (left-weight >= 4)
 0,0327 right-distance==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0314 right-distance DIFF left-weight
 0,0280 left-distance DIFF right-weight
 0,0258 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0250 right-distance==B2of2 and left-weight==B2of2 and right-weight==B2of2
 0,0200 right-distance DIFF left-distance
 0,0185 left-weight DIVIDE left-distance
 0,0185 left-distance DIVIDE left-weight
 0,0181 right-weight DIVIDE right-distance
 0,0181 right-distance DIVIDE right-weight
 0,0179 right-distance==B2of2 and left-weight==B2of2 and left-distance==B2of2
 0,0178 left-weight DIFF right-weight
 0,0162 right-distance==B2of2 or left-weight==B2of2 or right-weight==B2of2
 0,0162 right-distance==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0155 left-weight==B2of2 xor left-distance==B2of2
 0,0155 left-weight==B2of2 equ left-distance==B2of2
 0,0145 right-distance==B2of2 xor right-weight==B2of2
 0,0145 right-distance==B2of2 equ right-weight==B2of2
 0,0140 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0130 right-distance==B2of2 or left-weight==B2of2 or left-distance==B2of2
 0,0029 right-distance==B2of2 xor left-weight==B2of2
 0,0029 right-distance==B2of2 equ left-weight==B2of2
 0,0004 left-distance MULTIPLY right-weight
 0,0004 left-distance ADD right-weight
 0,0000 right-distance MULTIPLY left-weight
 0,0000 right-distance ADD left-weight
 -0,0002 left-distance==B2of2 xor right-weight==B2of2
 -0,0002 left-distance==B2of2 equ right-weight==B2of2
 -0,0007 left-weight MULTIPLY right-weight
 -0,0007 left-weight ADD right-weight
 -0,0018 right-distance MULTIPLY left-distance
 -0,0018 right-distance ADD left-distance
 -0,0019 right-distance==B2of2 xor left-distance==B2of2
 -0,0019 right-distance==B2of2 equ left-distance==B2of2
 -0,0023 left-weight==B2of2 impl left-distance==B2of2
 -0,0028 left-weight==B2of2 xor right-weight==B2of2
 -0,0028 left-weight==B2of2 equ right-weight==B2of2
 -0,0033 right-distance==B2of2 impl right-weight==B2of2
 -0,0034 right-distance==B2of2 or left-weight==B2of2
 -0,0034 left-weight==B2of2 or right-weight==B2of2
 -0,0034 left-distance==B2of2 or right-weight==B2of2
 -0,0037 left-weight SUBTRACT left-distance
 -0,0040 right-distance SUBTRACT right-weight
 -0,0063 right-distance==B2of2 or left-distance==B2of2
 -0,0069 left-weight DIFF left-distance
 -0,0078 right-distance==B2of2 and left-weight==B2of2
 -0,0080 right-distance==B2of2 and left-distance==B2of2
 -0,0095 left-distance==B2of2 and right-weight==B2of2
 -0,0097 right-distance DIFF right-weight
 -0,0102 left-weight==B2of2 and right-weight==B2of2
 -0,0106 left-weight LESSTHAN left-distance
 -0,0110 right-distance LESSTHAN right-weight
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  5
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3478 num-of-N((right-weight <= 2) and (left-weight >= 3) and (left-distance >= 3))
 0,2698 num-of-N((left-weight >= 4) and (left-distance >= 2) and (right-weight <= 3))
 0,2191 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,2158 right-weight SUBTRACT left-weight
 0,2158 right-weight DIVIDE left-weight
 0,2158 left-weight DIVIDE right-weight
 0,2115 right-weight_x_left-weight
 0,2088 left-weight_x_left-distance
 0,2085 right-weight_x_left-distance
 0,2078 right-weight LESSTHAN left-weight
 0,2019 right-weight_x_right-distance
 0,1997 num-of-N((right-weight <= 2) and (left-distance >= 3))
 0,1990 left-weight MULTIPLY left-distance
 0,1990 left-weight ADD left-distance
 0,1978 right-weight MULTIPLY right-distance
 0,1969 right-weight SUBTRACT left-distance
 0,1969 right-weight LESSTHAN left-distance
 0,1969 right-weight DIVIDE left-distance
 0,1969 left-distance DIVIDE right-weight
 0,1962 left-weight_x_right-distance
 0,1954 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,1924 right-distance_x_left-distance
 0,1920 right-distance DIVIDE left-weight
 0,1920 left-weight SUBTRACT right-distance
 0,1920 left-weight DIVIDE right-distance
 0,1917 right-weight ADD right-distance
 0,1906 left-weight LESSTHAN right-distance
 0,1882 num-of-N((left-distance >= 4) and (left-weight >= 3))
 0,1797 right-distance SUBTRACT left-distance
 0,1797 right-distance DIVIDE left-distance
 0,1797 left-distance DIVIDE right-distance
 0,1768 right-weight==B2of2 and right-distance==B2of2
 0,1761 right-distance LESSTHAN left-distance
 0,1761 left-weight==B2of2 impl left-distance==B1of3
 0,1654 (left-weight >= 3) and (left-distance >= 3)
 0,1654 num-of-N((right-weight <= 1) and (left-distance >= 2))
 0,1638 num-of-N((right-distance <= 1) and (left-distance >= 2))
 0,1624 num-of-N((right-distance <= 1) and (left-weight >= 2))
 0,1590 (right-weight <= 2) and (left-weight >= 3) and (left-distance >= 3)
 0,1527 (left-weight >= 4) and (left-distance >= 2) and (right-weight <= 3)
 0,1487 right-weight==B2of2 impl left-distance==B3of3
 0,1454 right-weight==B2of2 or left-distance==B1of3
 0,1451 right-weight==B2of2 impl left-weight==B2of2
 0,1415 (right-weight <= 2) and (left-weight >= 3)
 0,1411 left-weight==B2of2 and left-distance==B3of3
 0,1411 (left-distance >= 4) and (left-weight >= 3)
 0,1368 (right-weight <= 2) and (left-distance >= 3)
 0,1327 right-distance==B2of2 or left-distance==B1of3
 0,1303 right-distance==B2of2 impl left-distance==B3of3
 0,1244 left-weight==B2of2 impl right-distance==B2of2
 0,1067 left-weight==B2of2 or left-distance==B3of3
 0,1020 right-weight
 0,0988 left-weight
 0,0976 (right-weight <= 1) and (left-distance >= 2)
 0,0976 (right-distance <= 1) and (left-distance >= 2)
 0,0969 right-weight==B2of2 or right-distance==B2of2 or left-distance==B1of3
 0,0955 (right-distance <= 1) and (left-weight >= 2)
 0,0951 right-weight==B2of2 or right-distance==B2of2
 0,0949 right-weight==B2of2 and right-distance==B2of2 and left-distance==B2of3
 0,0883 right-weight==B2of2 and left-distance==B1of3
 0,0835 right-distance
 0,0835 (right-distance <= 2)
 0,0807 left-weight==B2of2 xor left-distance==B1of3
 0,0807 left-weight==B2of2 equ left-distance==B1of3
 0,0800 right-distance==B2of2 and left-distance==B1of3
 0,0774 left-distance
 0,0671 right-weight==B2of2 and right-distance==B2of2 and left-distance==B1of3
 0,0478 right-weight==B2of2 or right-distance==B2of2 or left-distance==B2of3
 0,0439 right-weight==B2of2 or left-distance==B2of3
 0,0406 left-weight==B2of2 impl left-distance==B2of3
 0,0389 left-weight==B2of2 and right-distance==B2of2 and left-distance==B3of3
 0,0375 right-weight==B2of2 and left-weight==B2of2 and left-distance==B3of3
 0,0369 right-weight==B2of2 and left-distance==B2of3
 0,0350 right-weight==B2of2 or right-distance==B2of2 or left-distance==B3of3
 0,0336 right-weight==B2of2 and left-weight==B2of2 and left-distance==B1of3
 0,0333 right-distance==B2of2 or left-distance==B2of3
 0,0333 left-weight==B2of2 or left-distance==B1of3
 0,0320 left-weight==B2of2 and right-distance==B2of2 and left-distance==B1of3
 0,0311 right-distance==B2of2 and left-distance==B2of3
 0,0263 left-weight==B2of2 or left-distance==B2of3
 0,0247 right-weight==B2of2 and left-weight==B2of2 and right-distance==B2of2
 0,0240 right-weight==B2of2 xor right-distance==B2of2
 0,0240 right-weight==B2of2 equ right-distance==B2of2
 0,0207 right-weight==B2of2 xor left-distance==B1of3
 0,0207 right-weight==B2of2 equ left-distance==B1of3
 0,0198 right-weight DIVIDE right-distance
 0,0198 right-distance DIVIDE right-weight
 0,0197 right-weight DIFF left-weight
 0,0184 left-weight DIVIDE left-distance
 0,0184 left-distance DIVIDE left-weight
 0,0181 left-weight DIFF right-distance
 0,0177 right-weight DIFF left-distance
 0,0173 left-weight==B2of2 and left-distance==B1of3
 0,0170 right-distance==B2of2 xor left-distance==B1of3
 0,0170 right-distance==B2of2 equ left-distance==B1of3
 0,0168 right-distance DIFF left-distance
 0,0159 right-weight==B2of2 or left-weight==B2of2 or right-distance==B2of2
 0,0128 right-weight==B2of2 xor left-distance==B3of3
 0,0128 right-weight==B2of2 equ left-distance==B3of3
 0,0105 right-weight==B2of2 impl left-distance==B2of3
 0,0081 right-distance==B2of2 xor left-distance==B3of3
 0,0081 right-distance==B2of2 equ left-distance==B3of3
 0,0065 right-weight==B2of2 impl left-distance==B1of3
 0,0054 right-distance==B2of2 impl left-distance==B2of3
 0,0050 left-weight==B2of2 or right-distance==B2of2 or left-distance==B3of3
 0,0047 right-weight==B2of2 or left-weight==B2of2 or left-distance==B3of3
 0,0045 left-weight==B2of2 and left-distance==B2of3
 0,0045 right-weight==B2of2 or left-distance==B3of3
 0,0021 right-distance==B2of2 impl left-distance==B1of3
 0,0002 right-distance==B2of2 or left-distance==B3of3
 0,0002 right-weight==B2of2 and right-distance==B2of2 and left-distance==B3of3
 -0,0002 right-weight MULTIPLY left-distance
 -0,0002 right-weight ADD left-distance
 -0,0007 right-distance MULTIPLY left-distance
 -0,0007 right-distance ADD left-distance
 -0,0008 left-weight==B2of2 or right-distance==B2of2 or left-distance==B1of3
 -0,0013 right-weight MULTIPLY left-weight
 -0,0013 right-weight ADD left-weight
 -0,0013 left-weight MULTIPLY right-distance
 -0,0013 left-weight ADD right-distance
 -0,0014 right-weight==B2of2 impl right-distance==B2of2
 -0,0020 right-weight==B2of2 xor left-weight==B2of2
 -0,0020 right-weight==B2of2 equ left-weight==B2of2
 -0,0024 right-weight==B2of2 or left-weight==B2of2 or left-distance==B1of3
 -0,0028 left-weight==B2of2 xor right-distance==B2of2
 -0,0028 left-weight==B2of2 equ right-distance==B2of2
 -0,0029 left-weight==B2of2 or right-distance==B2of2
 -0,0040 right-weight==B2of2 or left-weight==B2of2
 -0,0040 left-weight==B2of2 or right-distance==B2of2 or left-distance==B2of3
 -0,0040 right-weight==B2of2 or left-weight==B2of2 or left-distance==B2of3
 -0,0043 left-weight SUBTRACT left-distance
 -0,0048 right-weight SUBTRACT right-distance
 -0,0048 right-weight==B2of2 and left-weight==B2of2 and left-distance==B2of3
 -0,0063 right-distance==B2of2 and left-distance==B3of3
 -0,0068 right-weight==B2of2 and left-distance==B3of3
 -0,0078 left-weight==B2of2 and right-distance==B2of2 and left-distance==B2of3
 -0,0079 left-weight==B2of2 xor left-distance==B2of3
 -0,0079 left-weight==B2of2 equ left-distance==B2of3
 -0,0083 left-weight DIFF left-distance
 -0,0085 right-weight DIFF right-distance
 -0,0095 right-weight==B2of2 and left-weight==B2of2
 -0,0096 left-weight==B2of2 xor left-distance==B3of3
 -0,0096 left-weight==B2of2 equ left-distance==B3of3
 -0,0100 left-weight==B2of2 and right-distance==B2of2
 -0,0103 right-weight LESSTHAN right-distance
 -0,0107 left-weight LESSTHAN left-distance
 -0,0109 left-weight==B2of2 impl left-distance==B3of3
 -0,0111 right-weight==B2of2 xor left-distance==B2of3
 -0,0111 right-weight==B2of2 equ left-distance==B2of3
 -0,0114 right-distance==B2of2 xor left-distance==B2of3
 -0,0114 right-distance==B2of2 equ left-distance==B2of3
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.5
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  6
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3142 num-of-N((right-weight <= 2) and (left-weight >= 2) and (left-distance >= 2))
 0,2738 num-of-N((right-distance <= 3) and (right-weight <= 2) and (left-weight >= 2))
 0,2206 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,2188 num-of-N((right-weight <= 2) and (left-distance >= 3))
 0,2187 num-of-N((left-weight >= 3) and (right-weight <= 2))
 0,2124 left-weight_x_right-weight
 0,2115 right-weight DIVIDE left-distance
 0,2115 left-distance SUBTRACT right-weight
 0,2115 left-distance LESSTHAN right-weight
 0,2115 left-distance DIVIDE right-weight
 0,2114 left-distance_x_left-weight
 0,2112 (right-weight <= 2) and (left-weight >= 2) and (left-distance >= 2)
 0,2111 left-distance_x_right-weight
 0,2105 left-distance MULTIPLY left-weight
 0,2089 num-of-N((left-weight >= 3) and (right-distance <= 2))
 0,2017 left-weight_x_right-distance
 0,1971 left-distance ADD left-weight
 0,1968 left-distance_x_right-distance
 0,1967 right-distance DIVIDE left-distance
 0,1967 left-distance SUBTRACT right-distance
 0,1967 left-distance LESSTHAN right-distance
 0,1967 left-distance DIVIDE right-distance
 0,1955 right-weight MULTIPLY right-distance
 0,1926 right-weight ADD right-distance
 0,1917 right-weight DIVIDE left-weight
 0,1917 left-weight SUBTRACT right-weight
 0,1917 left-weight DIVIDE right-weight
 0,1909 left-weight LESSTHAN right-weight
 0,1899 right-weight_x_right-distance
 0,1859 left-distance==B2of2 and left-weight==B2of2
 0,1859 (left-weight >= 3) and (left-distance >= 3)
 0,1844 right-distance DIVIDE left-weight
 0,1844 left-weight SUBTRACT right-distance
 0,1844 left-weight LESSTHAN right-distance
 0,1844 left-weight DIVIDE right-distance
 0,1839 num-of-N((right-distance <= 2) and (left-distance >= 2))
 0,1823 num-of-N((right-distance <= 2) and (left-distance >= 4))
 0,1694 right-weight==B2of2 and right-distance==B2of2
 0,1639 num-of-N((right-distance <= 1) and (left-weight >= 2))
 0,1439 left-weight==B2of2 impl right-weight==B2of2
 0,1439 (left-weight >= 3) and (right-weight <= 2)
 0,1400 left-distance==B2of2 impl right-weight==B2of2
 0,1400 (right-weight <= 2) and (left-distance >= 3)
 0,1371 (right-distance <= 2) and (left-distance >= 2)
 0,1305 left-weight==B2of2 impl right-distance==B2of2
 0,1305 (left-weight >= 3) and (right-distance <= 2)
 0,1247 left-distance==B2of2 impl right-distance==B2of2
 0,1238 (right-distance <= 3) and (right-weight <= 2) and (left-weight >= 2)
 0,1017 left-distance==B2of2 or left-weight==B2of2
 0,1006 left-distance
 0,0998 left-weight
 0,0949 right-weight
 0,0943 (right-distance <= 1) and (left-weight >= 2)
 0,0907 right-weight==B2of2 or right-distance==B2of2
 0,0900 (right-distance <= 2) and (left-distance >= 4)
 0,0863 right-distance
 0,0356 left-distance==B2of2 and left-weight==B2of2 and right-distance==B2of2
 0,0344 left-distance==B2of2 and left-weight==B2of2 and right-weight==B2of2
 0,0273 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0233 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0218 left-weight DIVIDE left-distance
 0,0218 left-distance DIVIDE left-weight
 0,0217 left-distance DIFF right-distance
 0,0215 left-distance DIFF right-weight
 0,0214 left-weight DIFF right-weight
 0,0210 left-distance==B2of2 xor left-weight==B2of2
 0,0210 left-distance==B2of2 equ left-weight==B2of2
 0,0203 right-weight DIVIDE right-distance
 0,0203 right-distance DIVIDE right-weight
 0,0200 left-weight DIFF right-distance
 0,0200 left-distance==B2of2 or left-weight==B2of2 or right-weight==B2of2
 0,0198 right-weight==B2of2 xor right-distance==B2of2
 0,0198 right-weight==B2of2 equ right-distance==B2of2
 0,0150 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0141 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0133 left-distance==B2of2 or left-weight==B2of2 or right-distance==B2of2
 0,0020 left-distance==B2of2 xor right-distance==B2of2
 0,0020 left-distance==B2of2 equ right-distance==B2of2
 0,0008 left-weight MULTIPLY right-weight
 0,0008 left-weight ADD right-weight
 0,0007 left-distance==B2of2 impl left-weight==B2of2
 0,0007 left-distance==B2of2 xor right-weight==B2of2
 0,0007 left-distance==B2of2 equ right-weight==B2of2
 0,0003 left-weight==B2of2 xor right-distance==B2of2
 0,0003 left-weight==B2of2 equ right-distance==B2of2
 0,0002 left-distance MULTIPLY right-distance
 0,0002 left-distance ADD right-distance
 0,0002 left-weight==B2of2 xor right-weight==B2of2
 0,0002 left-weight==B2of2 equ right-weight==B2of2
 -0,0002 left-weight MULTIPLY right-distance
 -0,0002 left-weight ADD right-distance
 -0,0004 left-distance MULTIPLY right-weight
 -0,0004 left-distance ADD right-weight
 -0,0010 left-weight==B2of2 or right-weight==B2of2
 -0,0013 right-weight==B2of2 impl right-distance==B2of2
 -0,0028 left-weight==B2of2 or right-distance==B2of2
 -0,0033 left-distance==B2of2 or right-weight==B2of2
 -0,0037 left-distance SUBTRACT left-weight
 -0,0037 right-weight SUBTRACT right-distance
 -0,0044 left-distance==B2of2 or right-distance==B2of2
 -0,0071 left-distance==B2of2 and right-distance==B2of2
 -0,0077 left-distance DIFF left-weight
 -0,0088 left-distance==B2of2 and right-weight==B2of2
 -0,0090 left-weight==B2of2 and right-distance==B2of2
 -0,0091 right-weight DIFF right-distance
 -0,0100 left-weight==B2of2 and right-weight==B2of2
 -0,0100 right-weight LESSTHAN right-distance
 -0,0111 left-distance LESSTHAN left-weight
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.5
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  7
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3421 num-of-N((right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3))
 0,2679 num-of-N((left-distance >= 4) and (left-weight >= 2) and (right-distance <= 3))
 0,2653 num-of-N((right-weight <= 1) and (left-weight >= 2) and (left-distance >= 2))
 0,2128 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,2077 right-distance SUBTRACT left-weight
 0,2077 right-distance LESSTHAN left-weight
 0,2077 right-distance DIVIDE left-weight
 0,2077 left-weight DIVIDE right-distance
 0,2071 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,2057 right-distance_x_left-weight
 0,2027 right-distance SUBTRACT left-distance
 0,2027 right-distance LESSTHAN left-distance
 0,2027 right-distance DIVIDE left-distance
 0,2027 left-distance DIVIDE right-distance
 0,2013 right-distance_x_right-weight
 0,2006 right-distance_x_left-distance
 0,2006 right-distance MULTIPLY right-weight
 0,1977 num-of-N((right-distance <= 1) and (left-weight >= 2))
 0,1974 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,1946 num-of-N((left-distance >= 3) and (left-weight >= 3))
 0,1939 num-of-N((left-distance >= 3) and (right-weight <= 2))
 0,1913 left-weight MULTIPLY left-distance
 0,1908 right-distance ADD right-weight
 0,1892 left-weight_x_right-weight
 0,1881 num-of-N((right-weight <= 2) and (right-distance <= 3))
 0,1868 right-weight_x_left-distance
 0,1863 right-weight DIVIDE left-weight
 0,1863 left-weight SUBTRACT right-weight
 0,1863 left-weight DIVIDE right-weight
 0,1852 left-weight_x_left-distance
 0,1821 left-weight ADD left-distance
 0,1757 left-weight LESSTHAN right-weight
 0,1732 num-of-N((left-weight >= 4) and (left-distance >= 3))
 0,1731 right-distance==B2of2 and right-weight==B2of2
 0,1724 right-weight SUBTRACT left-distance
 0,1724 right-weight LESSTHAN left-distance
 0,1724 right-weight DIVIDE left-distance
 0,1724 left-distance DIVIDE right-weight
 0,1674 left-weight==B2of2 and left-distance==B2of2
 0,1674 (left-distance >= 3) and (left-weight >= 3)
 0,1638 num-of-N((right-weight <= 3) and (right-distance <= 1))
 0,1558 (right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3)
 0,1458 (left-distance >= 4) and (left-weight >= 2) and (right-distance <= 3)
 0,1413 (right-distance <= 2) and (left-weight >= 3)
 0,1380 right-distance==B2of2 impl left-distance==B2of2
 0,1347 right-distance==B2of2 impl left-weight==B2of2
 0,1321 (right-distance <= 2) and (left-distance >= 3)
 0,1302 (left-weight >= 4) and (left-distance >= 3)
 0,1270 left-weight==B2of2 impl right-weight==B2of2
 0,1270 (right-weight <= 2) and (left-weight >= 3)
 0,1257 right-weight==B2of2 impl left-distance==B2of2
 0,1249 (left-distance >= 3) and (right-weight <= 2)
 0,1198 (right-distance <= 1) and (left-weight >= 2)
 0,1198 (right-weight <= 1) and (left-weight >= 2) and (left-distance >= 2)
 0,1114 (right-weight <= 2) and (right-distance <= 3)
 0,1021 right-distance
 0,1006 right-distance==B2of2 or right-weight==B2of2
 0,0897 left-weight
 0,0861 right-weight
 0,0854 left-weight==B2of2 or left-distance==B2of2
 0,0854 left-distance
 0,0842 (right-weight <= 3) and (right-distance <= 1)
 0,0298 right-distance==B2of2 and left-weight==B2of2 and right-weight==B2of2
 0,0284 left-weight==B2of2 and right-weight==B2of2 and left-distance==B2of2
 0,0276 right-distance==B2of2 and right-weight==B2of2 and left-distance==B2of2
 0,0274 right-distance DIFF left-weight
 0,0251 right-weight DIFF left-distance
 0,0250 right-weight DIVIDE right-distance
 0,0250 right-distance DIVIDE right-weight
 0,0231 right-distance==B2of2 and left-weight==B2of2 and left-distance==B2of2
 0,0226 left-weight==B2of2 xor left-distance==B2of2
 0,0226 left-weight==B2of2 equ left-distance==B2of2
 0,0223 right-distance DIFF left-distance
 0,0211 left-weight DIFF right-weight
 0,0202 right-distance==B2of2 or right-weight==B2of2 or left-distance==B2of2
 0,0201 right-distance==B2of2 xor right-weight==B2of2
 0,0201 right-distance==B2of2 equ right-weight==B2of2
 0,0191 left-weight DIVIDE left-distance
 0,0191 left-distance DIVIDE left-weight
 0,0180 right-distance==B2of2 or left-weight==B2of2 or right-weight==B2of2
 0,0137 left-weight==B2of2 or right-weight==B2of2 or left-distance==B2of2
 0,0129 right-distance==B2of2 or left-weight==B2of2 or left-distance==B2of2
 0,0027 right-distance==B2of2 xor left-weight==B2of2
 0,0027 right-distance==B2of2 equ left-weight==B2of2
 0,0017 right-distance MULTIPLY left-weight
 0,0017 right-distance ADD left-weight
 0,0015 right-weight==B2of2 xor left-distance==B2of2
 0,0015 right-weight==B2of2 equ left-distance==B2of2
 0,0010 right-distance MULTIPLY left-distance
 0,0010 right-distance ADD left-distance
 0,0003 left-weight==B2of2 impl left-distance==B2of2
 0,0001 right-weight MULTIPLY left-distance
 0,0001 right-weight ADD left-distance
 -0,0013 left-weight MULTIPLY right-weight
 -0,0013 left-weight ADD right-weight
 -0,0018 right-distance==B2of2 or left-weight==B2of2
 -0,0020 right-weight==B2of2 or left-distance==B2of2
 -0,0024 right-distance==B2of2 or left-distance==B2of2
 -0,0024 right-distance SUBTRACT right-weight
 -0,0026 right-distance==B2of2 impl right-weight==B2of2
 -0,0028 right-distance==B2of2 xor left-distance==B2of2
 -0,0028 right-distance==B2of2 equ left-distance==B2of2
 -0,0030 left-weight SUBTRACT left-distance
 -0,0037 left-weight==B2of2 xor right-weight==B2of2
 -0,0037 left-weight==B2of2 equ right-weight==B2of2
 -0,0057 left-weight==B2of2 or right-weight==B2of2
 -0,0069 right-distance DIFF right-weight
 -0,0084 right-distance==B2of2 and left-weight==B2of2
 -0,0090 left-weight DIFF left-distance
 -0,0092 right-weight==B2of2 and left-distance==B2of2
 -0,0093 right-distance LESSTHAN right-weight
 -0,0095 left-weight==B2of2 and right-weight==B2of2
 -0,0102 right-distance==B2of2 and left-distance==B2of2
 -0,0111 left-weight LESSTHAN left-distance
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  8
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3327 num-of-N((left-weight >= 3) and (left-distance >= 3) and (right-weight <= 3))
 0,2896 num-of-N((right-distance <= 2) and (left-weight >= 2) and (left-distance >= 2))
 0,2781 num-of-N((right-weight <= 3) and (right-distance <= 3) and (left-weight >= 2))
 0,2208 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,2200 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,2147 left-weight_x_right-distance
 0,2129 left-weight_x_right-weight
 0,2068 (left-weight >= 3) and (left-distance >= 3) and (right-weight <= 3)
 0,2065 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,2032 right-weight DIVIDE left-weight
 0,2032 left-weight SUBTRACT right-weight
 0,2032 left-weight LESSTHAN right-weight
 0,2032 left-weight DIVIDE right-weight
 0,2031 right-weight_x_left-distance
 0,2017 left-weight MULTIPLY left-distance
 0,2016 right-weight SUBTRACT left-distance
 0,2016 right-weight DIVIDE left-distance
 0,2016 left-distance DIVIDE right-weight
 0,1998 right-weight LESSTHAN left-distance
 0,1997 right-distance DIVIDE left-weight
 0,1997 left-weight SUBTRACT right-distance
 0,1997 left-weight LESSTHAN right-distance
 0,1997 left-weight DIVIDE right-distance
 0,1995 right-weight_x_right-distance
 0,1985 right-weight MULTIPLY right-distance
 0,1973 left-weight_x_left-distance
 0,1970 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,1938 num-of-N((right-weight <= 2) and (left-distance >= 2))
 0,1927 right-weight ADD right-distance
 0,1911 right-distance_x_left-distance
 0,1886 left-weight ADD left-distance
 0,1815 (right-distance <= 2) and (left-weight >= 2) and (left-distance >= 2)
 0,1792 right-distance SUBTRACT left-distance
 0,1792 right-distance LESSTHAN left-distance
 0,1792 right-distance DIVIDE left-distance
 0,1792 left-distance DIVIDE right-distance
 0,1750 left-weight==B2of2 and left-distance==B2of2
 0,1750 (left-weight >= 3) and (left-distance >= 3)
 0,1744 num-of-N((right-weight <= 1) and (left-distance >= 2))
 0,1700 right-weight==B2of2 and right-distance==B2of2
 0,1628 num-of-N((left-weight >= 4) and (left-distance >= 4))
 0,1591 (right-weight <= 3) and (right-distance <= 3) and (left-weight >= 2)
 0,1503 left-weight==B2of2 impl right-weight==B2of2
 0,1503 (right-weight <= 2) and (left-weight >= 3)
 0,1465 (right-weight <= 2) and (left-distance >= 2)
 0,1364 left-weight==B2of2 impl right-distance==B2of2
 0,1364 (right-distance <= 2) and (left-weight >= 3)
 0,1355 right-weight==B2of2 impl left-distance==B2of2
 0,1294 right-distance==B2of2 impl left-distance==B2of2
 0,1279 (right-distance <= 2) and (left-distance >= 3)
 0,1074 (right-weight <= 1) and (left-distance >= 2)
 0,1074 (left-weight >= 4) and (left-distance >= 4)
 0,1052 right-weight==B2of2 or right-distance==B2of2
 0,1023 left-weight
 0,1012 right-weight
 0,0949 left-weight==B2of2 or left-distance==B2of2
 0,0938 right-distance
 0,0872 left-distance
 0,0294 left-weight==B2of2 and right-distance==B2of2 and left-distance==B2of2
 0,0228 right-weight==B2of2 and right-distance==B2of2 and left-distance==B2of2
 0,0217 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0214 left-weight==B2of2 and right-weight==B2of2 and left-distance==B2of2
 0,0212 left-weight==B2of2 xor left-distance==B2of2
 0,0212 left-weight==B2of2 equ left-distance==B2of2
 0,0208 left-weight DIVIDE left-distance
 0,0208 left-distance DIVIDE left-weight
 0,0196 left-weight DIFF right-weight
 0,0179 right-distance DIFF left-distance
 0,0173 left-weight DIFF right-distance
 0,0168 right-weight DIFF left-distance
 0,0168 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0166 right-weight DIVIDE right-distance
 0,0166 right-distance DIVIDE right-weight
 0,0164 right-weight==B2of2 xor right-distance==B2of2
 0,0164 right-weight==B2of2 equ right-distance==B2of2
 0,0141 left-weight==B2of2 or right-weight==B2of2 or left-distance==B2of2
 0,0138 right-weight==B2of2 or right-distance==B2of2 or left-distance==B2of2
 0,0131 left-weight==B2of2 or right-distance==B2of2 or left-distance==B2of2
 0,0013 right-weight MULTIPLY left-distance
 0,0013 right-weight ADD left-distance
 0,0013 left-weight MULTIPLY right-weight
 0,0013 left-weight ADD right-weight
 0,0001 right-distance MULTIPLY left-distance
 0,0001 right-distance ADD left-distance
 -0,0012 right-weight==B2of2 impl right-distance==B2of2
 -0,0012 left-weight==B2of2 xor right-weight==B2of2
 -0,0012 left-weight==B2of2 equ right-weight==B2of2
 -0,0013 left-weight MULTIPLY right-distance
 -0,0013 left-weight ADD right-distance
 -0,0015 right-distance==B2of2 or left-distance==B2of2
 -0,0019 left-weight==B2of2 impl left-distance==B2of2
 -0,0025 left-weight==B2of2 or right-weight==B2of2
 -0,0028 right-distance==B2of2 xor left-distance==B2of2
 -0,0028 right-distance==B2of2 equ left-distance==B2of2
 -0,0028 left-weight==B2of2 or right-distance==B2of2
 -0,0031 right-weight SUBTRACT right-distance
 -0,0042 left-weight SUBTRACT left-distance
 -0,0050 right-weight==B2of2 xor left-distance==B2of2
 -0,0050 right-weight==B2of2 equ left-distance==B2of2
 -0,0052 left-weight==B2of2 xor right-distance==B2of2
 -0,0052 left-weight==B2of2 equ right-distance==B2of2
 -0,0052 right-weight==B2of2 or left-distance==B2of2
 -0,0076 right-weight DIFF right-distance
 -0,0081 left-weight DIFF left-distance
 -0,0098 left-weight==B2of2 and right-weight==B2of2
 -0,0101 right-weight==B2of2 and left-distance==B2of2
 -0,0105 left-weight LESSTHAN left-distance
 -0,0106 right-distance==B2of2 and left-distance==B2of2
 -0,0108 left-weight==B2of2 and right-distance==B2of2
 -0,0110 right-weight LESSTHAN right-distance
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  9
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,2959 num-of-N((left-weight >= 3) and (right-distance <= 3) and (left-distance >= 3))
 0,2759 num-of-N((left-distance >= 3) and (right-weight <= 3) and (left-weight >= 2))
 0,1965 right-distance MULTIPLY right-weight
 0,1960 right-distance SUBTRACT left-distance
 0,1960 right-distance LESSTHAN left-distance
 0,1960 right-distance DIVIDE left-distance
 0,1960 left-distance DIVIDE right-distance
 0,1938 (left-distance >= 3) and (right-weight <= 3) and (left-weight >= 2)
 0,1931 right-weight DIVIDE left-weight
 0,1931 left-weight SUBTRACT right-weight
 0,1931 left-weight DIVIDE right-weight
 0,1925 right-distance SUBTRACT left-weight
 0,1925 right-distance DIVIDE left-weight
 0,1925 left-weight DIVIDE right-distance
 0,1913 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,1908 right-distance_x_left-distance
 0,1903 right-distance ADD right-weight
 0,1896 left-weight LESSTHAN right-weight
 0,1883 right-weight DIVIDE left-distance
 0,1883 left-distance SUBTRACT right-weight
 0,1883 left-distance DIVIDE right-weight
 0,1880 right-distance_x_left-weight
 0,1850 left-weight MULTIPLY left-distance
 0,1848 right-distance LESSTHAN left-weight
 0,1847 left-distance LESSTHAN right-weight
 0,1831 left-weight_x_right-weight
 0,1825 num-of-N((left-distance >= 3) and (right-weight <= 2))
 0,1819 right-distance_x_right-weight
 0,1810 num-of-N((right-distance <= 2) and (left-weight >= 2))
 0,1804 left-weight_x_left-distance
 0,1770 num-of-N((right-distance <= 2) and (left-distance >= 2))
 0,1764 left-weight ADD left-distance
 0,1750 (left-weight >= 3) and (right-distance <= 3) and (left-distance >= 3)
 0,1749 left-distance_x_right-weight
 0,1664 right-distance==B2of2 and right-weight==B2of2
 0,1605 num-of-N((right-distance <= 1) and (left-distance >= 2))
 0,1603 left-weight==B2of2 and left-distance==B2of2
 0,1572 num-of-N((left-distance >= 4) and (left-weight >= 4))
 0,1523 num-of-N((right-distance <= 3) and (right-weight <= 1))
 0,1425 (right-distance <= 2) and (left-distance >= 2)
 0,1332 (right-distance <= 2) and (left-weight >= 2)
 0,1321 right-distance==B2of2 impl left-weight==B2of2
 0,1257 left-weight==B2of2 impl right-weight==B2of2
 0,1257 (right-weight <= 2) and (left-weight >= 3)
 0,1253 right-distance==B2of2 impl left-distance==B2of2
 0,1175 num-of-N((left-weight >= 5) and (right-distance <= 3))
 0,1161 left-distance==B2of2 impl right-weight==B2of2
 0,1161 (left-distance >= 3) and (right-weight <= 2)
 0,1126 (left-distance >= 4) and (left-weight >= 4)
 0,1029 (right-distance <= 1) and (left-distance >= 2)
 0,0900 right-distance
 0,0862 left-weight==B2of2 or left-distance==B2of2
 0,0846 left-weight
 0,0833 left-distance
 0,0814 right-weight
 0,0813 right-distance==B2of2 or right-weight==B2of2
 0,0667 (right-distance <= 3) and (right-weight <= 1)
 0,0555 (left-weight >= 5) and (right-distance <= 3)
 0,0287 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0268 right-distance==B2of2 and left-weight==B2of2 and left-distance==B2of2
 0,0254 right-distance==B2of2 and left-weight==B2of2 and right-weight==B2of2
 0,0254 right-distance==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0253 right-distance==B2of2 xor right-weight==B2of2
 0,0253 right-distance==B2of2 equ right-weight==B2of2
 0,0207 right-weight DIVIDE right-distance
 0,0207 right-distance DIVIDE right-weight
 0,0183 left-weight==B2of2 xor left-distance==B2of2
 0,0183 left-weight==B2of2 equ left-distance==B2of2
 0,0178 left-weight DIVIDE left-distance
 0,0178 left-distance DIVIDE left-weight
 0,0168 right-distance DIFF left-distance
 0,0152 left-distance DIFF right-weight
 0,0152 left-weight DIFF right-weight
 0,0132 right-distance DIFF left-weight
 0,0131 right-distance==B2of2 or left-weight==B2of2 or right-weight==B2of2
 0,0129 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0121 right-distance==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0119 right-distance==B2of2 or left-weight==B2of2 or left-distance==B2of2
 0,0002 right-distance==B2of2 impl right-weight==B2of2
 -0,0007 left-weight==B2of2 impl left-distance==B2of2
 -0,0018 left-distance MULTIPLY right-weight
 -0,0018 left-distance ADD right-weight
 -0,0019 right-distance==B2of2 xor left-distance==B2of2
 -0,0019 right-distance==B2of2 equ left-distance==B2of2
 -0,0020 left-weight==B2of2 xor right-weight==B2of2
 -0,0020 left-weight==B2of2 equ right-weight==B2of2
 -0,0023 right-distance MULTIPLY left-distance
 -0,0023 right-distance ADD left-distance
 -0,0025 right-distance MULTIPLY left-weight
 -0,0025 right-distance ADD left-weight
 -0,0028 right-distance==B2of2 or left-distance==B2of2
 -0,0031 left-distance==B2of2 xor right-weight==B2of2
 -0,0031 left-distance==B2of2 equ right-weight==B2of2
 -0,0032 left-weight MULTIPLY right-weight
 -0,0032 left-weight ADD right-weight
 -0,0032 right-distance==B2of2 xor left-weight==B2of2
 -0,0032 right-distance==B2of2 equ left-weight==B2of2
 -0,0042 right-distance SUBTRACT right-weight
 -0,0042 left-distance==B2of2 or right-weight==B2of2
 -0,0043 left-weight SUBTRACT left-distance
 -0,0045 right-distance==B2of2 or left-weight==B2of2
 -0,0051 left-weight==B2of2 or right-weight==B2of2
 -0,0051 right-distance DIFF right-weight
 -0,0063 left-weight DIFF left-distance
 -0,0093 left-weight==B2of2 and right-weight==B2of2
 -0,0099 right-distance LESSTHAN right-weight
 -0,0099 right-distance==B2of2 and left-weight==B2of2
 -0,0100 left-distance==B2of2 and right-weight==B2of2
 -0,0101 right-distance==B2of2 and left-distance==B2of2
 -0,0110 left-weight LESSTHAN left-distance
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold 10
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3147 num-of-N((right-distance <= 2) and (left-weight >= 3) and (left-distance >= 2))
 0,2579 num-of-N((left-distance >= 4) and (left-weight >= 2) and (right-distance <= 3))
 0,2081 right-distance SUBTRACT left-weight
 0,2081 right-distance LESSTHAN left-weight
 0,2081 right-distance DIVIDE left-weight
 0,2081 left-weight DIVIDE right-distance
 0,2056 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,2024 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,2019 right-weight DIVIDE left-weight
 0,2019 left-weight SUBTRACT right-weight
 0,2019 left-weight DIVIDE right-weight
 0,2004 right-distance_x_left-weight
 0,2003 right-distance SUBTRACT left-distance
 0,2003 right-distance DIVIDE left-distance
 0,2003 left-distance DIVIDE right-distance
 0,1989 right-distance LESSTHAN left-distance
 0,1961 right-distance_x_left-distance
 0,1926 left-weight MULTIPLY left-distance
 0,1926 right-distance MULTIPLY right-weight
 0,1900 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,1890 right-distance_x_right-weight
 0,1860 left-weight ADD left-distance
 0,1859 num-of-N((right-weight <= 2) and (left-weight >= 2))
 0,1845 left-weight_x_right-weight
 0,1834 right-weight SUBTRACT left-distance
 0,1834 right-weight DIVIDE left-distance
 0,1834 left-distance DIVIDE right-weight
 0,1830 left-weight LESSTHAN right-weight
 0,1806 left-weight_x_left-distance
 0,1802 right-distance ADD right-weight
 0,1788 num-of-N((left-weight >= 4) and (left-distance >= 3))
 0,1768 (right-distance <= 2) and (left-weight >= 3) and (left-distance >= 2)
 0,1768 right-weight_x_left-distance
 0,1747 right-weight LESSTHAN left-distance
 0,1743 num-of-N((right-weight <= 1) and (left-weight >= 2))
 0,1717 num-of-N((right-distance <= 1) and (left-weight >= 2))
 0,1702 num-of-N((right-weight <= 2) and (left-distance >= 2))
 0,1646 right-distance==B2of2 and right-weight==B2of2
 0,1597 left-weight==B2of2 and left-distance==B2of2
 0,1597 (left-weight >= 3) and (left-distance >= 3)
 0,1388 (right-distance <= 2) and (left-weight >= 3)
 0,1381 (right-weight <= 2) and (left-weight >= 2)
 0,1369 (left-weight >= 4) and (left-distance >= 3)
 0,1367 (left-distance >= 4) and (left-weight >= 2) and (right-distance <= 3)
 0,1357 (right-distance <= 2) and (left-distance >= 3)
 0,1289 right-distance==B2of2 impl left-weight==B2of2
 0,1275 right-distance==B2of2 impl left-distance==B2of2
 0,1272 left-weight==B2of2 impl right-weight==B2of2
 0,1265 (right-weight <= 2) and (left-distance >= 2)
 0,1244 right-weight==B2of2 impl left-distance==B2of2
 0,1062 (right-distance <= 1) and (left-weight >= 2)
 0,1040 (right-weight <= 1) and (left-weight >= 2)
 0,0979 right-distance
 0,0950 right-distance==B2of2 or right-weight==B2of2
 0,0895 left-weight
 0,0884 left-weight==B2of2 or left-distance==B2of2
 0,0827 right-weight
 0,0825 left-distance
 0,0270 right-distance==B2of2 and left-weight==B2of2 and right-weight==B2of2
 0,0265 left-weight DIFF right-weight
 0,0236 right-distance==B2of2 and right-weight==B2of2 and left-distance==B2of2
 0,0222 right-distance DIFF left-distance
 0,0217 left-weight==B2of2 and right-weight==B2of2 and left-distance==B2of2
 0,0194 left-weight DIVIDE left-distance
 0,0194 left-distance DIVIDE left-weight
 0,0186 right-distance==B2of2 and left-weight==B2of2 and left-distance==B2of2
 0,0179 left-weight==B2of2 xor left-distance==B2of2
 0,0179 left-weight==B2of2 equ left-distance==B2of2
 0,0176 right-weight DIVIDE right-distance
 0,0176 right-distance DIVIDE right-weight
 0,0172 right-distance==B2of2 or right-weight==B2of2 or left-distance==B2of2
 0,0161 right-distance==B2of2 or left-weight==B2of2 or left-distance==B2of2
 0,0158 right-distance==B2of2 xor right-weight==B2of2
 0,0158 right-distance==B2of2 equ right-weight==B2of2
 0,0153 right-distance DIFF left-weight
 0,0150 right-weight DIFF left-distance
 0,0145 right-distance==B2of2 or left-weight==B2of2 or right-weight==B2of2
 0,0143 left-weight==B2of2 or right-weight==B2of2 or left-distance==B2of2
 0,0013 right-distance MULTIPLY left-weight
 0,0013 right-distance ADD left-weight
 0,0000 left-weight MULTIPLY right-weight
 0,0000 left-weight ADD right-weight
 -0,0002 right-distance==B2of2 or left-weight==B2of2
 -0,0013 right-distance MULTIPLY left-distance
 -0,0013 right-distance ADD left-distance
 -0,0019 left-weight==B2of2 impl left-distance==B2of2
 -0,0020 right-distance==B2of2 or left-distance==B2of2
 -0,0022 left-weight==B2of2 or right-weight==B2of2
 -0,0025 right-distance==B2of2 xor left-weight==B2of2
 -0,0025 right-distance==B2of2 equ left-weight==B2of2
 -0,0029 right-weight==B2of2 xor left-distance==B2of2
 -0,0029 right-weight==B2of2 equ left-distance==B2of2
 -0,0031 right-distance SUBTRACT right-weight
 -0,0031 left-weight SUBTRACT left-distance
 -0,0031 right-weight MULTIPLY left-distance
 -0,0031 right-weight ADD left-distance
 -0,0032 right-distance==B2of2 xor left-distance==B2of2
 -0,0032 right-distance==B2of2 equ left-distance==B2of2
 -0,0033 left-weight==B2of2 xor right-weight==B2of2
 -0,0033 left-weight==B2of2 equ right-weight==B2of2
 -0,0035 right-weight==B2of2 or left-distance==B2of2
 -0,0038 right-distance==B2of2 impl right-weight==B2of2
 -0,0087 right-distance DIFF right-weight
 -0,0096 left-weight DIFF left-distance
 -0,0102 right-distance LESSTHAN right-weight
 -0,0102 right-weight==B2of2 and left-distance==B2of2
 -0,0104 left-weight LESSTHAN left-distance
 -0,0106 right-distance==B2of2 and left-distance==B2of2
 -0,0106 right-distance==B2of2 and left-weight==B2of2
 -0,0107 left-weight==B2of2 and right-weight==B2of2
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
