dataset: Balance scale.arff
								--------------
									Fold  1
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3427 num-of-N((right-weight <= 2) and (left-distance >= 3) and (left-weight >= 3))
 0,3250 num-of-N((left-distance >= 3) and (right-weight <= 2) and (left-weight >= 2))
 0,3122 num-of-N((right-distance <= 2) and (left-weight >= 3) and (left-distance >= 2))
 0,2948 num-of-N((right-weight <= 1) and (left-weight >= 2) and (left-distance >= 3))
 0,2638 num-of-N((left-distance >= 4) and (left-weight >= 4) and (right-distance <= 3))
 0,2553 num-of-N((left-weight >= 4) and (right-weight <= 3) and (left-distance >= 2))
 0,2553 num-of-N((left-weight >= 4) and (left-distance >= 2) and (right-weight <= 3))
 0,2206 num-of-N((left-distance >= 5) and (right-weight <= 4) and (right-distance <= 4) and (left-weight >= 2))
 0,2125 num-of-N((left-distance >= 3) and (right-weight <= 2))
 0,2098 num-of-N((left-distance >= 3) and (left-weight >= 3))
 0,2071 left-distance_x_right-weight
 0,2052 left-distance_x_right-distance
 0,2042 left-weight MULTIPLY left-distance
 0,2011 left-weight_x_left-distance
 0,2004 right-distance DIVIDE left-distance
 0,2004 left-distance SUBTRACT right-distance
 0,2004 left-distance LESSTHAN right-distance
 0,2004 left-distance DIVIDE right-distance
 0,2003 right-weight DIVIDE left-distance
 0,2003 left-distance SUBTRACT right-weight
 0,2003 left-distance DIVIDE right-weight
 0,1969 left-distance LESSTHAN right-weight
 0,1954 num-of-N((right-distance <= 1) and (left-distance >= 3))
 0,1930 left-weight ADD left-distance
 0,1926 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,1916 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,1895 (left-distance >= 3) and (right-weight <= 2) and (left-weight >= 2)
 0,1892 right-weight_x_right-distance
 0,1872 num-of-N((right-distance <= 2) and (left-distance >= 2))
 0,1854 num-of-N((left-distance >= 4) and (left-weight >= 3))
 0,1851 left-weight_x_right-weight
 0,1839 right-weight DIVIDE left-weight
 0,1839 left-weight SUBTRACT right-weight
 0,1839 left-weight LESSTHAN right-weight
 0,1839 left-weight DIVIDE right-weight
 0,1837 num-of-N((left-distance >= 3) and (right-distance <= 3))
 0,1835 left-weight_x_right-distance
 0,1804 right-weight MULTIPLY right-distance
 0,1792 (right-distance <= 2) and (left-weight >= 3) and (left-distance >= 2)
 0,1785 right-weight ADD right-distance
 0,1768 left-weight==B2of2 and left-distance==B2of2
 0,1768 (left-distance >= 3) and (left-weight >= 3)
 0,1755 num-of-N((right-distance <= 1) and (left-distance >= 2))
 0,1755 num-of-N((left-distance >= 2) and (right-distance <= 1))
 0,1739 num-of-N((right-weight <= 1) and (right-distance <= 2))
 0,1733 right-distance DIVIDE left-weight
 0,1733 left-weight SUBTRACT right-distance
 0,1733 left-weight DIVIDE right-distance
 0,1726 num-of-N((left-distance >= 2) and (right-weight <= 1))
 0,1726 num-of-N((left-distance >= 4) and (right-weight <= 3))
 0,1705 num-of-N((right-distance <= 2) and (left-weight >= 2))
 0,1679 left-weight LESSTHAN right-distance
 0,1606 num-of-N((left-weight >= 2) and (right-weight <= 1))
 0,1604 right-weight==B2of2 and right-distance==B2of2
 0,1567 (right-weight <= 2) and (left-distance >= 3) and (left-weight >= 3)
 0,1511 (left-distance >= 3) and (right-distance <= 3)
 0,1444 (left-weight >= 4) and (right-weight <= 3) and (left-distance >= 2)
 0,1444 (left-weight >= 4) and (left-distance >= 2) and (right-weight <= 3)
 0,1429 num-of-N((left-weight >= 4) and (right-distance <= 3))
 0,1429 (left-distance >= 4) and (left-weight >= 3)
 0,1424 left-distance==B2of2 impl right-weight==B2of2
 0,1424 (left-distance >= 3) and (right-weight <= 2)
 0,1372 (right-distance <= 2) and (left-distance >= 2)
 0,1314 left-distance==B2of2 impl right-distance==B2of2
 0,1303 left-weight==B2of2 impl right-distance==B2of2
 0,1303 (right-distance <= 2) and (left-weight >= 3)
 0,1293 (right-distance <= 2) and (left-weight >= 2)
 0,1226 left-weight==B2of2 impl right-weight==B2of2
 0,1226 (right-weight <= 2) and (left-weight >= 3)
 0,1208 (left-distance >= 4) and (right-weight <= 3)
 0,1197 num-of-N((left-distance >= 5) and (left-weight >= 2))
 0,1183 num-of-N((left-distance >= 2) and (left-weight >= 5))
 0,1100 num-of-N((left-weight >= 4) and (right-weight <= 4))
 0,1066 left-distance
 0,0998 (right-weight <= 1) and (left-weight >= 2) and (left-distance >= 3)
 0,0991 right-weight==B2of2 or right-distance==B2of2
 0,0976 (left-distance >= 4) and (left-weight >= 4) and (right-distance <= 3)
 0,0963 (right-distance <= 1) and (left-distance >= 2)
 0,0963 (left-distance >= 2) and (right-distance <= 1)
 0,0951 left-weight==B2of2 or left-distance==B2of2
 0,0915 (left-weight >= 4) and (right-distance <= 3)
 0,0914 right-weight
 0,0914 (right-weight <= 2)
 0,0903 (left-weight >= 2) and (right-weight <= 1)
 0,0894 (left-distance >= 2) and (right-weight <= 1)
 0,0872 num-of-N((left-distance >= 5) and (right-weight <= 4))
 0,0865 right-distance
 0,0864 (left-distance >= 5) and (right-weight <= 4) and (right-distance <= 4) and (left-weight >= 2)
 0,0859 (right-distance <= 1) and (left-distance >= 3)
 0,0849 (left-weight >= 4) and (right-weight <= 4)
 0,0823 left-weight
 0,0784 num-of-N((left-distance >= 5) and (right-distance <= 4))
 0,0718 (right-distance <= 1)
 0,0698 (left-distance >= 5) and (left-weight >= 2)
 0,0624 num-of-N((left-weight >= 5) and (right-distance <= 4))
 0,0618 (right-weight <= 1) and (right-distance <= 2)
 0,0591 (left-distance >= 2) and (left-weight >= 5)
 0,0567 (left-distance >= 5) and (right-weight <= 4)
 0,0539 (left-distance >= 5) and (right-distance <= 4)
 0,0356 (left-weight >= 5) and (right-distance <= 4)
 0,0287 left-weight==B2of2 and left-distance==B2of2 and right-distance==B2of2
 0,0271 left-weight DIVIDE left-distance
 0,0271 left-distance DIVIDE left-weight
 0,0265 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0258 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0250 left-weight==B2of2 xor left-distance==B2of2
 0,0250 left-weight==B2of2 equ left-distance==B2of2
 0,0226 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0205 left-distance DIFF right-weight
 0,0182 left-distance DIFF right-distance
 0,0182 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0182 left-weight==B2of2 or left-distance==B2of2 or right-distance==B2of2
 0,0177 left-weight DIFF right-weight
 0,0169 right-weight DIVIDE right-distance
 0,0169 right-distance DIVIDE right-weight
 0,0164 left-weight DIFF right-distance
 0,0161 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0159 right-weight==B2of2 xor right-distance==B2of2
 0,0159 right-weight==B2of2 equ right-distance==B2of2
 0,0152 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0072 left-weight==B2of2 impl left-distance==B2of2
 0,0017 left-distance MULTIPLY right-weight
 0,0017 left-distance ADD right-weight
 0,0005 left-distance==B2of2 xor right-weight==B2of2
 0,0005 left-distance==B2of2 equ right-weight==B2of2
 0,0004 left-distance MULTIPLY right-distance
 0,0004 left-distance ADD right-distance
 0,0004 left-distance==B2of2 or right-weight==B2of2
 0,0000 left-weight SUBTRACT left-distance
 0,0000 left-weight MULTIPLY right-weight
 0,0000 left-weight ADD right-weight
 -0,0007 left-weight MULTIPLY right-distance
 -0,0007 left-weight ADD right-distance
 -0,0013 left-weight==B2of2 xor right-distance==B2of2
 -0,0013 left-weight==B2of2 equ right-distance==B2of2
 -0,0022 right-weight==B2of2 impl right-distance==B2of2
 -0,0028 left-distance==B2of2 xor right-distance==B2of2
 -0,0028 left-distance==B2of2 equ right-distance==B2of2
 -0,0032 left-weight==B2of2 xor right-weight==B2of2
 -0,0032 left-weight==B2of2 equ right-weight==B2of2
 -0,0032 left-distance==B2of2 or right-distance==B2of2
 -0,0041 left-weight==B2of2 or right-weight==B2of2
 -0,0043 right-weight SUBTRACT right-distance
 -0,0047 left-weight==B2of2 or right-distance==B2of2
 -0,0064 left-weight DIFF left-distance
 -0,0080 right-weight DIFF right-distance
 -0,0091 left-weight==B2of2 and right-distance==B2of2
 -0,0099 right-weight LESSTHAN right-distance
 -0,0099 left-distance==B2of2 and right-distance==B2of2
 -0,0100 left-weight==B2of2 and right-weight==B2of2
 -0,0100 left-distance==B2of2 and right-weight==B2of2
 -0,0114 left-weight LESSTHAN left-distance
MDL (param. search)
The best parameter when using J48: MDL@0.25
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  2
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3463 num-of-N((right-weight <= 2) and (left-weight >= 3) and (left-distance >= 3))
 0,3212 num-of-N((right-distance <= 2) and (left-distance >= 3) and (left-weight >= 2))
 0,3105 num-of-N((left-weight >= 3) and (left-distance >= 3) and (right-distance <= 3))
 0,2911 num-of-N((right-weight <= 1) and (left-distance >= 2) and (left-weight >= 2))
 0,2863 num-of-N((right-distance <= 3) and (left-distance >= 4) and (right-weight <= 2))
 0,2802 num-of-N((right-distance <= 1) and (left-weight >= 3) and (left-distance >= 2))
 0,2735 num-of-N((left-weight >= 5) and (right-distance <= 4) and (left-distance >= 2) and (right-weight <= 3))
 0,2664 num-of-N((left-weight >= 4) and (right-distance <= 3) and (left-distance >= 4))
 0,2633 num-of-N((right-distance <= 1) and (left-weight >= 2) and (right-weight <= 3))
 0,2624 num-of-N((left-weight >= 4) and (left-distance >= 4) and (right-weight <= 3))
 0,2432 num-of-N((left-distance >= 4) and (left-weight >= 2) and (right-weight <= 3))
 0,2348 num-of-N((left-distance >= 5) and (left-weight >= 3) and (right-distance <= 4) and (right-weight <= 4))
 0,2170 left-distance_x_right-weight
 0,2145 left-weight_x_right-weight
 0,2137 right-weight MULTIPLY right-distance
 0,2126 right-weight DIVIDE left-weight
 0,2126 left-weight SUBTRACT right-weight
 0,2126 left-weight LESSTHAN right-weight
 0,2126 left-weight DIVIDE right-weight
 0,2107 right-weight_x_right-distance
 0,2106 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,2074 num-of-N((right-weight <= 2) and (left-distance >= 3))
 0,2034 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,2030 left-distance_x_right-distance
 0,2022 right-distance DIVIDE left-distance
 0,2022 left-distance SUBTRACT right-distance
 0,2022 left-distance DIVIDE right-distance
 0,2005 num-of-N((left-distance >= 3) and (left-weight >= 3))
 0,1960 num-of-N((left-weight >= 4) and (left-distance >= 3))
 0,1955 right-weight DIVIDE left-distance
 0,1955 right-distance DIVIDE left-weight
 0,1955 left-weight SUBTRACT right-distance
 0,1955 left-weight DIVIDE right-distance
 0,1955 left-distance SUBTRACT right-weight
 0,1955 left-distance LESSTHAN right-weight
 0,1955 left-distance DIVIDE right-weight
 0,1925 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,1915 num-of-N((right-weight <= 2) and (right-distance <= 3))
 0,1910 left-weight_x_left-distance
 0,1905 (left-weight >= 3) and (left-distance >= 3) and (right-distance <= 3)
 0,1898 left-weight MULTIPLY left-distance
 0,1890 left-weight LESSTHAN right-distance
 0,1874 left-weight ADD left-distance
 0,1869 (right-distance <= 2) and (left-distance >= 3) and (left-weight >= 2)
 0,1866 right-weight ADD right-distance
 0,1859 num-of-N((left-weight >= 4) and (right-weight <= 1))
 0,1846 left-weight_x_right-distance
 0,1844 num-of-N((right-weight <= 1) and (left-distance >= 2))
 0,1833 left-distance LESSTHAN right-distance
 0,1820 num-of-N((right-distance <= 2) and (left-weight >= 2))
 0,1814 num-of-N((right-weight <= 1) and (right-distance <= 3))
 0,1715 left-weight==B2of2 and left-distance==B2of2
 0,1715 (left-distance >= 3) and (left-weight >= 3)
 0,1695 num-of-N((left-weight >= 4) and (right-distance <= 3))
 0,1676 num-of-N((left-weight >= 4) and (right-weight <= 3))
 0,1668 num-of-N((right-distance <= 1) and (left-distance >= 2))
 0,1668 num-of-N((left-distance >= 2) and (right-distance <= 1))
 0,1650 num-of-N((right-distance <= 1) and (right-weight <= 3))
 0,1596 num-of-N((left-weight >= 4) and (left-distance >= 4))
 0,1573 num-of-N((left-distance >= 4) and (right-distance <= 3))
 0,1517 (right-weight <= 2) and (left-weight >= 3) and (left-distance >= 3)
 0,1495 left-distance==B2of2 or right-weight==B1of3
 0,1489 num-of-N((left-distance >= 4) and (right-weight <= 3))
 0,1474 (left-weight >= 4) and (left-distance >= 3)
 0,1470 left-distance==B2of2 impl right-weight==B3of3
 0,1453 left-weight==B2of2 or right-weight==B1of3
 0,1435 (left-distance >= 4) and (left-weight >= 2) and (right-weight <= 3)
 0,1430 (right-distance <= 2) and (left-weight >= 2)
 0,1430 left-distance==B2of2 impl right-distance==B2of2
 0,1430 (right-distance <= 2) and (left-distance >= 3)
 0,1393 (right-weight <= 1) and (left-distance >= 2) and (left-weight >= 2)
 0,1380 (right-weight <= 2) and (left-distance >= 3)
 0,1343 left-weight==B2of2 impl right-weight==B3of3
 0,1317 right-weight==B3of3 and right-distance==B2of2
 0,1282 num-of-N((right-distance <= 2) and (left-weight >= 5))
 0,1271 (right-weight <= 2) and (left-weight >= 3)
 0,1228 (right-weight <= 1) and (left-distance >= 2)
 0,1224 left-weight==B2of2 impl right-distance==B2of2
 0,1224 (right-distance <= 2) and (left-weight >= 3)
 0,1195 num-of-N((left-weight >= 5) and (left-distance >= 2))
 0,1123 (right-weight <= 2) and (right-distance <= 3)
 0,1117 (left-weight >= 4) and (left-distance >= 4)
 0,1115 (left-weight >= 4) and (right-distance <= 3)
 0,1078 (left-weight >= 4) and (right-weight <= 3)
 0,1038 (right-distance <= 1) and (left-distance >= 2)
 0,1038 (left-distance >= 2) and (right-distance <= 1)
 0,1030 (left-distance >= 4) and (right-distance <= 3)
 0,1021 (left-weight >= 4) and (right-distance <= 3) and (left-distance >= 4)
 0,1021 (left-weight >= 4) and (left-distance >= 4) and (right-weight <= 3)
 0,1013 right-weight==B3of3 or right-distance==B2of2
 0,0998 (right-distance <= 1) and (left-weight >= 3) and (left-distance >= 2)
 0,0991 (left-distance >= 4) and (right-weight <= 3)
 0,0990 left-distance==B2of2 and right-weight==B1of3
 0,0983 right-weight
 0,0983 (right-weight <= 1)
 0,0969 left-weight==B2of2 or left-distance==B2of2 or right-weight==B1of3
 0,0947 left-weight==B2of2 and right-weight==B1of3
 0,0938 left-distance
 0,0934 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of3
 0,0915 right-distance
 0,0913 (right-distance <= 1) and (left-weight >= 2) and (right-weight <= 3)
 0,0913 (right-weight <= 1) and (right-distance <= 3)
 0,0878 left-weight==B2of2 or left-distance==B2of2
 0,0850 left-weight
 0,0825 (right-distance <= 1)
 0,0811 right-weight==B1of3 xor right-distance==B2of2
 0,0811 right-weight==B1of3 equ right-distance==B2of2
 0,0800 (right-distance <= 1) and (right-weight <= 3)
 0,0776 num-of-N((left-weight >= 5) and (right-distance <= 4))
 0,0737 (right-distance <= 3) and (left-distance >= 4) and (right-weight <= 2)
 0,0723 (left-weight >= 4) and (right-weight <= 1)
 0,0720 num-of-N((left-weight >= 5) and (right-weight <= 4))
 0,0715 num-of-N((left-distance >= 5) and (right-distance <= 4))
 0,0713 left-weight==B2of2 and left-distance==B2of2 and right-weight==B1of3
 0,0634 (left-weight >= 5) and (right-distance <= 4) and (left-distance >= 2) and (right-weight <= 3)
 0,0628 (left-weight >= 5) and (left-distance >= 2)
 0,0613 (left-distance >= 5) and (left-weight >= 3) and (right-distance <= 4) and (right-weight <= 4)
 0,0594 right-weight==B1of3 impl right-distance==B2of2
 0,0505 (left-weight >= 5) and (right-distance <= 4)
 0,0464 (right-distance <= 2) and (left-weight >= 5)
 0,0421 left-distance==B2of2 and right-weight==B1of3 and right-distance==B2of2
 0,0419 (left-weight >= 5) and (right-weight <= 4)
 0,0412 (left-distance >= 5) and (right-distance <= 4)
 0,0404 left-weight==B2of2 and right-weight==B1of3 and right-distance==B2of2
 0,0397 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of3
 0,0356 left-distance==B2of2 and right-weight==B3of3 and right-distance==B2of2
 0,0316 left-weight==B2of2 and right-weight==B3of3 and right-distance==B2of2
 0,0311 left-weight==B2of2 or left-distance==B2of2 or right-weight==B3of3
 0,0311 right-weight==B2of3 impl right-distance==B2of2
 0,0306 left-distance==B2of2 and right-weight==B2of3
 0,0295 left-distance==B2of2 or right-weight==B2of3
 0,0286 right-weight==B1of3 and right-distance==B2of2
 0,0286 right-weight DIVIDE right-distance
 0,0286 right-distance DIVIDE right-weight
 0,0279 right-weight==B2of3 or right-distance==B2of2
 0,0279 left-weight==B2of2 or right-weight==B2of3
 0,0276 left-weight==B2of2 and left-distance==B2of2 and right-distance==B2of2
 0,0263 left-weight==B2of2 and right-weight==B2of3
 0,0261 right-weight==B1of3 or right-distance==B2of2
 0,0249 left-weight==B2of2 xor left-distance==B2of2
 0,0249 left-weight==B2of2 equ left-distance==B2of2
 0,0228 left-distance DIFF right-weight
 0,0227 left-weight DIFF right-distance
 0,0199 left-distance DIFF right-distance
 0,0197 left-weight DIFF right-weight
 0,0193 left-weight DIVIDE left-distance
 0,0193 left-distance DIVIDE left-weight
 0,0181 left-weight==B2of2 xor right-weight==B1of3
 0,0181 left-weight==B2of2 equ right-weight==B1of3
 0,0173 left-distance==B2of2 xor right-weight==B1of3
 0,0173 left-distance==B2of2 equ right-weight==B1of3
 0,0171 left-distance==B2of2 xor right-weight==B3of3
 0,0171 left-distance==B2of2 equ right-weight==B3of3
 0,0139 left-weight==B2of2 or left-distance==B2of2 or right-distance==B2of2
 0,0120 left-weight==B2of2 xor right-weight==B3of3
 0,0120 left-weight==B2of2 equ right-weight==B3of3
 0,0096 left-distance==B2of2 impl right-weight==B2of3
 0,0085 left-weight==B2of2 impl right-weight==B2of3
 0,0077 right-weight==B2of3 and right-distance==B2of2
 0,0045 left-distance==B2of2 or right-weight==B3of3
 0,0037 left-weight==B2of2 impl left-distance==B2of2
 0,0027 left-weight==B2of2 or right-weight==B3of3 or right-distance==B2of2
 0,0010 left-weight MULTIPLY right-weight
 0,0010 left-weight ADD right-weight
 0,0009 left-distance MULTIPLY right-weight
 0,0009 left-distance ADD right-weight
 0,0009 left-distance==B2of2 or right-weight==B3of3 or right-distance==B2of2
 0,0008 left-distance==B2of2 impl right-weight==B1of3
 0,0001 left-weight==B2of2 or right-weight==B3of3
 0,0000 left-weight MULTIPLY right-distance
 0,0000 left-weight ADD right-distance
 -0,0003 left-weight==B2of2 impl right-weight==B1of3
 -0,0005 left-distance==B2of2 or right-weight==B1of3 or right-distance==B2of2
 -0,0007 left-distance MULTIPLY right-distance
 -0,0007 left-distance ADD right-distance
 -0,0015 left-distance==B2of2 xor right-distance==B2of2
 -0,0015 left-distance==B2of2 equ right-distance==B2of2
 -0,0016 left-weight==B2of2 and left-distance==B2of2 and right-weight==B3of3
 -0,0026 left-weight==B2of2 xor right-distance==B2of2
 -0,0026 left-weight==B2of2 equ right-distance==B2of2
 -0,0031 right-weight SUBTRACT right-distance
 -0,0034 left-weight SUBTRACT left-distance
 -0,0035 left-weight==B2of2 or right-weight==B1of3 or right-distance==B2of2
 -0,0040 left-distance==B2of2 or right-distance==B2of2
 -0,0040 left-distance==B2of2 or right-weight==B2of3 or right-distance==B2of2
 -0,0045 left-distance==B2of2 and right-weight==B3of3
 -0,0047 left-weight==B2of2 and right-weight==B3of3
 -0,0048 left-weight==B2of2 or right-weight==B2of3 or right-distance==B2of2
 -0,0050 left-weight==B2of2 or right-distance==B2of2
 -0,0068 left-weight DIFF left-distance
 -0,0069 right-weight DIFF right-distance
 -0,0069 left-distance==B2of2 and right-weight==B2of3 and right-distance==B2of2
 -0,0072 right-weight==B3of3 impl right-distance==B2of2
 -0,0074 left-weight==B2of2 and right-weight==B2of3 and right-distance==B2of2
 -0,0089 right-weight==B3of3 xor right-distance==B2of2
 -0,0089 right-weight==B3of3 equ right-distance==B2of2
 -0,0091 right-weight==B2of3 xor right-distance==B2of2
 -0,0091 right-weight==B2of3 equ right-distance==B2of2
 -0,0092 left-weight==B2of2 and right-distance==B2of2
 -0,0095 left-distance==B2of2 and right-distance==B2of2
 -0,0096 right-weight LESSTHAN right-distance
 -0,0104 left-weight LESSTHAN left-distance
 -0,0113 left-distance==B2of2 xor right-weight==B2of3
 -0,0113 left-distance==B2of2 equ right-weight==B2of3
 -0,0115 left-weight==B2of2 xor right-weight==B2of3
 -0,0115 left-weight==B2of2 equ right-weight==B2of3
MDL (param. search)
The best parameter when using J48: MDL@0.25
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.25
								--------------
									Fold  3
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3791 num-of-N((left-distance >= 4) and (right-distance <= 3) and (left-weight >= 2) and (right-weight <= 3))
 0,3757 num-of-N((left-weight >= 4) and (right-distance <= 3) and (right-weight <= 3) and (left-distance >= 2))
 0,3557 num-of-N((right-weight <= 2) and (left-distance >= 3) and (left-weight >= 3))
 0,3473 num-of-N((right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3))
 0,3270 num-of-N((right-weight <= 1) and (right-distance <= 2) and (left-distance >= 3))
 0,3104 num-of-N((right-weight <= 1) and (left-distance >= 3) and (left-weight >= 2))
 0,3057 num-of-N((left-distance >= 3) and (right-distance <= 1) and (left-weight >= 2))
 0,2966 num-of-N((right-weight <= 2) and (right-distance <= 2) and (left-weight >= 2))
 0,2832 num-of-N((right-distance <= 1) and (left-weight >= 3) and (left-distance >= 2))
 0,2706 num-of-N((left-distance >= 4) and (left-weight >= 4) and (right-distance <= 3))
 0,2686 num-of-N((right-weight <= 3) and (left-distance >= 4) and (left-weight >= 4))
 0,2217 num-of-N((left-distance >= 3) and (left-weight >= 3))
 0,2209 num-of-N((left-distance >= 3) and (right-weight <= 2))
 0,2144 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,2142 left-distance_x_right-weight
 0,2128 left-weight_x_left-distance
 0,2085 left-distance_x_right-distance
 0,2047 right-distance DIVIDE left-distance
 0,2047 left-distance SUBTRACT right-distance
 0,2047 left-distance LESSTHAN right-distance
 0,2047 left-distance DIVIDE right-distance
 0,1993 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,1989 right-weight DIVIDE left-distance
 0,1989 left-distance SUBTRACT right-weight
 0,1989 left-distance DIVIDE right-weight
 0,1976 num-of-N((right-weight <= 2) and (right-distance <= 2))
 0,1947 left-weight MULTIPLY left-distance
 0,1932 num-of-N((left-distance >= 3) and (right-distance <= 3))
 0,1930 left-weight_x_right-weight
 0,1921 right-weight MULTIPLY right-distance
 0,1912 num-of-N((left-distance >= 5) and (right-weight <= 2) and (right-distance <= 4))
 0,1906 left-distance LESSTHAN right-weight
 0,1881 right-weight_x_right-distance
 0,1847 left-weight ADD left-distance
 0,1835 right-weight DIVIDE left-weight
 0,1835 left-weight SUBTRACT right-weight
 0,1835 left-weight DIVIDE right-weight
 0,1830 left-weight_x_right-distance
 0,1827 right-weight ADD right-distance
 0,1821 right-distance DIVIDE left-weight
 0,1821 left-weight SUBTRACT right-distance
 0,1821 left-weight DIVIDE right-distance
 0,1817 left-weight LESSTHAN right-distance
 0,1774 left-weight==B2of2 and left-distance==B2of2
 0,1774 (left-distance >= 3) and (left-weight >= 3)
 0,1765 left-weight LESSTHAN right-weight
 0,1757 num-of-N((right-weight <= 1) and (left-distance >= 2))
 0,1731 right-weight==B2of2 and right-distance==B2of2
 0,1727 num-of-N((left-weight >= 3) and (right-distance <= 3))
 0,1691 num-of-N((right-distance <= 1) and (left-distance >= 2))
 0,1685 num-of-N((right-distance <= 1) and (left-distance >= 4))
 0,1685 num-of-N((right-distance <= 2) and (left-weight >= 2))
 0,1654 num-of-N((left-weight >= 2) and (right-weight <= 1))
 0,1605 num-of-N((left-distance >= 4) and (right-weight <= 3))
 0,1589 num-of-N((right-distance <= 1) and (left-weight >= 2))
 0,1589 num-of-N((left-weight >= 2) and (right-distance <= 1))
 0,1581 num-of-N((right-weight <= 1) and (left-weight >= 4))
 0,1567 (right-weight <= 2) and (left-distance >= 3) and (left-weight >= 3)
 0,1542 (right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3)
 0,1526 (left-distance >= 3) and (right-distance <= 3)
 0,1460 (left-weight >= 3) and (right-distance <= 3)
 0,1400 left-distance==B2of2 impl right-weight==B2of2
 0,1400 (left-distance >= 3) and (right-weight <= 2)
 0,1349 left-distance==B2of2 impl right-distance==B2of2
 0,1349 (right-distance <= 2) and (left-distance >= 3)
 0,1334 left-weight==B2of2 impl right-distance==B2of2
 0,1331 left-weight==B2of2 impl right-weight==B2of2
 0,1331 (right-weight <= 2) and (left-weight >= 3)
 0,1297 (right-distance <= 2) and (left-weight >= 2)
 0,1243 num-of-N((left-distance >= 5) and (left-weight >= 2))
 0,1158 (left-distance >= 4) and (right-distance <= 3) and (left-weight >= 2) and (right-weight <= 3)
 0,1132 left-weight==B2of2 or left-distance==B2of2
 0,1132 left-distance
 0,1107 (left-distance >= 4) and (right-weight <= 3)
 0,1078 num-of-N((left-weight >= 4) and (right-weight <= 4))
 0,1075 (right-weight <= 1) and (left-distance >= 2)
 0,1045 (left-weight >= 4) and (right-distance <= 3) and (right-weight <= 3) and (left-distance >= 2)
 0,0976 (right-distance <= 1) and (left-weight >= 3) and (left-distance >= 2)
 0,0964 (right-distance <= 1) and (left-weight >= 2)
 0,0964 (left-weight >= 2) and (right-distance <= 1)
 0,0963 (left-weight >= 2) and (right-weight <= 1)
 0,0953 (right-weight <= 3) and (left-distance >= 4) and (left-weight >= 4)
 0,0953 (right-weight <= 1) and (left-distance >= 3) and (left-weight >= 2)
 0,0953 (left-distance >= 4) and (left-weight >= 4) and (right-distance <= 3)
 0,0953 (left-distance >= 3) and (right-distance <= 1) and (left-weight >= 2)
 0,0926 (right-weight <= 2) and (right-distance <= 2) and (left-weight >= 2)
 0,0923 (right-distance <= 1) and (left-distance >= 2)
 0,0914 right-weight
 0,0903 (left-weight >= 4) and (right-weight <= 4)
 0,0900 left-weight
 0,0851 num-of-N((left-distance >= 5) and (right-distance <= 4))
 0,0830 right-distance
 0,0810 right-weight==B2of2 or right-distance==B2of2
 0,0810 (right-weight <= 2) and (right-distance <= 2)
 0,0806 (right-weight <= 1)
 0,0789 num-of-N((left-distance >= 5) and (left-weight >= 5))
 0,0774 (right-distance <= 1)
 0,0734 num-of-N((left-weight >= 5) and (right-distance <= 4))
 0,0652 (left-distance >= 5) and (left-weight >= 2)
 0,0643 (right-distance <= 1) and (left-distance >= 4)
 0,0619 (right-weight <= 1) and (left-weight >= 4)
 0,0539 (left-distance >= 5) and (right-distance <= 4)
 0,0444 (left-weight >= 5) and (right-distance <= 4)
 0,0434 (left-distance >= 5) and (right-weight <= 2) and (right-distance <= 4)
 0,0432 (left-distance >= 5)
 0,0385 (right-weight <= 1) and (right-distance <= 2) and (left-distance >= 3)
 0,0308 (left-distance >= 5) and (left-weight >= 5)
 0,0295 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0277 right-weight==B2of2 xor right-distance==B2of2
 0,0277 right-weight==B2of2 equ right-distance==B2of2
 0,0264 left-weight==B2of2 and left-distance==B2of2 and right-distance==B2of2
 0,0253 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0243 left-weight==B2of2 or left-distance==B2of2 or right-distance==B2of2
 0,0240 left-distance DIFF right-distance
 0,0239 right-weight DIVIDE right-distance
 0,0239 right-distance DIVIDE right-weight
 0,0218 left-weight DIFF right-weight
 0,0218 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0207 left-weight DIVIDE left-distance
 0,0207 left-distance DIVIDE left-weight
 0,0190 left-weight DIFF right-distance
 0,0182 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0179 left-weight==B2of2 xor left-distance==B2of2
 0,0179 left-weight==B2of2 equ left-distance==B2of2
 0,0173 left-distance DIFF right-weight
 0,0103 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0088 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0037 left-weight==B2of2 impl left-distance==B2of2
 0,0013 left-weight MULTIPLY right-weight
 0,0013 left-weight ADD right-weight
 0,0010 right-weight==B2of2 impl right-distance==B2of2
 0,0009 left-weight MULTIPLY right-distance
 0,0009 left-weight ADD right-distance
 0,0001 left-distance==B2of2 xor right-distance==B2of2
 0,0001 left-distance==B2of2 equ right-distance==B2of2
 0,0000 left-distance MULTIPLY right-distance
 0,0000 left-distance ADD right-distance
 -0,0005 left-weight==B2of2 xor right-weight==B2of2
 -0,0005 left-weight==B2of2 equ right-weight==B2of2
 -0,0013 left-weight==B2of2 or right-weight==B2of2
 -0,0014 left-distance==B2of2 or right-distance==B2of2
 -0,0018 right-weight SUBTRACT right-distance
 -0,0025 left-distance MULTIPLY right-weight
 -0,0025 left-distance ADD right-weight
 -0,0033 left-weight==B2of2 or right-distance==B2of2
 -0,0037 left-distance==B2of2 or right-weight==B2of2
 -0,0040 left-distance==B2of2 xor right-weight==B2of2
 -0,0040 left-distance==B2of2 equ right-weight==B2of2
 -0,0047 left-weight==B2of2 xor right-distance==B2of2
 -0,0047 left-weight==B2of2 equ right-distance==B2of2
 -0,0048 left-weight SUBTRACT left-distance
 -0,0069 right-weight DIFF right-distance
 -0,0088 left-distance==B2of2 and right-distance==B2of2
 -0,0088 left-weight DIFF left-distance
 -0,0099 left-distance==B2of2 and right-weight==B2of2
 -0,0100 left-weight==B2of2 and right-weight==B2of2
 -0,0107 left-weight==B2of2 and right-distance==B2of2
 -0,0109 right-weight LESSTHAN right-distance
 -0,0109 left-weight LESSTHAN left-distance
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  4
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3814 num-of-N((right-distance <= 3) and (left-weight >= 4) and (left-distance >= 2) and (right-weight <= 3))
 0,3389 num-of-N((right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3))
 0,3103 num-of-N((right-weight <= 2) and (left-distance >= 3) and (left-weight >= 2))
 0,2883 num-of-N((left-weight >= 3) and (left-distance >= 2) and (right-distance <= 3))
 0,2863 num-of-N((right-distance <= 1) and (left-weight >= 2) and (left-distance >= 2))
 0,2833 num-of-N((right-weight <= 1) and (left-weight >= 3) and (left-distance >= 2))
 0,2741 num-of-N((right-distance <= 3) and (left-weight >= 4) and (left-distance >= 4))
 0,2656 num-of-N((left-distance >= 4) and (right-distance <= 3) and (left-weight >= 2))
 0,2613 num-of-N((left-weight >= 4) and (right-weight <= 3) and (left-distance >= 4))
 0,2581 num-of-N((right-distance <= 3) and (right-weight <= 3) and (left-distance >= 2))
 0,2106 num-of-N((left-distance >= 5) and (right-weight <= 3) and (right-distance <= 3))
 0,2099 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,2070 (left-weight >= 3) and (left-distance >= 2) and (right-distance <= 3)
 0,2056 right-distance DIVIDE left-weight
 0,2056 left-weight SUBTRACT right-distance
 0,2056 left-weight LESSTHAN right-distance
 0,2056 left-weight DIVIDE right-distance
 0,2027 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,2019 left-weight_x_right-distance
 0,2003 num-of-N((right-distance <= 2) and (right-weight <= 2))
 0,1998 num-of-N((right-weight <= 2) and (left-distance >= 3))
 0,1960 right-weight MULTIPLY right-distance
 0,1943 num-of-N((left-weight >= 3) and (right-weight <= 2))
 0,1941 left-distance_x_right-distance
 0,1930 right-weight DIVIDE left-distance
 0,1930 left-distance SUBTRACT right-weight
 0,1930 left-distance LESSTHAN right-weight
 0,1930 left-distance DIVIDE right-weight
 0,1922 left-distance_x_right-weight
 0,1912 right-distance DIVIDE left-distance
 0,1912 left-distance DIVIDE right-distance
 0,1912 right-weight_x_right-distance
 0,1910 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,1902 right-weight ADD right-distance
 0,1882 left-distance SUBTRACT right-distance
 0,1882 left-distance LESSTHAN right-distance
 0,1872 left-weight MULTIPLY left-distance
 0,1871 left-weight_x_right-weight
 0,1853 right-weight DIVIDE left-weight
 0,1853 left-weight SUBTRACT right-weight
 0,1853 left-weight LESSTHAN right-weight
 0,1853 left-weight DIVIDE right-weight
 0,1837 num-of-N((right-weight <= 1) and (right-distance <= 2))
 0,1822 left-weight ADD left-distance
 0,1815 left-weight_x_left-distance
 0,1784 num-of-N((right-distance <= 1) and (left-weight >= 2))
 0,1747 num-of-N((right-distance <= 1) and (left-distance >= 2))
 0,1711 num-of-N((left-weight >= 4) and (right-distance <= 3))
 0,1689 num-of-N((right-weight <= 2) and (left-weight >= 4))
 0,1685 (right-weight <= 2) and (left-distance >= 3) and (left-weight >= 2)
 0,1668 num-of-N((right-weight <= 1) and (left-weight >= 2))
 0,1668 num-of-N((left-weight >= 2) and (right-weight <= 1))
 0,1665 num-of-N((right-weight <= 1) and (left-distance >= 2))
 0,1659 right-weight==B2of2 and right-distance==B2of2
 0,1649 num-of-N((left-distance >= 4) and (right-distance <= 3))
 0,1643 num-of-N((right-distance <= 1) and (left-weight >= 4))
 0,1592 (right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3)
 0,1589 (left-distance >= 4) and (right-distance <= 3) and (left-weight >= 2)
 0,1579 left-weight==B2of2 and left-distance==B2of2
 0,1579 (left-weight >= 3) and (left-distance >= 3)
 0,1577 num-of-N((left-weight >= 4) and (left-distance >= 4))
 0,1555 (right-distance <= 3) and (right-weight <= 3) and (left-distance >= 2)
 0,1474 num-of-N((left-weight >= 4) and (right-weight <= 3))
 0,1408 left-distance==B2of2 impl right-distance==B2of2
 0,1408 (right-distance <= 2) and (left-distance >= 3)
 0,1397 left-weight==B2of2 impl right-distance==B2of2
 0,1397 (right-distance <= 2) and (left-weight >= 3)
 0,1276 (right-distance <= 1) and (left-weight >= 2) and (left-distance >= 2)
 0,1267 left-distance==B2of2 impl right-weight==B2of2
 0,1267 (right-weight <= 2) and (left-distance >= 3)
 0,1238 num-of-N((left-distance >= 4) and (right-weight <= 4))
 0,1212 num-of-N((left-weight >= 2) and (left-distance >= 5))
 0,1204 left-weight==B2of2 impl right-weight==B2of2
 0,1204 (left-weight >= 3) and (right-weight <= 2)
 0,1174 num-of-N((left-weight >= 5) and (left-distance >= 2))
 0,1160 (right-distance <= 3) and (left-weight >= 4) and (left-distance >= 2) and (right-weight <= 3)
 0,1129 (left-distance >= 4) and (right-distance <= 3)
 0,1125 (left-weight >= 4) and (right-distance <= 3)
 0,1078 (right-distance <= 1) and (left-weight >= 2)
 0,1054 (left-weight >= 4) and (left-distance >= 4)
 0,1038 (right-distance <= 1) and (left-distance >= 2)
 0,1021 (right-distance <= 3) and (left-weight >= 4) and (left-distance >= 4)
 0,0979 right-distance
 0,0972 (left-distance >= 4) and (right-weight <= 4)
 0,0968 right-weight==B2of2 or right-distance==B2of2
 0,0968 (right-distance <= 2) and (right-weight <= 2)
 0,0967 (right-weight <= 1) and (left-weight >= 2)
 0,0967 (left-weight >= 2) and (right-weight <= 1)
 0,0962 (left-weight >= 4) and (right-weight <= 3)
 0,0953 (left-weight >= 4) and (right-weight <= 3) and (left-distance >= 4)
 0,0946 (right-weight <= 1) and (left-distance >= 2)
 0,0931 (right-weight <= 1) and (left-weight >= 3) and (left-distance >= 2)
 0,0929 left-weight==B2of2 or left-distance==B2of2
 0,0897 left-weight
 0,0894 (right-weight <= 2) and (left-weight >= 4)
 0,0849 left-distance
 0,0848 right-weight
 0,0826 (right-distance <= 1)
 0,0766 num-of-N((left-weight >= 5) and (right-weight <= 4))
 0,0720 (right-weight <= 1)
 0,0679 (right-distance <= 1) and (left-weight >= 4)
 0,0628 (left-weight >= 5) and (left-distance >= 2)
 0,0610 (left-weight >= 2) and (left-distance >= 5)
 0,0594 (right-weight <= 1) and (right-distance <= 2)
 0,0499 (left-distance >= 5) and (right-weight <= 3) and (right-distance <= 3)
 0,0444 (left-weight >= 5) and (right-weight <= 4)
 0,0327 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0314 left-weight DIFF right-distance
 0,0280 left-distance DIFF right-weight
 0,0258 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0250 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0200 left-distance DIFF right-distance
 0,0185 left-weight DIVIDE left-distance
 0,0185 left-distance DIVIDE left-weight
 0,0181 right-weight DIVIDE right-distance
 0,0181 right-distance DIVIDE right-weight
 0,0179 left-weight==B2of2 and left-distance==B2of2 and right-distance==B2of2
 0,0178 left-weight DIFF right-weight
 0,0162 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0162 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0155 left-weight==B2of2 xor left-distance==B2of2
 0,0155 left-weight==B2of2 equ left-distance==B2of2
 0,0145 right-weight==B2of2 xor right-distance==B2of2
 0,0145 right-weight==B2of2 equ right-distance==B2of2
 0,0140 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0130 left-weight==B2of2 or left-distance==B2of2 or right-distance==B2of2
 0,0029 left-weight==B2of2 xor right-distance==B2of2
 0,0029 left-weight==B2of2 equ right-distance==B2of2
 0,0006 right-weight==B2of2 impl right-distance==B2of2
 0,0004 left-distance MULTIPLY right-weight
 0,0004 left-distance ADD right-weight
 0,0000 left-weight MULTIPLY right-distance
 0,0000 left-weight ADD right-distance
 -0,0002 left-distance==B2of2 xor right-weight==B2of2
 -0,0002 left-distance==B2of2 equ right-weight==B2of2
 -0,0007 left-weight MULTIPLY right-weight
 -0,0007 left-weight ADD right-weight
 -0,0018 left-distance MULTIPLY right-distance
 -0,0018 left-distance ADD right-distance
 -0,0019 left-distance==B2of2 xor right-distance==B2of2
 -0,0019 left-distance==B2of2 equ right-distance==B2of2
 -0,0023 left-weight==B2of2 impl left-distance==B2of2
 -0,0028 left-weight==B2of2 xor right-weight==B2of2
 -0,0028 left-weight==B2of2 equ right-weight==B2of2
 -0,0034 left-weight==B2of2 or right-weight==B2of2
 -0,0034 left-weight==B2of2 or right-distance==B2of2
 -0,0034 left-distance==B2of2 or right-weight==B2of2
 -0,0037 left-weight SUBTRACT left-distance
 -0,0040 right-weight SUBTRACT right-distance
 -0,0063 left-distance==B2of2 or right-distance==B2of2
 -0,0069 left-weight DIFF left-distance
 -0,0078 left-weight==B2of2 and right-distance==B2of2
 -0,0080 left-distance==B2of2 and right-distance==B2of2
 -0,0095 left-distance==B2of2 and right-weight==B2of2
 -0,0097 right-weight DIFF right-distance
 -0,0102 left-weight==B2of2 and right-weight==B2of2
 -0,0106 left-weight LESSTHAN left-distance
 -0,0109 right-weight LESSTHAN right-distance
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  5
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3941 num-of-N((right-distance <= 3) and (right-weight <= 3) and (left-distance >= 2) and (left-weight >= 4))
 0,3478 num-of-N((right-weight <= 2) and (left-weight >= 3) and (left-distance >= 3))
 0,3274 num-of-N((right-weight <= 2) and (left-weight >= 3) and (left-distance >= 2))
 0,3248 num-of-N((right-weight <= 2) and (right-distance <= 2) and (left-weight >= 2))
 0,3018 num-of-N((right-distance <= 1) and (left-weight >= 3) and (left-distance >= 2))
 0,2993 num-of-N((left-weight >= 3) and (left-distance >= 3) and (right-distance <= 3))
 0,2929 num-of-N((right-distance <= 2) and (left-distance >= 3) and (left-weight >= 4))
 0,2890 num-of-N((left-distance >= 4) and (right-distance <= 3) and (left-weight >= 3))
 0,2799 num-of-N((left-distance >= 4) and (left-weight >= 4) and (right-weight <= 3))
 0,2798 num-of-N((right-distance <= 2) and (left-weight >= 2) and (left-distance >= 2))
 0,2724 num-of-N((right-weight <= 1) and (left-weight >= 2) and (left-distance >= 2))
 0,2715 num-of-N((right-distance <= 1) and (left-distance >= 3) and (left-weight >= 2))
 0,2686 num-of-N((right-weight <= 1) and (right-distance <= 3) and (left-distance >= 3))
 0,2618 num-of-N((right-distance <= 1) and (left-distance >= 4) and (right-weight <= 3))
 0,2432 num-of-N((left-weight >= 5) and (right-distance <= 4) and (left-distance >= 3) and (right-weight <= 4))
 0,2191 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,2158 right-weight DIVIDE left-weight
 0,2158 left-weight SUBTRACT right-weight
 0,2158 left-weight LESSTHAN right-weight
 0,2158 left-weight DIVIDE right-weight
 0,2115 left-weight_x_right-weight
 0,2109 num-of-N((right-weight <= 2) and (right-distance <= 2))
 0,2109 num-of-N((right-distance <= 2) and (right-weight <= 2))
 0,2088 left-weight_x_left-distance
 0,2085 left-distance_x_right-weight
 0,2029 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,2019 right-weight_x_right-distance
 0,1997 num-of-N((right-weight <= 2) and (left-distance >= 3))
 0,1990 left-weight MULTIPLY left-distance
 0,1990 left-weight ADD left-distance
 0,1978 right-weight MULTIPLY right-distance
 0,1969 right-weight DIVIDE left-distance
 0,1969 left-distance SUBTRACT right-weight
 0,1969 left-distance DIVIDE right-weight
 0,1962 left-weight_x_right-distance
 0,1955 left-distance LESSTHAN right-weight
 0,1954 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,1944 num-of-N((left-weight >= 2) and (right-weight <= 2))
 0,1924 left-distance_x_right-distance
 0,1920 right-distance DIVIDE left-weight
 0,1920 left-weight SUBTRACT right-distance
 0,1920 left-weight DIVIDE right-distance
 0,1917 right-weight ADD right-distance
 0,1906 left-weight LESSTHAN right-distance
 0,1878 num-of-N((right-weight <= 2) and (left-distance >= 4))
 0,1843 (right-weight <= 2) and (left-weight >= 3) and (left-distance >= 2)
 0,1842 num-of-N((left-weight >= 3) and (right-distance <= 3))
 0,1800 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,1797 right-distance DIVIDE left-distance
 0,1797 left-distance SUBTRACT right-distance
 0,1797 left-distance LESSTHAN right-distance
 0,1797 left-distance DIVIDE right-distance
 0,1788 (right-distance <= 2) and (left-weight >= 2) and (left-distance >= 2)
 0,1781 (left-weight >= 3) and (left-distance >= 3) and (right-distance <= 3)
 0,1768 right-weight==B2of2 and right-distance==B2of2
 0,1761 left-weight==B2of2 impl left-distance==B1of3
 0,1723 num-of-N((left-weight >= 4) and (right-weight <= 3))
 0,1723 num-of-N((right-distance <= 2) and (left-distance >= 2))
 0,1709 num-of-N((left-weight >= 4) and (left-distance >= 3))
 0,1708 num-of-N((left-distance >= 4) and (right-weight <= 3))
 0,1675 num-of-N((left-distance >= 4) and (left-weight >= 4))
 0,1654 (left-weight >= 3) and (left-distance >= 3)
 0,1654 num-of-N((left-distance >= 2) and (right-weight <= 1))
 0,1649 num-of-N((left-distance >= 2) and (left-weight >= 4))
 0,1638 num-of-N((left-distance >= 2) and (right-distance <= 1))
 0,1624 num-of-N((right-distance <= 1) and (left-weight >= 2))
 0,1590 (right-weight <= 2) and (left-weight >= 3) and (left-distance >= 3)
 0,1546 num-of-N((left-distance >= 4) and (right-distance <= 3))
 0,1526 num-of-N((right-distance <= 1) and (left-distance >= 4))
 0,1514 (left-weight >= 2) and (right-weight <= 2)
 0,1454 left-distance==B1of3 or right-weight==B2of2
 0,1415 left-weight==B2of2 impl right-weight==B2of2
 0,1415 (right-weight <= 2) and (left-weight >= 3)
 0,1411 left-weight==B2of2 and left-distance==B3of3
 0,1406 (left-distance >= 4) and (right-distance <= 3) and (left-weight >= 3)
 0,1406 (left-weight >= 3) and (right-distance <= 3)
 0,1368 (right-weight <= 2) and (left-distance >= 3)
 0,1348 (left-distance >= 2) and (left-weight >= 4)
 0,1327 left-distance==B1of3 or right-distance==B2of2
 0,1327 (right-distance <= 2) and (left-distance >= 2)
 0,1320 (left-weight >= 4) and (left-distance >= 3)
 0,1244 left-weight==B2of2 impl right-distance==B2of2
 0,1244 (right-distance <= 2) and (left-weight >= 3)
 0,1204 (right-weight <= 1) and (left-weight >= 2) and (left-distance >= 2)
 0,1182 (right-distance <= 2) and (left-distance >= 3)
 0,1151 (left-distance >= 4) and (left-weight >= 4)
 0,1093 (right-weight <= 2) and (right-distance <= 2) and (left-weight >= 2)
 0,1091 (right-distance <= 3) and (right-weight <= 3) and (left-distance >= 2) and (left-weight >= 4)
 0,1072 (left-distance >= 4) and (right-weight <= 3)
 0,1067 left-weight==B2of2 or left-distance==B3of3
 0,1064 (left-weight >= 4) and (right-weight <= 3)
 0,1044 (left-distance >= 4) and (right-distance <= 3)
 0,1020 right-weight
 0,0988 left-weight
 0,0988 left-distance==B3of3 impl right-weight==B2of2
 0,0988 (right-weight <= 2) and (left-distance >= 4)
 0,0976 (left-distance >= 2) and (right-weight <= 1)
 0,0976 (left-distance >= 2) and (right-distance <= 1)
 0,0976 (left-distance >= 4) and (left-weight >= 4) and (right-weight <= 3)
 0,0969 left-distance==B1of3 or right-weight==B2of2 or right-distance==B2of2
 0,0955 (right-distance <= 1) and (left-weight >= 2)
 0,0953 (right-distance <= 1) and (left-weight >= 3) and (left-distance >= 2)
 0,0953 (right-distance <= 1) and (left-distance >= 3) and (left-weight >= 2)
 0,0951 right-weight==B2of2 or right-distance==B2of2
 0,0951 (right-weight <= 2) and (right-distance <= 2)
 0,0951 (right-distance <= 2) and (right-weight <= 2)
 0,0949 left-distance==B2of3 and right-weight==B2of2 and right-distance==B2of2
 0,0935 left-distance==B3of3 impl right-distance==B2of2
 0,0909 (right-distance <= 2) and (left-distance >= 3) and (left-weight >= 4)
 0,0900 num-of-N((left-weight >= 5) and (right-weight <= 4))
 0,0883 left-distance==B1of3 and right-weight==B2of2
 0,0835 right-distance
 0,0832 num-of-N((left-distance >= 5) and (right-weight <= 4))
 0,0812 num-of-N((left-weight >= 5) and (right-distance <= 4))
 0,0807 left-weight==B2of2 xor left-distance==B1of3
 0,0807 left-weight==B2of2 equ left-distance==B1of3
 0,0800 left-distance==B1of3 and right-distance==B2of2
 0,0774 (right-weight <= 1)
 0,0774 num-of-N((left-distance >= 5) and (right-distance <= 4))
 0,0774 left-distance
 0,0740 (right-distance <= 1)
 0,0692 (left-weight >= 5) and (right-distance <= 4) and (left-distance >= 3) and (right-weight <= 4)
 0,0671 left-distance==B1of3 and right-weight==B2of2 and right-distance==B2of2
 0,0641 (right-distance <= 1) and (left-distance >= 4)
 0,0597 (right-weight <= 1) and (right-distance <= 3) and (left-distance >= 3)
 0,0550 (left-weight >= 5) and (right-weight <= 4)
 0,0544 (left-weight >= 5) and (right-distance <= 4)
 0,0479 (left-distance >= 5) and (right-distance <= 4)
 0,0478 left-distance==B2of3 or right-weight==B2of2 or right-distance==B2of2
 0,0451 (left-distance >= 5) and (right-weight <= 4)
 0,0445 (right-distance <= 1) and (left-distance >= 4) and (right-weight <= 3)
 0,0439 left-distance==B2of3 or right-weight==B2of2
 0,0406 left-weight==B2of2 impl left-distance==B2of3
 0,0389 left-weight==B2of2 and left-distance==B3of3 and right-distance==B2of2
 0,0375 left-weight==B2of2 and left-distance==B3of3 and right-weight==B2of2
 0,0369 left-distance==B2of3 and right-weight==B2of2
 0,0350 left-distance==B3of3 or right-weight==B2of2 or right-distance==B2of2
 0,0336 left-weight==B2of2 and left-distance==B1of3 and right-weight==B2of2
 0,0333 left-distance==B2of3 or right-distance==B2of2
 0,0333 left-weight==B2of2 or left-distance==B1of3
 0,0320 left-weight==B2of2 and left-distance==B1of3 and right-distance==B2of2
 0,0311 left-distance==B2of3 and right-distance==B2of2
 0,0263 left-weight==B2of2 or left-distance==B2of3
 0,0247 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0240 right-weight==B2of2 xor right-distance==B2of2
 0,0240 right-weight==B2of2 equ right-distance==B2of2
 0,0219 left-distance==B2of3 impl right-weight==B2of2
 0,0207 left-distance==B1of3 xor right-weight==B2of2
 0,0207 left-distance==B1of3 equ right-weight==B2of2
 0,0198 right-weight DIVIDE right-distance
 0,0198 right-distance DIVIDE right-weight
 0,0197 left-weight DIFF right-weight
 0,0186 left-distance==B2of3 impl right-distance==B2of2
 0,0184 left-weight DIVIDE left-distance
 0,0184 left-distance DIVIDE left-weight
 0,0181 left-weight DIFF right-distance
 0,0177 left-distance DIFF right-weight
 0,0173 left-weight==B2of2 and left-distance==B1of3
 0,0170 left-distance==B1of3 xor right-distance==B2of2
 0,0170 left-distance==B1of3 equ right-distance==B2of2
 0,0168 left-distance DIFF right-distance
 0,0159 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0128 left-distance==B3of3 xor right-weight==B2of2
 0,0128 left-distance==B3of3 equ right-weight==B2of2
 0,0081 left-distance==B3of3 xor right-distance==B2of2
 0,0081 left-distance==B3of3 equ right-distance==B2of2
 0,0050 left-weight==B2of2 or left-distance==B3of3 or right-distance==B2of2
 0,0047 left-weight==B2of2 or left-distance==B3of3 or right-weight==B2of2
 0,0045 left-weight==B2of2 and left-distance==B2of3
 0,0045 left-distance==B3of3 or right-weight==B2of2
 0,0040 left-distance==B1of3 impl right-distance==B2of2
 0,0020 left-distance==B1of3 impl right-weight==B2of2
 0,0002 left-distance==B3of3 or right-distance==B2of2
 0,0002 left-distance==B3of3 and right-weight==B2of2 and right-distance==B2of2
 -0,0002 left-distance MULTIPLY right-weight
 -0,0002 left-distance ADD right-weight
 -0,0007 left-distance MULTIPLY right-distance
 -0,0007 left-distance ADD right-distance
 -0,0008 left-weight==B2of2 or left-distance==B1of3 or right-distance==B2of2
 -0,0013 left-weight MULTIPLY right-weight
 -0,0013 left-weight MULTIPLY right-distance
 -0,0013 left-weight ADD right-weight
 -0,0013 left-weight ADD right-distance
 -0,0014 right-weight==B2of2 impl right-distance==B2of2
 -0,0020 left-weight==B2of2 xor right-weight==B2of2
 -0,0020 left-weight==B2of2 equ right-weight==B2of2
 -0,0024 left-weight==B2of2 or left-distance==B1of3 or right-weight==B2of2
 -0,0028 left-weight==B2of2 xor right-distance==B2of2
 -0,0028 left-weight==B2of2 equ right-distance==B2of2
 -0,0029 left-weight==B2of2 or right-distance==B2of2
 -0,0040 left-weight==B2of2 or right-weight==B2of2
 -0,0040 left-weight==B2of2 or left-distance==B2of3 or right-distance==B2of2
 -0,0040 left-weight==B2of2 or left-distance==B2of3 or right-weight==B2of2
 -0,0043 left-weight SUBTRACT left-distance
 -0,0048 right-weight SUBTRACT right-distance
 -0,0048 left-weight==B2of2 and left-distance==B2of3 and right-weight==B2of2
 -0,0063 left-distance==B3of3 and right-distance==B2of2
 -0,0068 left-distance==B3of3 and right-weight==B2of2
 -0,0078 left-weight==B2of2 and left-distance==B2of3 and right-distance==B2of2
 -0,0079 left-weight==B2of2 xor left-distance==B2of3
 -0,0079 left-weight==B2of2 equ left-distance==B2of3
 -0,0083 left-weight DIFF left-distance
 -0,0085 right-weight DIFF right-distance
 -0,0095 left-weight==B2of2 and right-weight==B2of2
 -0,0096 left-weight==B2of2 xor left-distance==B3of3
 -0,0096 left-weight==B2of2 equ left-distance==B3of3
 -0,0100 left-weight==B2of2 and right-distance==B2of2
 -0,0103 right-weight LESSTHAN right-distance
 -0,0107 left-weight LESSTHAN left-distance
 -0,0109 left-weight==B2of2 impl left-distance==B3of3
 -0,0111 left-distance==B2of3 xor right-weight==B2of2
 -0,0111 left-distance==B2of3 equ right-weight==B2of2
 -0,0114 left-distance==B2of3 xor right-distance==B2of2
 -0,0114 left-distance==B2of3 equ right-distance==B2of2
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  6
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3903 num-of-N((right-distance <= 3) and (left-weight >= 4) and (left-distance >= 2) and (right-weight <= 3))
 0,3685 num-of-N((left-weight >= 3) and (left-distance >= 3) and (right-weight <= 2))
 0,3501 num-of-N((right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3))
 0,3296 num-of-N((left-weight >= 3) and (left-distance >= 3) and (right-weight <= 3))
 0,3142 num-of-N((left-distance >= 2) and (right-weight <= 2) and (left-weight >= 2))
 0,2953 num-of-N((right-distance <= 1) and (right-weight <= 3) and (left-weight >= 3))
 0,2890 num-of-N((right-weight <= 1) and (left-distance >= 2) and (left-weight >= 2))
 0,2813 num-of-N((right-distance <= 1) and (left-distance >= 2) and (left-weight >= 2))
 0,2787 num-of-N((left-distance >= 4) and (left-weight >= 4) and (right-weight <= 3))
 0,2738 num-of-N((right-distance <= 3) and (right-weight <= 2) and (left-weight >= 2))
 0,2726 num-of-N((right-distance <= 3) and (left-distance >= 4) and (right-weight <= 3))
 0,2656 num-of-N((left-weight >= 4) and (right-distance <= 3) and (left-distance >= 4))
 0,2419 num-of-N((right-weight <= 1) and (right-distance <= 3) and (left-weight >= 4))
 0,2206 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,2188 num-of-N((right-weight <= 2) and (left-distance >= 3))
 0,2187 num-of-N((left-weight >= 3) and (right-weight <= 2))
 0,2124 left-weight_x_right-weight
 0,2115 right-weight DIVIDE left-distance
 0,2115 left-distance SUBTRACT right-weight
 0,2115 left-distance LESSTHAN right-weight
 0,2115 left-distance DIVIDE right-weight
 0,2114 left-weight_x_left-distance
 0,2112 (left-distance >= 2) and (right-weight <= 2) and (left-weight >= 2)
 0,2111 left-distance_x_right-weight
 0,2105 left-weight MULTIPLY left-distance
 0,2089 num-of-N((left-weight >= 3) and (right-distance <= 2))
 0,2049 num-of-N((left-distance >= 3) and (right-distance <= 2))
 0,2026 (left-weight >= 3) and (left-distance >= 3) and (right-weight <= 3)
 0,2017 left-weight_x_right-distance
 0,1971 left-weight ADD left-distance
 0,1968 left-distance_x_right-distance
 0,1967 right-distance DIVIDE left-distance
 0,1967 left-distance SUBTRACT right-distance
 0,1967 left-distance LESSTHAN right-distance
 0,1967 left-distance DIVIDE right-distance
 0,1955 right-weight MULTIPLY right-distance
 0,1926 right-weight ADD right-distance
 0,1917 right-weight DIVIDE left-weight
 0,1917 left-weight SUBTRACT right-weight
 0,1917 left-weight DIVIDE right-weight
 0,1909 left-weight LESSTHAN right-weight
 0,1899 right-weight_x_right-distance
 0,1868 num-of-N((right-distance <= 2) and (right-weight <= 3))
 0,1859 left-weight==B2of2 and left-distance==B2of2
 0,1859 (left-weight >= 3) and (left-distance >= 3)
 0,1844 right-distance DIVIDE left-weight
 0,1844 left-weight SUBTRACT right-distance
 0,1844 left-weight LESSTHAN right-distance
 0,1844 left-weight DIVIDE right-distance
 0,1839 num-of-N((right-distance <= 2) and (left-distance >= 2))
 0,1815 num-of-N((left-distance >= 4) and (left-weight >= 4))
 0,1808 num-of-N((left-distance >= 2) and (right-weight <= 1))
 0,1744 num-of-N((left-distance >= 4) and (right-weight <= 3))
 0,1732 num-of-N((right-distance <= 1) and (left-distance >= 2))
 0,1732 num-of-N((left-distance >= 2) and (right-distance <= 1))
 0,1704 num-of-N((left-weight >= 2) and (right-weight <= 1))
 0,1694 right-weight==B2of2 and right-distance==B2of2
 0,1639 num-of-N((left-weight >= 2) and (right-distance <= 1))
 0,1614 num-of-N((left-weight >= 4) and (right-weight <= 3))
 0,1543 (left-weight >= 3) and (left-distance >= 3) and (right-weight <= 2)
 0,1519 (right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3)
 0,1497 num-of-N((left-weight >= 4) and (right-distance <= 3))
 0,1439 left-weight==B2of2 impl right-weight==B2of2
 0,1439 (left-weight >= 3) and (right-weight <= 2)
 0,1400 left-distance==B2of2 impl right-weight==B2of2
 0,1400 (right-weight <= 2) and (left-distance >= 3)
 0,1371 (right-distance <= 2) and (left-distance >= 2)
 0,1343 num-of-N((left-distance >= 2) and (left-weight >= 5))
 0,1305 left-weight==B2of2 impl right-distance==B2of2
 0,1305 (left-weight >= 3) and (right-distance <= 2)
 0,1299 (right-weight <= 1) and (left-distance >= 2) and (left-weight >= 2)
 0,1291 (left-distance >= 4) and (left-weight >= 4)
 0,1247 left-distance==B2of2 impl right-distance==B2of2
 0,1247 (left-distance >= 3) and (right-distance <= 2)
 0,1238 (right-distance <= 3) and (right-weight <= 2) and (left-weight >= 2)
 0,1220 num-of-N((left-distance >= 4) and (right-distance <= 4))
 0,1159 (right-distance <= 1) and (left-distance >= 2) and (left-weight >= 2)
 0,1102 (left-distance >= 4) and (right-weight <= 3)
 0,1092 (right-distance <= 3) and (left-weight >= 4) and (left-distance >= 2) and (right-weight <= 3)
 0,1090 (left-weight >= 2) and (right-weight <= 1)
 0,1058 (left-weight >= 4) and (right-weight <= 3)
 0,1017 left-weight==B2of2 or left-distance==B2of2
 0,1006 left-distance
 0,0999 (left-distance >= 4) and (left-weight >= 4) and (right-weight <= 3)
 0,0998 left-weight
 0,0997 (left-distance >= 2) and (right-weight <= 1)
 0,0994 (left-distance >= 4) and (right-distance <= 4)
 0,0982 (right-distance <= 2) and (right-weight <= 3)
 0,0977 (left-weight >= 4) and (right-distance <= 3) and (left-distance >= 4)
 0,0966 (left-weight >= 4) and (right-distance <= 3)
 0,0954 (right-distance <= 1) and (left-distance >= 2)
 0,0954 (left-distance >= 2) and (right-distance <= 1)
 0,0950 (right-distance <= 3) and (left-distance >= 4) and (right-weight <= 3)
 0,0949 right-weight
 0,0943 (left-weight >= 2) and (right-distance <= 1)
 0,0907 right-weight==B2of2 or right-distance==B2of2
 0,0868 num-of-N((left-weight >= 5) and (left-distance >= 5))
 0,0863 right-distance
 0,0810 num-of-N((left-distance >= 5) and (right-weight <= 4))
 0,0799 num-of-N((left-weight >= 5) and (right-distance <= 4))
 0,0790 (right-weight <= 1)
 0,0715 (left-distance >= 2) and (left-weight >= 5)
 0,0703 (right-distance <= 1)
 0,0609 (right-distance <= 1) and (right-weight <= 3) and (left-weight >= 3)
 0,0507 (left-distance >= 5) and (right-weight <= 4)
 0,0495 (left-weight >= 5) and (right-distance <= 4)
 0,0465 (right-weight <= 1) and (right-distance <= 3) and (left-weight >= 4)
 0,0356 left-weight==B2of2 and left-distance==B2of2 and right-distance==B2of2
 0,0344 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0308 (left-weight >= 5) and (left-distance >= 5)
 0,0273 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0233 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0218 left-weight DIVIDE left-distance
 0,0218 left-distance DIVIDE left-weight
 0,0217 left-distance DIFF right-distance
 0,0215 left-distance DIFF right-weight
 0,0214 left-weight DIFF right-weight
 0,0210 left-weight==B2of2 xor left-distance==B2of2
 0,0210 left-weight==B2of2 equ left-distance==B2of2
 0,0203 right-weight DIVIDE right-distance
 0,0203 right-distance DIVIDE right-weight
 0,0200 left-weight DIFF right-distance
 0,0200 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0198 right-weight==B2of2 xor right-distance==B2of2
 0,0198 right-weight==B2of2 equ right-distance==B2of2
 0,0150 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0141 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0133 left-weight==B2of2 or left-distance==B2of2 or right-distance==B2of2
 0,0020 left-distance==B2of2 xor right-distance==B2of2
 0,0020 left-distance==B2of2 equ right-distance==B2of2
 0,0008 left-weight MULTIPLY right-weight
 0,0008 left-weight ADD right-weight
 0,0008 left-weight==B2of2 impl left-distance==B2of2
 0,0007 left-distance==B2of2 xor right-weight==B2of2
 0,0007 left-distance==B2of2 equ right-weight==B2of2
 0,0003 left-weight==B2of2 xor right-distance==B2of2
 0,0003 left-weight==B2of2 equ right-distance==B2of2
 0,0002 left-distance MULTIPLY right-distance
 0,0002 left-distance ADD right-distance
 0,0002 left-weight==B2of2 xor right-weight==B2of2
 0,0002 left-weight==B2of2 equ right-weight==B2of2
 -0,0002 left-weight MULTIPLY right-distance
 -0,0002 left-weight ADD right-distance
 -0,0004 left-distance MULTIPLY right-weight
 -0,0004 left-distance ADD right-weight
 -0,0010 left-weight==B2of2 or right-weight==B2of2
 -0,0013 right-weight==B2of2 impl right-distance==B2of2
 -0,0028 left-weight==B2of2 or right-distance==B2of2
 -0,0033 left-distance==B2of2 or right-weight==B2of2
 -0,0037 left-weight SUBTRACT left-distance
 -0,0037 right-weight SUBTRACT right-distance
 -0,0044 left-distance==B2of2 or right-distance==B2of2
 -0,0071 left-distance==B2of2 and right-distance==B2of2
 -0,0077 left-weight DIFF left-distance
 -0,0088 left-distance==B2of2 and right-weight==B2of2
 -0,0090 left-weight==B2of2 and right-distance==B2of2
 -0,0091 right-weight DIFF right-distance
 -0,0100 left-weight==B2of2 and right-weight==B2of2
 -0,0100 left-weight LESSTHAN left-distance
 -0,0100 right-weight LESSTHAN right-distance
MDL (param. search)
The best parameter when using J48: MDL@0.25
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.25
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  7
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3932 num-of-N((right-weight <= 3) and (right-distance <= 3) and (left-weight >= 4) and (left-distance >= 2))
 0,3509 num-of-N((right-distance <= 2) and (right-weight <= 2) and (left-weight >= 3))
 0,3421 num-of-N((right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3))
 0,3277 num-of-N((right-weight <= 2) and (left-distance >= 3) and (left-weight >= 3))
 0,3050 num-of-N((right-distance <= 1) and (left-weight >= 2) and (left-distance >= 2))
 0,2974 num-of-N((left-distance >= 4) and (right-distance <= 3) and (left-weight >= 3))
 0,2691 num-of-N((right-distance <= 3) and (left-distance >= 4) and (right-weight <= 3))
 0,2653 num-of-N((right-weight <= 1) and (left-distance >= 2) and (left-weight >= 2))
 0,2545 num-of-N((left-distance >= 4) and (left-weight >= 4) and (right-weight <= 3))
 0,2128 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,2077 right-distance DIVIDE left-weight
 0,2077 left-weight SUBTRACT right-distance
 0,2077 left-weight DIVIDE right-distance
 0,2071 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,2057 left-weight_x_right-distance
 0,2027 right-distance DIVIDE left-distance
 0,2027 left-distance SUBTRACT right-distance
 0,2027 left-distance DIVIDE right-distance
 0,2019 left-weight LESSTHAN right-distance
 0,2013 right-weight_x_right-distance
 0,2006 left-distance_x_right-distance
 0,2006 right-weight MULTIPLY right-distance
 0,1989 left-distance LESSTHAN right-distance
 0,1977 num-of-N((right-distance <= 1) and (left-weight >= 2))
 0,1974 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,1946 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,1939 num-of-N((right-weight <= 2) and (left-distance >= 3))
 0,1913 left-weight MULTIPLY left-distance
 0,1908 right-weight ADD right-distance
 0,1892 left-weight_x_right-weight
 0,1882 num-of-N((left-distance >= 3) and (right-distance <= 1))
 0,1881 num-of-N((right-weight <= 2) and (right-distance <= 3))
 0,1868 left-distance_x_right-weight
 0,1863 right-weight DIVIDE left-weight
 0,1863 left-weight SUBTRACT right-weight
 0,1863 left-weight DIVIDE right-weight
 0,1852 left-weight_x_left-distance
 0,1821 left-weight ADD left-distance
 0,1757 left-weight LESSTHAN right-weight
 0,1733 num-of-N((left-weight >= 4) and (right-distance <= 3))
 0,1733 num-of-N((left-distance >= 4) and (left-weight >= 3))
 0,1731 right-weight==B2of2 and right-distance==B2of2
 0,1724 right-weight DIVIDE left-distance
 0,1724 left-distance SUBTRACT right-weight
 0,1724 left-distance DIVIDE right-weight
 0,1674 left-weight==B2of2 and left-distance==B2of2
 0,1674 (left-weight >= 3) and (left-distance >= 3)
 0,1665 num-of-N((left-distance >= 4) and (right-distance <= 3))
 0,1650 left-distance LESSTHAN right-weight
 0,1638 num-of-N((right-distance <= 1) and (right-weight <= 3))
 0,1603 num-of-N((right-weight <= 1) and (left-distance >= 2))
 0,1603 num-of-N((left-distance >= 2) and (right-weight <= 1))
 0,1586 num-of-N((right-weight <= 1) and (left-weight >= 2))
 0,1558 (right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3)
 0,1558 num-of-N((left-weight >= 4) and (right-weight <= 3))
 0,1535 num-of-N((left-distance >= 2) and (left-weight >= 4))
 0,1506 (left-distance >= 4) and (right-distance <= 3) and (left-weight >= 3)
 0,1481 num-of-N((left-distance >= 4) and (right-weight <= 3))
 0,1436 (right-weight <= 2) and (left-distance >= 3) and (left-weight >= 3)
 0,1413 left-weight==B2of2 impl right-distance==B2of2
 0,1413 (right-distance <= 2) and (left-weight >= 3)
 0,1362 (right-distance <= 1) and (left-weight >= 2) and (left-distance >= 2)
 0,1327 (left-distance >= 4) and (left-weight >= 3)
 0,1321 left-distance==B2of2 impl right-distance==B2of2
 0,1321 (right-distance <= 2) and (left-distance >= 3)
 0,1270 left-weight==B2of2 impl right-weight==B2of2
 0,1270 (right-weight <= 2) and (left-weight >= 3)
 0,1249 left-distance==B2of2 impl right-weight==B2of2
 0,1249 (right-weight <= 2) and (left-distance >= 3)
 0,1205 (left-distance >= 2) and (left-weight >= 4)
 0,1198 (right-distance <= 1) and (left-weight >= 2)
 0,1198 (right-weight <= 1) and (left-distance >= 2) and (left-weight >= 2)
 0,1162 (left-weight >= 4) and (right-distance <= 3)
 0,1153 (right-weight <= 3) and (right-distance <= 3) and (left-weight >= 4) and (left-distance >= 2)
 0,1114 (right-weight <= 2) and (right-distance <= 3)
 0,1073 (left-distance >= 4) and (right-distance <= 3)
 0,1055 (left-weight >= 4) and (right-weight <= 3)
 0,1021 right-distance
 0,1008 (right-distance <= 3) and (left-distance >= 4) and (right-weight <= 3)
 0,1006 right-weight==B2of2 or right-distance==B2of2
 0,0989 (left-distance >= 4) and (right-weight <= 3)
 0,0957 (right-weight <= 1) and (left-distance >= 2)
 0,0957 (left-distance >= 2) and (right-weight <= 1)
 0,0954 (right-distance <= 1)
 0,0928 (right-weight <= 1) and (left-weight >= 2)
 0,0904 (left-distance >= 4) and (left-weight >= 4) and (right-weight <= 3)
 0,0897 left-weight
 0,0877 (left-distance >= 3) and (right-distance <= 1)
 0,0863 (right-distance <= 2) and (right-weight <= 2) and (left-weight >= 3)
 0,0861 right-weight
 0,0854 left-weight==B2of2 or left-distance==B2of2
 0,0854 left-distance
 0,0842 (right-distance <= 1) and (right-weight <= 3)
 0,0769 num-of-N((left-distance >= 5) and (right-distance <= 4))
 0,0714 num-of-N((left-weight >= 5) and (right-weight <= 4))
 0,0679 (right-weight <= 1)
 0,0466 (left-weight >= 5) and (right-weight <= 4)
 0,0430 (left-distance >= 5) and (right-distance <= 4)
 0,0298 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0284 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0276 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0274 left-weight DIFF right-distance
 0,0251 left-distance DIFF right-weight
 0,0250 right-weight DIVIDE right-distance
 0,0250 right-distance DIVIDE right-weight
 0,0231 left-weight==B2of2 and left-distance==B2of2 and right-distance==B2of2
 0,0226 left-weight==B2of2 xor left-distance==B2of2
 0,0226 left-weight==B2of2 equ left-distance==B2of2
 0,0223 left-distance DIFF right-distance
 0,0211 left-weight DIFF right-weight
 0,0202 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0201 right-weight==B2of2 xor right-distance==B2of2
 0,0201 right-weight==B2of2 equ right-distance==B2of2
 0,0191 left-weight DIVIDE left-distance
 0,0191 left-distance DIVIDE left-weight
 0,0180 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0137 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0129 left-weight==B2of2 or left-distance==B2of2 or right-distance==B2of2
 0,0034 right-weight==B2of2 impl right-distance==B2of2
 0,0027 left-weight==B2of2 xor right-distance==B2of2
 0,0027 left-weight==B2of2 equ right-distance==B2of2
 0,0017 left-weight MULTIPLY right-distance
 0,0017 left-weight ADD right-distance
 0,0015 left-distance==B2of2 xor right-weight==B2of2
 0,0015 left-distance==B2of2 equ right-weight==B2of2
 0,0010 left-distance MULTIPLY right-distance
 0,0010 left-distance ADD right-distance
 0,0003 left-weight==B2of2 impl left-distance==B2of2
 0,0001 left-distance MULTIPLY right-weight
 0,0001 left-distance ADD right-weight
 -0,0013 left-weight MULTIPLY right-weight
 -0,0013 left-weight ADD right-weight
 -0,0018 left-weight==B2of2 or right-distance==B2of2
 -0,0020 left-distance==B2of2 or right-weight==B2of2
 -0,0024 left-distance==B2of2 or right-distance==B2of2
 -0,0024 right-weight SUBTRACT right-distance
 -0,0028 left-distance==B2of2 xor right-distance==B2of2
 -0,0028 left-distance==B2of2 equ right-distance==B2of2
 -0,0030 left-weight SUBTRACT left-distance
 -0,0037 left-weight==B2of2 xor right-weight==B2of2
 -0,0037 left-weight==B2of2 equ right-weight==B2of2
 -0,0057 left-weight==B2of2 or right-weight==B2of2
 -0,0069 right-weight DIFF right-distance
 -0,0084 left-weight==B2of2 and right-distance==B2of2
 -0,0090 left-weight DIFF left-distance
 -0,0092 left-distance==B2of2 and right-weight==B2of2
 -0,0095 left-weight==B2of2 and right-weight==B2of2
 -0,0102 left-distance==B2of2 and right-distance==B2of2
 -0,0110 right-weight LESSTHAN right-distance
 -0,0111 left-weight LESSTHAN left-distance
MDL (param. search)
The best parameter when using J48: MDL@0.25
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  8
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3557 num-of-N((right-weight <= 2) and (left-weight >= 3) and (left-distance >= 3))
 0,3349 num-of-N((right-distance <= 3) and (right-weight <= 2) and (left-weight >= 3))
 0,3327 num-of-N((left-weight >= 3) and (left-distance >= 3) and (right-weight <= 3))
 0,3165 num-of-N((right-distance <= 2) and (left-distance >= 3) and (left-weight >= 2))
 0,2909 num-of-N((right-distance <= 1) and (left-distance >= 2) and (left-weight >= 3))
 0,2836 num-of-N((right-weight <= 1) and (left-weight >= 2) and (left-distance >= 2))
 0,2836 num-of-N((right-weight <= 1) and (left-distance >= 2) and (left-weight >= 2))
 0,2820 num-of-N((left-weight >= 4) and (left-distance >= 4) and (right-weight <= 3))
 0,2781 num-of-N((right-weight <= 3) and (right-distance <= 3) and (left-weight >= 2))
 0,2730 num-of-N((right-distance <= 1) and (left-weight >= 2) and (left-distance >= 2))
 0,2657 num-of-N((right-distance <= 3) and (left-weight >= 4) and (left-distance >= 4))
 0,2578 num-of-N((right-distance <= 1) and (right-weight <= 3) and (left-distance >= 2))
 0,2560 num-of-N((left-weight >= 4) and (right-distance <= 3) and (left-distance >= 2))
 0,2513 num-of-N((left-weight >= 5) and (left-distance >= 3) and (right-weight <= 4) and (right-distance <= 4))
 0,2208 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,2200 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,2147 left-weight_x_right-distance
 0,2129 left-weight_x_right-weight
 0,2108 num-of-N((right-weight <= 2) and (left-distance >= 3))
 0,2068 (left-weight >= 3) and (left-distance >= 3) and (right-weight <= 3)
 0,2065 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,2043 num-of-N((left-weight >= 3) and (right-weight <= 3))
 0,2032 right-weight DIVIDE left-weight
 0,2032 left-weight SUBTRACT right-weight
 0,2032 left-weight LESSTHAN right-weight
 0,2032 left-weight DIVIDE right-weight
 0,2031 left-distance_x_right-weight
 0,2017 left-weight MULTIPLY left-distance
 0,2016 right-weight DIVIDE left-distance
 0,2016 left-distance SUBTRACT right-weight
 0,2016 left-distance LESSTHAN right-weight
 0,2016 left-distance DIVIDE right-weight
 0,1997 right-distance DIVIDE left-weight
 0,1997 left-weight SUBTRACT right-distance
 0,1997 left-weight LESSTHAN right-distance
 0,1997 left-weight DIVIDE right-distance
 0,1995 right-weight_x_right-distance
 0,1985 right-weight MULTIPLY right-distance
 0,1977 num-of-N((left-weight >= 4) and (right-weight <= 2))
 0,1973 left-weight_x_left-distance
 0,1970 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,1955 num-of-N((left-weight >= 3) and (right-distance <= 3))
 0,1931 num-of-N((right-weight <= 2) and (right-distance <= 3))
 0,1927 right-weight ADD right-distance
 0,1911 left-distance_x_right-distance
 0,1886 left-weight ADD left-distance
 0,1878 num-of-N((left-distance >= 3) and (right-weight <= 3))
 0,1861 num-of-N((left-weight >= 3) and (left-distance >= 4))
 0,1792 right-distance DIVIDE left-distance
 0,1792 left-distance SUBTRACT right-distance
 0,1792 left-distance DIVIDE right-distance
 0,1766 num-of-N((left-weight >= 2) and (right-weight <= 1))
 0,1750 left-weight==B2of2 and left-distance==B2of2
 0,1750 (left-weight >= 3) and (left-distance >= 3)
 0,1744 num-of-N((left-distance >= 2) and (right-weight <= 1))
 0,1723 left-distance LESSTHAN right-distance
 0,1701 num-of-N((right-distance <= 1) and (left-weight >= 2))
 0,1700 right-weight==B2of2 and right-distance==B2of2
 0,1700 (right-distance <= 2) and (left-distance >= 3) and (left-weight >= 2)
 0,1678 num-of-N((right-weight <= 1) and (right-distance <= 3))
 0,1657 (left-weight >= 3) and (right-weight <= 3)
 0,1628 num-of-N((left-weight >= 4) and (left-distance >= 4))
 0,1608 (right-weight <= 2) and (left-weight >= 3) and (left-distance >= 3)
 0,1591 (right-weight <= 3) and (right-distance <= 3) and (left-weight >= 2)
 0,1590 num-of-N((left-distance >= 4) and (left-weight >= 2))
 0,1553 num-of-N((left-distance >= 2) and (right-distance <= 1))
 0,1504 num-of-N((left-distance >= 4) and (right-distance <= 3))
 0,1503 left-weight==B2of2 impl right-weight==B2of2
 0,1503 (right-weight <= 2) and (left-weight >= 3)
 0,1496 (left-distance >= 3) and (right-weight <= 3)
 0,1479 (left-weight >= 3) and (right-distance <= 3)
 0,1426 (left-weight >= 4) and (right-distance <= 3) and (left-distance >= 2)
 0,1393 left-distance==B2of2 impl right-weight==B2of2
 0,1393 (right-weight <= 2) and (left-distance >= 3)
 0,1364 left-weight==B2of2 impl right-distance==B2of2
 0,1364 (right-distance <= 2) and (left-weight >= 3)
 0,1333 (left-weight >= 3) and (left-distance >= 4)
 0,1279 left-distance==B2of2 impl right-distance==B2of2
 0,1279 (right-distance <= 2) and (left-distance >= 3)
 0,1267 (right-weight <= 1) and (left-weight >= 2) and (left-distance >= 2)
 0,1267 (right-weight <= 1) and (left-distance >= 2) and (left-weight >= 2)
 0,1225 (right-distance <= 3) and (right-weight <= 2) and (left-weight >= 3)
 0,1209 (left-distance >= 4) and (left-weight >= 2)
 0,1175 (right-distance <= 1) and (left-weight >= 2) and (left-distance >= 2)
 0,1158 (right-weight <= 2) and (right-distance <= 3)
 0,1105 (left-weight >= 4) and (right-weight <= 2)
 0,1074 (left-distance >= 2) and (right-weight <= 1)
 0,1074 (left-weight >= 4) and (left-distance >= 4)
 0,1052 right-weight==B2of2 or right-distance==B2of2
 0,1045 (left-weight >= 2) and (right-weight <= 1)
 0,1023 left-weight
 0,1012 right-weight
 0,0993 (left-weight >= 4) and (left-distance >= 4) and (right-weight <= 3)
 0,0949 (left-distance >= 2) and (right-distance <= 1)
 0,0949 left-weight==B2of2 or left-distance==B2of2
 0,0948 (right-distance <= 3) and (left-weight >= 4) and (left-distance >= 4)
 0,0948 (right-distance <= 1) and (left-distance >= 2) and (left-weight >= 3)
 0,0938 right-distance
 0,0922 (left-distance >= 4) and (right-distance <= 3)
 0,0908 (right-distance <= 1) and (left-weight >= 2)
 0,0872 left-distance
 0,0870 num-of-N((left-distance >= 5) and (right-weight <= 4))
 0,0868 num-of-N((left-weight >= 5) and (right-weight <= 4))
 0,0841 (right-distance <= 1) and (right-weight <= 3) and (left-distance >= 2)
 0,0822 (right-weight <= 1)
 0,0766 num-of-N((left-distance >= 5) and (right-distance <= 4))
 0,0759 (right-weight <= 1) and (right-distance <= 3)
 0,0731 num-of-N((left-weight >= 5) and (right-distance <= 4))
 0,0699 (right-distance <= 1)
 0,0630 (left-weight >= 5) and (left-distance >= 3) and (right-weight <= 4) and (right-distance <= 4)
 0,0466 (left-distance >= 5) and (right-weight <= 4)
 0,0457 (left-weight >= 5) and (right-weight <= 4)
 0,0433 (left-weight >= 5) and (right-distance <= 4)
 0,0433 (left-distance >= 5) and (right-distance <= 4)
 0,0294 left-weight==B2of2 and left-distance==B2of2 and right-distance==B2of2
 0,0228 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0217 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0214 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0212 left-weight==B2of2 xor left-distance==B2of2
 0,0212 left-weight==B2of2 equ left-distance==B2of2
 0,0208 left-weight DIVIDE left-distance
 0,0208 left-distance DIVIDE left-weight
 0,0196 left-weight DIFF right-weight
 0,0179 left-distance DIFF right-distance
 0,0173 left-weight DIFF right-distance
 0,0168 left-distance DIFF right-weight
 0,0168 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0166 right-weight DIVIDE right-distance
 0,0166 right-distance DIVIDE right-weight
 0,0164 right-weight==B2of2 xor right-distance==B2of2
 0,0164 right-weight==B2of2 equ right-distance==B2of2
 0,0141 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0138 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0131 left-weight==B2of2 or left-distance==B2of2 or right-distance==B2of2
 0,0013 left-weight MULTIPLY right-weight
 0,0013 left-weight ADD right-weight
 0,0013 left-distance MULTIPLY right-weight
 0,0013 left-distance ADD right-weight
 0,0001 left-distance MULTIPLY right-distance
 0,0001 left-distance ADD right-distance
 -0,0012 right-weight==B2of2 impl right-distance==B2of2
 -0,0012 left-weight==B2of2 xor right-weight==B2of2
 -0,0012 left-weight==B2of2 equ right-weight==B2of2
 -0,0013 left-weight MULTIPLY right-distance
 -0,0013 left-weight ADD right-distance
 -0,0015 left-distance==B2of2 or right-distance==B2of2
 -0,0019 left-weight==B2of2 impl left-distance==B2of2
 -0,0025 left-weight==B2of2 or right-weight==B2of2
 -0,0028 left-distance==B2of2 xor right-distance==B2of2
 -0,0028 left-distance==B2of2 equ right-distance==B2of2
 -0,0028 left-weight==B2of2 or right-distance==B2of2
 -0,0031 right-weight SUBTRACT right-distance
 -0,0042 left-weight SUBTRACT left-distance
 -0,0050 left-distance==B2of2 xor right-weight==B2of2
 -0,0050 left-distance==B2of2 equ right-weight==B2of2
 -0,0052 left-weight==B2of2 xor right-distance==B2of2
 -0,0052 left-weight==B2of2 equ right-distance==B2of2
 -0,0052 left-distance==B2of2 or right-weight==B2of2
 -0,0076 right-weight DIFF right-distance
 -0,0081 left-weight DIFF left-distance
 -0,0098 left-weight==B2of2 and right-weight==B2of2
 -0,0101 left-distance==B2of2 and right-weight==B2of2
 -0,0105 left-weight LESSTHAN left-distance
 -0,0106 left-distance==B2of2 and right-distance==B2of2
 -0,0108 left-weight==B2of2 and right-distance==B2of2
 -0,0110 right-weight LESSTHAN right-distance
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  9
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,4478 num-of-N((right-weight <= 3) and (right-distance <= 2) and (left-weight >= 2) and (left-distance >= 3))
 0,3370 num-of-N((right-distance <= 2) and (left-distance >= 3) and (left-weight >= 3))
 0,2947 num-of-N((left-weight >= 3) and (right-weight <= 2) and (left-distance >= 2))
 0,2814 num-of-N((right-distance <= 3) and (left-weight >= 5) and (left-distance >= 2) and (right-weight <= 4))
 0,2795 num-of-N((right-weight <= 1) and (left-weight >= 2) and (left-distance >= 3))
 0,2759 num-of-N((left-distance >= 3) and (right-weight <= 3) and (left-weight >= 2))
 0,2750 num-of-N((right-distance <= 3) and (right-weight <= 1) and (left-distance >= 3))
 0,2689 num-of-N((right-distance <= 1) and (left-distance >= 2) and (left-weight >= 2))
 0,2675 num-of-N((left-weight >= 3) and (right-distance <= 3) and (left-distance >= 2))
 0,2610 num-of-N((left-distance >= 4) and (left-weight >= 4) and (right-distance <= 3))
 0,2591 num-of-N((right-distance <= 1) and (left-distance >= 4) and (right-weight <= 3))
 0,2583 num-of-N((left-weight >= 4) and (left-distance >= 4) and (right-weight <= 3))
 0,2574 num-of-N((right-distance <= 3) and (left-weight >= 2) and (right-weight <= 3))
 0,2529 num-of-N((right-weight <= 1) and (right-distance <= 3) and (left-weight >= 2))
 0,2514 num-of-N((right-distance <= 1) and (right-weight <= 3) and (left-weight >= 4))
 0,2513 num-of-N((right-weight <= 3) and (left-distance >= 2) and (right-distance <= 3))
 0,2441 num-of-N((left-distance >= 5) and (right-weight <= 4) and (right-distance <= 4) and (left-weight >= 2))
 0,1978 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,1965 right-weight MULTIPLY right-distance
 0,1960 right-distance DIVIDE left-distance
 0,1960 left-distance SUBTRACT right-distance
 0,1960 left-distance DIVIDE right-distance
 0,1957 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,1957 num-of-N((left-weight >= 3) and (right-distance <= 2))
 0,1938 (left-distance >= 3) and (right-weight <= 3) and (left-weight >= 2)
 0,1931 right-weight DIVIDE left-weight
 0,1931 left-weight SUBTRACT right-weight
 0,1931 left-weight DIVIDE right-weight
 0,1925 right-distance DIVIDE left-weight
 0,1925 left-weight SUBTRACT right-distance
 0,1925 left-weight LESSTHAN right-distance
 0,1925 left-weight DIVIDE right-distance
 0,1920 left-distance LESSTHAN right-distance
 0,1913 num-of-N((right-weight <= 2) and (left-weight >= 3))
 0,1908 left-distance_x_right-distance
 0,1903 right-weight ADD right-distance
 0,1900 num-of-N((left-distance >= 3) and (left-weight >= 3))
 0,1896 left-weight LESSTHAN right-weight
 0,1883 right-weight DIVIDE left-distance
 0,1883 left-distance SUBTRACT right-weight
 0,1883 left-distance DIVIDE right-weight
 0,1880 left-weight_x_right-distance
 0,1874 (left-weight >= 3) and (right-distance <= 3) and (left-distance >= 2)
 0,1850 left-weight MULTIPLY left-distance
 0,1847 left-distance LESSTHAN right-weight
 0,1831 left-weight_x_right-weight
 0,1825 num-of-N((right-weight <= 2) and (left-distance >= 3))
 0,1819 right-weight_x_right-distance
 0,1804 left-weight_x_left-distance
 0,1782 num-of-N((right-distance <= 2) and (right-weight <= 3))
 0,1764 left-weight ADD left-distance
 0,1749 left-distance_x_right-weight
 0,1664 right-weight==B2of2 and right-distance==B2of2
 0,1605 num-of-N((right-distance <= 1) and (left-distance >= 2))
 0,1603 left-weight==B2of2 and left-distance==B2of2
 0,1603 (left-distance >= 3) and (left-weight >= 3)
 0,1598 (left-weight >= 3) and (right-weight <= 2) and (left-distance >= 2)
 0,1572 num-of-N((left-distance >= 4) and (left-weight >= 4))
 0,1554 num-of-N((right-weight <= 1) and (left-distance >= 2))
 0,1516 num-of-N((left-weight >= 4) and (right-weight <= 3))
 0,1492 num-of-N((left-weight >= 4) and (right-distance <= 3))
 0,1468 (right-distance <= 2) and (left-distance >= 3) and (left-weight >= 3)
 0,1440 num-of-N((left-weight >= 4) and (left-distance >= 2))
 0,1431 (right-distance <= 3) and (left-weight >= 2) and (right-weight <= 3)
 0,1424 (right-weight <= 3) and (left-distance >= 2) and (right-distance <= 3)
 0,1302 left-distance==B2of2 impl right-distance==B2of2
 0,1302 (right-distance <= 2) and (left-distance >= 3)
 0,1263 num-of-N((left-distance >= 4) and (right-weight <= 4))
 0,1261 num-of-N((left-distance >= 4) and (right-distance <= 4))
 0,1257 left-weight==B2of2 impl right-weight==B2of2
 0,1257 (right-weight <= 2) and (left-weight >= 3)
 0,1225 left-weight==B2of2 impl right-distance==B2of2
 0,1225 (right-distance <= 2) and (left-weight >= 3)
 0,1225 (left-weight >= 3) and (right-distance <= 2)
 0,1213 num-of-N((left-distance >= 5) and (left-weight >= 2))
 0,1206 (right-distance <= 1) and (left-distance >= 2) and (left-weight >= 2)
 0,1161 left-distance==B2of2 impl right-weight==B2of2
 0,1161 (right-weight <= 2) and (left-distance >= 3)
 0,1136 (right-weight <= 3) and (right-distance <= 2) and (left-weight >= 2) and (left-distance >= 3)
 0,1132 (left-weight >= 4) and (left-distance >= 2)
 0,1126 (left-distance >= 4) and (left-weight >= 4)
 0,1067 (left-weight >= 4) and (right-weight <= 3)
 0,1029 (right-distance <= 1) and (left-distance >= 2)
 0,1022 (left-weight >= 4) and (left-distance >= 4) and (right-weight <= 3)
 0,1012 (left-distance >= 4) and (right-weight <= 4)
 0,0989 (right-distance <= 2) and (right-weight <= 3)
 0,0979 (left-distance >= 4) and (right-distance <= 4)
 0,0971 (left-weight >= 4) and (right-distance <= 3)
 0,0954 (left-distance >= 4) and (left-weight >= 4) and (right-distance <= 3)
 0,0948 (right-weight <= 1) and (left-distance >= 2)
 0,0946 num-of-N((left-weight >= 5) and (right-weight <= 4))
 0,0932 (right-weight <= 1) and (left-weight >= 2) and (left-distance >= 3)
 0,0900 right-distance
 0,0881 num-of-N((left-weight >= 5) and (right-distance <= 4))
 0,0880 num-of-N((left-weight >= 5) and (left-distance >= 5))
 0,0862 left-weight==B2of2 or left-distance==B2of2
 0,0846 left-weight
 0,0833 left-distance
 0,0814 right-weight
 0,0813 right-weight==B2of2 or right-distance==B2of2
 0,0805 (left-distance >= 5) and (right-weight <= 4) and (right-distance <= 4) and (left-weight >= 2)
 0,0791 (right-distance <= 1)
 0,0755 (right-weight <= 1)
 0,0693 (right-distance <= 3) and (left-weight >= 5) and (left-distance >= 2) and (right-weight <= 4)
 0,0682 (right-weight <= 1) and (right-distance <= 3) and (left-weight >= 2)
 0,0648 (left-distance >= 5) and (left-weight >= 2)
 0,0609 (right-distance <= 3) and (right-weight <= 1) and (left-distance >= 3)
 0,0560 (left-weight >= 5) and (right-weight <= 4)
 0,0529 (left-weight >= 5) and (right-distance <= 4)
 0,0406 (right-distance <= 1) and (left-distance >= 4) and (right-weight <= 3)
 0,0366 (right-distance <= 1) and (right-weight <= 3) and (left-weight >= 4)
 0,0309 (left-weight >= 5) and (left-distance >= 5)
 0,0287 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0268 left-weight==B2of2 and left-distance==B2of2 and right-distance==B2of2
 0,0254 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0254 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0253 right-weight==B2of2 xor right-distance==B2of2
 0,0253 right-weight==B2of2 equ right-distance==B2of2
 0,0207 right-weight DIVIDE right-distance
 0,0207 right-distance DIVIDE right-weight
 0,0183 left-weight==B2of2 xor left-distance==B2of2
 0,0183 left-weight==B2of2 equ left-distance==B2of2
 0,0178 left-weight DIVIDE left-distance
 0,0178 left-distance DIVIDE left-weight
 0,0168 left-distance DIFF right-distance
 0,0152 left-distance DIFF right-weight
 0,0152 left-weight DIFF right-weight
 0,0132 left-weight DIFF right-distance
 0,0131 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0129 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0121 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0119 left-weight==B2of2 or left-distance==B2of2 or right-distance==B2of2
 0,0039 right-weight==B2of2 impl right-distance==B2of2
 -0,0007 left-weight==B2of2 impl left-distance==B2of2
 -0,0018 left-distance MULTIPLY right-weight
 -0,0018 left-distance ADD right-weight
 -0,0019 left-distance==B2of2 xor right-distance==B2of2
 -0,0019 left-distance==B2of2 equ right-distance==B2of2
 -0,0020 left-weight==B2of2 xor right-weight==B2of2
 -0,0020 left-weight==B2of2 equ right-weight==B2of2
 -0,0023 left-distance MULTIPLY right-distance
 -0,0023 left-distance ADD right-distance
 -0,0025 left-weight MULTIPLY right-distance
 -0,0025 left-weight ADD right-distance
 -0,0028 left-distance==B2of2 or right-distance==B2of2
 -0,0031 left-distance==B2of2 xor right-weight==B2of2
 -0,0031 left-distance==B2of2 equ right-weight==B2of2
 -0,0032 left-weight MULTIPLY right-weight
 -0,0032 left-weight ADD right-weight
 -0,0032 left-weight==B2of2 xor right-distance==B2of2
 -0,0032 left-weight==B2of2 equ right-distance==B2of2
 -0,0042 right-weight SUBTRACT right-distance
 -0,0042 left-distance==B2of2 or right-weight==B2of2
 -0,0043 left-weight SUBTRACT left-distance
 -0,0045 left-weight==B2of2 or right-distance==B2of2
 -0,0051 left-weight==B2of2 or right-weight==B2of2
 -0,0051 right-weight DIFF right-distance
 -0,0063 left-weight DIFF left-distance
 -0,0093 left-weight==B2of2 and right-weight==B2of2
 -0,0099 left-weight==B2of2 and right-distance==B2of2
 -0,0100 left-distance==B2of2 and right-weight==B2of2
 -0,0101 left-distance==B2of2 and right-distance==B2of2
 -0,0109 right-weight LESSTHAN right-distance
 -0,0110 left-weight LESSTHAN left-distance
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.25
								--------------
									Fold 10
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,3957 num-of-N((right-weight <= 3) and (right-distance <= 3) and (left-weight >= 4) and (left-distance >= 2))
 0,3384 num-of-N((right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3))
 0,3305 num-of-N((right-distance <= 2) and (right-weight <= 2) and (left-distance >= 3))
 0,3187 num-of-N((right-weight <= 2) and (left-distance >= 3) and (left-weight >= 3))
 0,2817 num-of-N((right-weight <= 1) and (left-weight >= 3) and (right-distance <= 3))
 0,2760 num-of-N((right-distance <= 1) and (left-distance >= 2) and (left-weight >= 2))
 0,2744 num-of-N((right-distance <= 1) and (right-weight <= 3) and (left-weight >= 3))
 0,2740 num-of-N((right-weight <= 1) and (left-distance >= 2) and (left-weight >= 2))
 0,2702 num-of-N((left-distance >= 4) and (right-distance <= 3) and (left-weight >= 4))
 0,2652 num-of-N((left-weight >= 4) and (left-distance >= 2) and (right-distance <= 3))
 0,2096 num-of-N((left-distance >= 5) and (right-weight <= 3) and (left-weight >= 2))
 0,2081 right-distance DIVIDE left-weight
 0,2081 left-weight SUBTRACT right-distance
 0,2081 left-weight DIVIDE right-distance
 0,2056 num-of-N((right-distance <= 2) and (left-weight >= 3))
 0,2029 left-weight LESSTHAN right-distance
 0,2024 num-of-N((right-distance <= 2) and (left-distance >= 3))
 0,2019 right-weight DIVIDE left-weight
 0,2019 left-weight SUBTRACT right-weight
 0,2019 left-weight DIVIDE right-weight
 0,2004 left-weight_x_right-distance
 0,2003 right-distance DIVIDE left-distance
 0,2003 left-distance SUBTRACT right-distance
 0,2003 left-distance LESSTHAN right-distance
 0,2003 left-distance DIVIDE right-distance
 0,1982 num-of-N((right-weight <= 2) and (right-distance <= 2))
 0,1982 num-of-N((right-distance <= 2) and (right-weight <= 2))
 0,1961 left-distance_x_right-distance
 0,1926 left-weight MULTIPLY left-distance
 0,1926 right-weight MULTIPLY right-distance
 0,1908 num-of-N((left-weight >= 3) and (right-weight <= 2))
 0,1900 num-of-N((left-weight >= 3) and (left-distance >= 3))
 0,1890 right-weight_x_right-distance
 0,1860 left-weight ADD left-distance
 0,1859 num-of-N((right-weight <= 2) and (left-weight >= 2))
 0,1845 left-weight_x_right-weight
 0,1841 num-of-N((right-weight <= 2) and (left-distance >= 3))
 0,1834 right-weight DIVIDE left-distance
 0,1834 left-distance SUBTRACT right-weight
 0,1834 left-distance LESSTHAN right-weight
 0,1834 left-distance DIVIDE right-weight
 0,1830 left-weight LESSTHAN right-weight
 0,1806 left-weight_x_left-distance
 0,1802 right-weight ADD right-distance
 0,1788 num-of-N((left-weight >= 4) and (left-distance >= 3))
 0,1768 left-distance_x_right-weight
 0,1743 num-of-N((right-weight <= 1) and (left-weight >= 2))
 0,1743 num-of-N((left-weight >= 2) and (right-weight <= 1))
 0,1720 num-of-N((left-distance >= 5) and (left-weight >= 2) and (right-distance <= 4))
 0,1717 num-of-N((right-distance <= 1) and (left-weight >= 2))
 0,1717 num-of-N((left-weight >= 2) and (right-distance <= 1))
 0,1714 num-of-N((right-distance <= 1) and (left-distance >= 2))
 0,1680 num-of-N((left-distance >= 4) and (right-distance <= 3))
 0,1673 num-of-N((left-weight >= 4) and (right-distance <= 3))
 0,1669 num-of-N((left-weight >= 5) and (right-weight <= 4) and (left-distance >= 4))
 0,1657 num-of-N((left-weight >= 4) and (right-weight <= 3))
 0,1646 right-weight==B2of2 and right-distance==B2of2
 0,1621 num-of-N((left-distance >= 2) and (right-weight <= 1))
 0,1597 left-weight==B2of2 and left-distance==B2of2
 0,1597 (left-weight >= 3) and (left-distance >= 3)
 0,1519 (right-distance <= 2) and (left-weight >= 3) and (left-distance >= 3)
 0,1518 (left-weight >= 4) and (left-distance >= 2) and (right-distance <= 3)
 0,1516 num-of-N((left-distance >= 4) and (left-weight >= 2))
 0,1496 num-of-N((right-weight <= 3) and (left-distance >= 4))
 0,1445 (right-weight <= 2) and (left-distance >= 3) and (left-weight >= 3)
 0,1388 left-weight==B2of2 impl right-distance==B2of2
 0,1388 (right-distance <= 2) and (left-weight >= 3)
 0,1381 (right-weight <= 2) and (left-weight >= 2)
 0,1369 (left-weight >= 4) and (left-distance >= 3)
 0,1357 left-distance==B2of2 impl right-distance==B2of2
 0,1357 (right-distance <= 2) and (left-distance >= 3)
 0,1299 (right-distance <= 1) and (left-distance >= 2) and (left-weight >= 2)
 0,1272 left-weight==B2of2 impl right-weight==B2of2
 0,1272 (left-weight >= 3) and (right-weight <= 2)
 0,1225 num-of-N((left-weight >= 5) and (left-distance >= 2))
 0,1206 (right-weight <= 1) and (left-distance >= 2) and (left-weight >= 2)
 0,1206 (right-weight <= 3) and (right-distance <= 3) and (left-weight >= 4) and (left-distance >= 2)
 0,1161 left-distance==B2of2 impl right-weight==B2of2
 0,1161 (right-weight <= 2) and (left-distance >= 3)
 0,1150 (left-distance >= 4) and (left-weight >= 2)
 0,1124 (left-weight >= 4) and (right-distance <= 3)
 0,1090 num-of-N((left-distance >= 5) and (right-weight <= 3))
 0,1074 (left-weight >= 4) and (right-weight <= 3)
 0,1062 (right-distance <= 1) and (left-weight >= 2)
 0,1062 (left-weight >= 2) and (right-distance <= 1)
 0,1053 (left-distance >= 4) and (right-distance <= 3)
 0,1050 (right-distance <= 1) and (left-distance >= 2)
 0,1040 (right-weight <= 1) and (left-weight >= 2)
 0,1040 (left-weight >= 2) and (right-weight <= 1)
 0,0979 right-distance
 0,0977 (left-distance >= 4) and (right-distance <= 3) and (left-weight >= 4)
 0,0950 right-weight==B2of2 or right-distance==B2of2
 0,0950 (right-weight <= 2) and (right-distance <= 2)
 0,0950 (right-distance <= 2) and (right-weight <= 2)
 0,0937 (left-distance >= 2) and (right-weight <= 1)
 0,0936 (right-weight <= 3) and (left-distance >= 4)
 0,0925 num-of-N((left-weight >= 5) and (right-distance <= 4))
 0,0895 left-weight
 0,0884 left-weight==B2of2 or left-distance==B2of2
 0,0879 num-of-N((left-distance >= 5) and (right-distance <= 4))
 0,0843 num-of-N((left-weight >= 5) and (right-weight <= 4))
 0,0827 right-weight
 0,0825 left-distance
 0,0813 (right-distance <= 1)
 0,0806 (right-distance <= 2) and (right-weight <= 2) and (left-distance >= 3)
 0,0757 (right-weight <= 1)
 0,0702 (left-distance >= 5) and (right-weight <= 3) and (left-weight >= 2)
 0,0701 (right-weight <= 1) and (left-weight >= 3) and (right-distance <= 3)
 0,0698 num-of-N((left-distance >= 5) and (right-weight <= 4))
 0,0663 (left-distance >= 5) and (left-weight >= 2) and (right-distance <= 4)
 0,0659 (right-distance <= 1) and (right-weight <= 3) and (left-weight >= 3)
 0,0648 (left-weight >= 5) and (left-distance >= 2)
 0,0578 (left-weight >= 5) and (right-weight <= 4)
 0,0552 (left-weight >= 5) and (right-distance <= 4)
 0,0518 (left-weight >= 5) and (right-weight <= 4) and (left-distance >= 4)
 0,0495 (left-distance >= 5) and (right-weight <= 3)
 0,0456 (left-distance >= 5) and (right-distance <= 4)
 0,0440 (left-distance >= 5) and (right-weight <= 4)
 0,0270 left-weight==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0265 left-weight DIFF right-weight
 0,0236 left-distance==B2of2 and right-weight==B2of2 and right-distance==B2of2
 0,0222 left-distance DIFF right-distance
 0,0217 left-weight==B2of2 and left-distance==B2of2 and right-weight==B2of2
 0,0194 left-weight DIVIDE left-distance
 0,0194 left-distance DIVIDE left-weight
 0,0186 left-weight==B2of2 and left-distance==B2of2 and right-distance==B2of2
 0,0179 left-weight==B2of2 xor left-distance==B2of2
 0,0179 left-weight==B2of2 equ left-distance==B2of2
 0,0176 right-weight DIVIDE right-distance
 0,0176 right-distance DIVIDE right-weight
 0,0172 left-distance==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0161 left-weight==B2of2 or left-distance==B2of2 or right-distance==B2of2
 0,0158 right-weight==B2of2 xor right-distance==B2of2
 0,0158 right-weight==B2of2 equ right-distance==B2of2
 0,0153 left-weight DIFF right-distance
 0,0150 left-distance DIFF right-weight
 0,0145 left-weight==B2of2 or right-weight==B2of2 or right-distance==B2of2
 0,0143 left-weight==B2of2 or left-distance==B2of2 or right-weight==B2of2
 0,0018 right-weight==B2of2 impl right-distance==B2of2
 0,0013 left-weight MULTIPLY right-distance
 0,0013 left-weight ADD right-distance
 0,0000 left-weight MULTIPLY right-weight
 0,0000 left-weight ADD right-weight
 -0,0002 left-weight==B2of2 or right-distance==B2of2
 -0,0013 left-distance MULTIPLY right-distance
 -0,0013 left-distance ADD right-distance
 -0,0019 left-weight==B2of2 impl left-distance==B2of2
 -0,0020 left-distance==B2of2 or right-distance==B2of2
 -0,0022 left-weight==B2of2 or right-weight==B2of2
 -0,0025 left-weight==B2of2 xor right-distance==B2of2
 -0,0025 left-weight==B2of2 equ right-distance==B2of2
 -0,0029 left-distance==B2of2 xor right-weight==B2of2
 -0,0029 left-distance==B2of2 equ right-weight==B2of2
 -0,0031 right-weight SUBTRACT right-distance
 -0,0031 left-weight SUBTRACT left-distance
 -0,0031 left-distance MULTIPLY right-weight
 -0,0031 left-distance ADD right-weight
 -0,0032 left-distance==B2of2 xor right-distance==B2of2
 -0,0032 left-distance==B2of2 equ right-distance==B2of2
 -0,0033 left-weight==B2of2 xor right-weight==B2of2
 -0,0033 left-weight==B2of2 equ right-weight==B2of2
 -0,0035 left-distance==B2of2 or right-weight==B2of2
 -0,0087 right-weight DIFF right-distance
 -0,0096 left-weight DIFF left-distance
 -0,0102 left-distance==B2of2 and right-weight==B2of2
 -0,0104 left-weight LESSTHAN left-distance
 -0,0106 left-distance==B2of2 and right-distance==B2of2
 -0,0106 left-weight==B2of2 and right-distance==B2of2
 -0,0107 left-weight==B2of2 and right-weight==B2of2
 -0,0113 right-weight LESSTHAN right-distance
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
dataset: cBinClassDisAttr-uniqueInst.arff
								--------------
									Fold  1
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,4935 A1_x_A2
 0,4065 A1_x_A3
 0,3982 (A1 = 1)
 0,3901 A1==1 impl A2==1
 0,3877 A1_x_A4
 0,3852 A1
 0,3027 num-of-N((A1 = 1) and (A2 = 0))
 0,2711 A1==1 impl A4==0
 0,2652 num-of-N((A1 = 1) and (A2 = 2))
 0,2643 A1==1 impl A3==0
 0,2613 A1==1 impl A3==1
 0,2390 A1==1 or A3==1
 0,2296 A1==1 or A4==0
 0,2283 num-of-N((A1 = 1) and (A3 = 2))
 0,2272 num-of-N((A1 = 1) and (A4 = 2))
 0,2260 A1==1 impl A4==1
 0,2156 A1==1 or A2==0
 0,2129 A1==1 or A2==0 or A4==0
 0,2083 A1==1 or A2==2 or A3==1
 0,1954 A1==1 or A2==2
 0,1852 A1==1 and A3==2
 0,1852 (A1 = 1) and (A3 = 2)
 0,1768 A1==1 and A2==0
 0,1768 (A1 = 1) and (A2 = 0)
 0,1678 A1==1 impl A2==2
 0,1602 A1==1 and A4==2
 0,1602 (A1 = 1) and (A4 = 2)
 0,1517 A1==1 impl A4==2
 0,1481 A1==2 impl A2==0
 0,1441 A1==2 impl A3==1
 0,1441 A1==0 impl A2==2
 0,1440 A1==1 and A2==2
 0,1440 (A1 = 1) and (A2 = 2)
 0,1381 A1==1 or A4==2
 0,1363 A1==1 impl A2==0
 0,1362 A1==0 impl A4==0
 0,1295 A1==1 or A3==0
 0,1288 A1==1 impl A3==2
 0,1228 A1==0 or A2==1
 0,1206 A1==1 or A2==0 or A3==0
 0,1163 A1==1 or A3==2
 0,1158 A1==1 or A2==0 or A3==2
 0,1130 A1==1 or A4==1
 0,1119 A1==2 or A2==1
 0,1082 A1==1 or A2==2 or A4==2
 0,1011 A1==1 or A2==0 or A3==1
 0,0998 A1==0 or A2==1 or A3==0
 0,0973 A1==1 or A2==2 or A4==1
 0,0940 A1==1 or A2==1 or A3==1
 0,0938 A1==1 or A2==2 or A4==0
 0,0873 A1==1 or A2==0 or A4==2
 0,0843 A1==1 xor A4==0
 0,0843 A1==1 equ A4==0
 0,0836 A1==1 or A2==1 or A4==0
 0,0805 A1==1 xor A3==1
 0,0805 A1==1 equ A3==1
 0,0782 A1==1 or A2==1
 0,0777 A1==0 or A2==1 or A3==2
 0,0766 num-of-N((A4 = 0) and (A2 = 2) and (A1 = 0))
 0,0763 A1==2 or A2==1 or A4==1
 0,0762 num-of-N((A3 = 1) and (A2 = 0) and (A1 = 2))
 0,0761 A1==0 or A3==0
 0,0751 A1==1 and A4==1
 0,0709 A1==1 or A2==0 or A4==1
 0,0665 A1==1 or A2==2 or A3==2
 0,0665 A1==1 or A2==2 or A3==0
 0,0652 A1==0 impl A3==0
 0,0646 A1==2 or A2==1 or A4==2
 0,0646 A1==0 or A2==1 or A4==0
 0,0614 A2==1 impl A3==2
 0,0613 A1==2 and A2==1
 0,0613 A1==0 and A4==1
 0,0581 A1==2 and A3==2
 0,0581 A1==0 and A2==1
 0,0567 A1==2 or A2==1 or A3==0
 0,0564 A1==2 or A2==1 or A3==1
 0,0555 A1==0 impl A3==2
 0,0552 A1==0 or A2==1 or A4==2
 0,0550 A1==2 and A3==0
 0,0550 A1==2 and A2==2
 0,0550 A1==0 and A2==0
 0,0544 A1==2 or A4==1
 0,0531 A1==1 and A3==1
 0,0504 A1==0 or A4==0
 0,0501 A1==1 and A3==0
 0,0501 A1==0 or A2==1 or A4==1
 0,0497 A2==1 impl A4==2
 0,0497 A1==2 impl A4==2
 0,0492 A1==2 or A3==1
 0,0483 A1==2 and A2==0 and A3==1
 0,0483 A1==1 and A2==2 and A3==2
 0,0483 A1==1 and A2==1 and A3==2
 0,0483 A1==1 and A2==0 and A4==2
 0,0483 A1==1 and A2==0 and A4==1
 0,0483 A1==1 and A2==0 and A3==2
 0,0483 A1==1 and A2==0 and A3==1
 0,0483 (A3 = 1) and (A2 = 0) and (A1 = 2)
 0,0474 A1==1 and A4==0
 0,0470 A1==2 xor A3==1
 0,0470 A1==2 equ A3==1
 0,0469 A1==2 impl A4==1
 0,0456 A1==0 and A4==2
 0,0442 A1==2 impl A4==0
 0,0441 A1==0 impl A3==1
 0,0438 A1==2 or A2==1 or A3==2
 0,0417 A1==1 and A2==2 and A4==1
 0,0417 A1==1 and A2==2 and A3==1
 0,0417 A1==1 and A2==1 and A4==2
 0,0417 A1==1 and A2==0 and A4==0
 0,0417 A1==1 and A2==0 and A3==0
 0,0417 A1==2 or A3==0
 0,0390 A1==0 xor A4==0
 0,0390 A1==0 equ A4==0
 0,0380 A1==0 or A2==2 or A3==0
 0,0369 A1==1 xor A3==0
 0,0369 A1==1 equ A3==0
 0,0367 A1==0 impl A4==2
 0,0365 A1==0 xor A2==1
 0,0365 A1==0 equ A2==1
 0,0353 A1==1 and A2==2 and A4==2
 0,0353 A1==1 and A2==2 and A4==0
 0,0353 A1==0 and A2==2 and A4==0
 0,0353 (A4 = 0) and (A2 = 2) and (A1 = 0)
 0,0340 A1==0 xor A3==0
 0,0340 A1==0 equ A3==0
 0,0324 A1==0 or A4==1
 0,0318 A1==0 or A2==2
 0,0307 A2==0 and A3==1
 0,0306 A1==1 xor A2==2
 0,0306 A1==1 equ A2==2
 0,0299 A1==1 xor A2==1
 0,0299 A1==1 equ A2==1
 0,0293 A1==0 impl A2==0
 0,0286 A2
 0,0283 A2==1 and A3==1
 0,0283 A1==0 and A3==1
 0,0280 A1==0 or A2==2 or A4==0
 0,0272 A1==2 xor A2==1
 0,0272 A1==2 equ A2==1
 0,0271 A2_x_A3
 0,0270 A1==0 xor A2==2
 0,0270 A1==0 equ A2==2
 0,0270 A1==0 impl A2==1
 0,0252 A2==1 or A3==0
 0,0249 A1==1 or A2==1 or A4==2
 0,0249 A1==1 or A2==1 or A3==0
 0,0247 A1==0 impl A4==1
 0,0244 A1==2 or A2==0 or A4==1
 0,0229 A1==1 and A2==2 and A3==0
 0,0228 A1==2 or A2==1 or A4==0
 0,0219 A1==2 impl A3==0
 0,0219 A1==2 impl A2==2
 0,0218 A2==0 xor A3==2
 0,0218 A2==0 equ A3==2
 0,0210 A2==1 xor A3==2
 0,0210 A2==1 equ A3==2
 0,0207 A2==0 or A3==2
 0,0203 A1==1 xor A2==0
 0,0203 A1==1 equ A2==0
 0,0198 A1==2 impl A3==2
 0,0188 A2==1 or A4==1
 0,0188 A2==1 or A3==2
 0,0184 A1==0 and A3==2
 0,0180 A1==2 or A2==0 or A3==1
 0,0177 A1==2 impl A2==1
 0,0174 A2==1 and A4==0
 0,0174 A1==2 and A4==0
 0,0170 A2==2 and A4==0
 0,0166 A1==1 or A2==1 or A4==1
 0,0166 A1==0 or A2==2 or A4==1
 0,0154 A2==0 impl A3==2
 0,0152 A2==1 and A4==1
 0,0152 A2==1 and A3==0
 0,0152 A1==2 and A4==1
 0,0147 A1==2 or A4==0
 0,0147 A1==0 or A3==2
 0,0144 A2_x_A4
 0,0141 A2==1 or A4==2
 0,0141 A1==2 or A4==2
 0,0134 A1==2 xor A4==1
 0,0134 A1==2 xor A2==0
 0,0134 A1==2 equ A4==1
 0,0134 A1==2 equ A2==0
 0,0133 A1==2 or A2==0
 0,0130 A1==2 and A4==2
 0,0124 A1==1 or A2==1 or A3==2
 0,0122 A1==1 xor A4==1
 0,0122 A1==1 equ A4==1
 0,0121 A1==2 or A2==0 or A3==0
 0,0120 A1==2 and A2==1 and A4==1
 0,0120 A1==2 and A2==1 and A4==0
 0,0120 A1==2 and A2==1 and A3==1
 0,0120 A1==2 and A2==1 and A3==0
 0,0120 A1==2 and A2==0 and A3==2
 0,0120 A1==0 and A2==2 and A4==1
 0,0120 A1==0 and A2==1 and A4==1
 0,0120 A1==0 and A2==1 and A3==1
 0,0120 A1==0 and A2==1 and A3==0
 0,0120 A1==0 and A2==0 and A4==0
 0,0120 A1==0 and A2==0 and A3==1
 0,0115 A2==0 impl A3==0
 0,0114 A2==1 xor A4==2
 0,0114 A2==1 equ A4==2
 0,0111 A1==0 or A2==1 or A3==1
 0,0110 A1==0 and A3==0
 0,0098 A1==1 and A2==1
 0,0096 A1==2 and A2==2 and A4==2
 0,0096 A1==2 and A2==2 and A4==1
 0,0096 A1==2 and A2==2 and A4==0
 0,0096 A1==2 and A2==2 and A3==2
 0,0096 A1==2 and A2==2 and A3==1
 0,0096 A1==2 and A2==2 and A3==0
 0,0096 A1==2 and A2==1 and A4==2
 0,0096 A1==2 and A2==1 and A3==2
 0,0096 A1==0 and A2==1 and A4==2
 0,0096 A1==0 and A2==1 and A4==0
 0,0096 A1==0 and A2==0 and A4==1
 0,0096 A1==0 and A2==0 and A3==2
 0,0079 A1==0 or A3==1
 0,0074 A1==0 or A4==2
 0,0073 A1==2 and A2==0 and A3==0
 0,0073 A1==0 and A2==1 and A3==2
 0,0073 A1==0 and A2==0 and A4==2
 0,0073 A1==0 and A2==0 and A3==0
 0,0070 A2==1 impl A4==1
 0,0070 A2==1 impl A3==0
 0,0054 A2==1 impl A4==0
 0,0053 A1==0 or A2==2 or A3==2
 0,0051 A1==0 and A2==2 and A4==2
 0,0051 A2==0 or A4==0
 0,0051 A2==2 xor A4==2
 0,0051 A2==2 equ A4==2
 0,0046 A2==0 impl A4==0
 0,0040 A1==1 xor A4==2
 0,0040 A1==1 equ A4==2
 0,0028 A2==2 or A4==2
 0,0023 A2==2 impl A4==1
 0,0012 A2==0 or A4==2
 0,0007 A1==0 xor A2==0
 0,0007 A1==0 equ A2==0
 0,0006 A2==1 impl A3==1
 0,0002 A1==2 or A2==2 or A3==1
 -0,0005 A2==2 impl A4==2
 -0,0012 A1==2 or A3==2
 -0,0012 A1==2 or A2==2 or A4==0
 -0,0013 A2==0 impl A4==1
 -0,0013 A2==0 and A4==2
 -0,0015 A2==0 xor A4==0
 -0,0015 A2==0 equ A4==0
 -0,0023 A2==2 xor A4==0
 -0,0023 A2==2 equ A4==0
 -0,0023 A2==0 xor A3==1
 -0,0023 A2==0 equ A3==1
 -0,0025 A1==0 or A2==2 or A3==1
 -0,0026 A2==1 xor A3==0
 -0,0026 A2==1 equ A3==0
 -0,0027 A2==0 impl A4==2
 -0,0031 A2==0 and A4==1
 -0,0032 A1==2 or A2==0 or A4==2
 -0,0034 A2==2 or A3==1
 -0,0036 A1==2 xor A3==0
 -0,0036 A1==2 equ A3==0
 -0,0049 A1==2 or A2==2 or A3==0
 -0,0049 A1==0 or A2==2 or A4==2
 -0,0050 A1==1 and A2==1 and A4==1
 -0,0050 A1==1 and A2==1 and A3==0
 -0,0050 A1==0 and A2==2 and A3==0
 -0,0051 A2==2 and A3==2
 -0,0052 A1==1 and A2==1 and A3==1
 -0,0052 A1==0 and A2==2 and A3==1
 -0,0052 A2==2 impl A3==0
 -0,0053 A2==1 or A4==0
 -0,0055 A1==0 and A2==2 and A3==2
 -0,0055 A1==2 or A2==2 or A4==1
 -0,0059 A1==0 or A2==0 or A3==2
 -0,0060 A1==2 and A2==0 and A4==2
 -0,0060 A1==2 and A2==0 and A4==1
 -0,0060 A2==2 or A3==2
 -0,0060 A2==1 xor A4==1
 -0,0060 A2==1 equ A4==1
 -0,0063 A2==2 impl A3==1
 -0,0064 A1==2 and A2==0 and A4==0
 -0,0064 A1==1 and A2==1 and A4==0
 -0,0065 A1==2 or A2==2
 -0,0065 A1==0 or A2==0 or A3==0
 -0,0067 A1==2 or A2==0 or A4==0
 -0,0070 A1==2 xor A4==2
 -0,0070 A1==2 equ A4==2
 -0,0071 A2==2 xor A3==1
 -0,0071 A2==2 equ A3==1
 -0,0074 A2==1 xor A3==1
 -0,0074 A2==1 equ A3==1
 -0,0074 A2==0 and A4==0
 -0,0075 A1==1 xor A3==2
 -0,0075 A1==1 equ A3==2
 -0,0076 A1==0 xor A3==2
 -0,0076 A1==0 equ A3==2
 -0,0076 A1==0 or A2==0 or A4==0
 -0,0076 A1==0 or A2==0 or A3==1
 -0,0076 A2==2 and A3==1
 -0,0077 A1==0 and A4==0
 -0,0077 A1==2 xor A2==2
 -0,0077 A1==2 equ A2==2
 -0,0079 A2==2 and A3==0
 -0,0084 A1==2 xor A4==0
 -0,0084 A1==2 equ A4==0
 -0,0085 A2==0 xor A4==2
 -0,0085 A2==0 equ A4==2
 -0,0085 A1==0 and A2==2
 -0,0085 A2==2 impl A3==2
 -0,0085 A1==0 xor A4==1
 -0,0085 A1==0 equ A4==1
 -0,0086 A2==2 and A4==2
 -0,0088 A2==2 and A4==1
 -0,0088 A2==0 and A3==0
 -0,0089 A2==1 and A3==2
 -0,0090 A2==1 and A4==2
 -0,0092 A1==2 and A2==0
 -0,0093 A2==0 and A3==2
 -0,0093 A1==2 and A3==1
 -0,0094 A2==1 or A3==1
 -0,0096 A2==0 or A3==0
 -0,0098 A2==0 xor A3==0
 -0,0098 A2==0 equ A3==0
 -0,0100 A1==0 or A2==0 or A4==2
 -0,0100 A2==2 xor A4==1
 -0,0100 A2==2 equ A4==1
 -0,0100 A1==0 or A2==0 or A4==1
 -0,0100 A2==2 impl A4==0
 -0,0103 A1==2 xor A3==2
 -0,0103 A1==2 equ A3==2
 -0,0105 A2==2 xor A3==2
 -0,0105 A2==2 equ A3==2
 -0,0106 A2==0 or A3==1
 -0,0108 A1==2 or A2==2 or A3==2
 -0,0109 A2==0 impl A3==1
 -0,0109 A1==2 or A2==0 or A3==2
 -0,0110 A2==2 xor A3==0
 -0,0110 A2==2 equ A3==0
 -0,0112 A2==2 or A4==1
 -0,0112 A2==0 xor A4==1
 -0,0112 A2==0 equ A4==1
 -0,0113 A1==0 or A2==0
 -0,0113 A1==2 or A2==2 or A4==2
 -0,0116 A1==0 xor A3==1
 -0,0116 A1==0 equ A3==1
 -0,0116 A2==1 xor A4==0
 -0,0116 A2==1 equ A4==0
 -0,0116 A2==0 or A4==1
 -0,0117 A2==2 or A3==0
 -0,0118 A1==0 xor A4==2
 -0,0118 A1==0 equ A4==2
 -0,0120 A2==2 or A4==0
 -0,0148 A3
 -0,0181 A4
 -0,0224 A5
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  2
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,4902 A1_x_A2
 0,4015 A1==1 impl A2==1
 0,3999 (A1 = 1)
 0,3990 A1_x_A3
 0,3989 A1_x_A4
 0,3865 A1
 0,2954 num-of-N((A1 = 1) and (A2 = 2))
 0,2771 num-of-N((A1 = 1) and (A2 = 0))
 0,2697 A1==1 or A3==1
 0,2615 A1==1 or A4==0
 0,2574 A1==1 impl A4==1
 0,2574 A1==1 impl A3==1
 0,2353 A1==1 impl A4==0
 0,2270 A1==1 or A2==2 or A3==1
 0,2260 A1==1 impl A3==0
 0,2223 A1==1 or A2==0 or A4==0
 0,2156 num-of-N((A1 = 1) and (A3 = 2))
 0,2134 num-of-N((A1 = 1) and (A4 = 2))
 0,2052 A1==1 or A2==2
 0,2026 A1==1 or A2==0
 0,1768 A1==1 and A2==2
 0,1768 (A1 = 1) and (A2 = 2)
 0,1602 A1==1 and A4==2
 0,1602 (A1 = 1) and (A4 = 2)
 0,1593 A1==1 impl A3==2
 0,1593 A1==1 impl A2==0
 0,1563 A1==2 impl A3==1
 0,1521 A1==1 and A3==2
 0,1521 A1==1 and A2==0
 0,1521 (A1 = 1) and (A3 = 2)
 0,1521 (A1 = 1) and (A2 = 0)
 0,1513 A1==1 impl A4==2
 0,1402 A1==2 impl A2==0
 0,1402 A1==0 impl A4==0
 0,1402 A1==0 impl A2==2
 0,1359 A1==1 impl A2==2
 0,1322 A1==2 or A2==1
 0,1262 A1==1 or A3==2
 0,1220 A1==1 or A4==1
 0,1170 A1==1 or A4==2
 0,1157 A1==1 or A2==0 or A3==1
 0,1130 A1==1 or A2==2 or A4==1
 0,1084 A1==1 or A2==2 or A4==0
 0,1064 A1==0 or A2==1
 0,1063 A1==1 or A3==0
 0,1061 A1==1 xor A3==1
 0,1061 A1==1 equ A3==1
 0,1047 A1==1 or A2==1 or A4==0
 0,1011 A1==1 or A2==2 or A4==2
 0,1011 A1==1 or A2==0 or A3==2
 0,1009 A1==1 or A2==1 or A3==1
 0,1003 A1==2 or A2==1 or A4==1
 0,0975 A1==1 or A2==0 or A3==0
 0,0891 A1==1 or A2==1
 0,0854 A1==1 xor A4==0
 0,0854 A1==1 equ A4==0
 0,0852 A1==2 or A2==1 or A4==2
 0,0761 A1==0 or A2==1 or A3==2
 0,0741 A1==1 or A2==2 or A3==2
 0,0729 A1==1 and A3==0
 0,0716 A1==2 or A4==1
 0,0685 A1==1 or A2==0 or A4==1
 0,0674 A1==0 or A2==1 or A3==0
 0,0666 A1==1 and A4==0
 0,0654 A1==1 or A2==0 or A4==2
 0,0646 A1==2 and A3==0
 0,0646 A1==2 or A2==1 or A3==2
 0,0621 A1==2 impl A4==1
 0,0617 A1==1 or A2==2 or A3==0
 0,0613 A1==0 and A2==1
 0,0605 A1==2 or A2==1 or A3==1
 0,0605 A1==2 or A2==1 or A3==0
 0,0602 num-of-N((A3 = 1) and (A2 = 0) and (A1 = 2))
 0,0584 A1==2 impl A4==0
 0,0581 A1==2 and A3==2
 0,0581 A1==2 and A2==2
 0,0581 A1==0 and A4==1
 0,0563 num-of-N((A4 = 0) and (A2 = 2) and (A1 = 0))
 0,0544 A1==0 or A3==0
 0,0531 A1==1 and A4==1
 0,0531 A1==1 and A3==1
 0,0526 A1==0 impl A3==2
 0,0518 A1==2 and A2==1
 0,0518 A1==0 and A4==2
 0,0515 A1==0 or A2==1 or A4==2
 0,0497 A1==2 impl A4==2
 0,0497 A1==0 impl A3==1
 0,0487 A1==0 and A2==0
 0,0483 A1==1 and A2==2 and A4==1
 0,0483 A1==1 and A2==2 and A4==0
 0,0483 A1==1 and A2==2 and A3==1
 0,0483 A1==1 and A2==2 and A3==0
 0,0483 A1==1 and A2==0 and A3==0
 0,0470 A1==2 xor A2==1
 0,0470 A1==2 equ A2==1
 0,0465 A1==0 or A2==1 or A4==1
 0,0465 A1==0 or A2==1 or A4==0
 0,0441 A1==0 impl A3==0
 0,0417 A1==1 and A2==2 and A4==2
 0,0417 A1==1 and A2==2 and A3==2
 0,0417 A1==1 and A2==1 and A4==2
 0,0417 A1==1 and A2==1 and A3==2
 0,0417 A1==1 and A2==0 and A4==2
 0,0417 A1==1 and A2==0 and A4==0
 0,0417 A1==0 and A2==2 and A4==0
 0,0417 (A4 = 0) and (A2 = 2) and (A1 = 0)
 0,0417 A1==2 or A3==1
 0,0416 A1==2 xor A3==1
 0,0416 A1==2 equ A3==1
 0,0415 A2==1 impl A4==2
 0,0415 A2==1 impl A3==2
 0,0396 A1==1 xor A2==1
 0,0396 A1==1 equ A2==1
 0,0385 A1==2 or A3==0
 0,0377 A1==0 or A4==1
 0,0353 A1==2 and A2==0 and A3==1
 0,0353 A1==1 and A2==0 and A4==1
 0,0353 A1==1 and A2==0 and A3==2
 0,0353 A1==1 and A2==0 and A3==1
 0,0353 (A3 = 1) and (A2 = 0) and (A1 = 2)
 0,0342 A1==2 impl A2==1
 0,0322 A1==2 or A2==0 or A4==1
 0,0307 A2==2 and A4==0
 0,0299 A1==0 or A4==0
 0,0293 A1==2 impl A3==2
 0,0293 A1==2 impl A2==2
 0,0281 A1==1 xor A2==0
 0,0281 A1==1 equ A2==0
 0,0279 A1==1 or A2==1 or A3==2
 0,0277 A1==0 impl A2==0
 0,0270 A1==0 xor A4==0
 0,0270 A1==0 equ A4==0
 0,0258 A1==2 and A4==2
 0,0258 A1==0 or A3==2
 0,0255 A2
 0,0254 A1==0 impl A4==2
 0,0252 A1==2 or A2==0
 0,0249 A1==2 xor A4==1
 0,0249 A1==2 equ A4==1
 0,0248 A1==0 xor A2==1
 0,0248 A1==0 equ A2==1
 0,0247 A1==2 impl A3==0
 0,0244 A1==0 or A2==2 or A3==0
 0,0235 A1==2 or A4==2
 0,0235 A1==1 xor A4==1
 0,0235 A1==1 equ A4==1
 0,0227 A1==1 or A2==1 or A4==2
 0,0225 A2==1 or A4==1
 0,0214 A2==0 and A3==1
 0,0213 A1==1 or A2==1 or A4==1
 0,0210 A1==0 impl A4==1
 0,0197 A1==0 and A3==0
 0,0197 A2==1 or A4==2
 0,0197 A2==1 or A3==2
 0,0195 A2==1 or A3==0
 0,0189 A1==0 impl A2==1
 0,0184 A1==2 and A4==0
 0,0174 A2==1 and A3==0
 0,0172 A1==1 or A2==1 or A3==0
 0,0167 A1==2 xor A2==0
 0,0167 A1==2 equ A2==0
 0,0166 A1==2 or A2==1 or A4==0
 0,0161 A1==1 xor A2==2
 0,0161 A1==1 equ A2==2
 0,0161 A1==0 and A3==1
 0,0154 A1==2 or A2==0 or A3==0
 0,0152 A2==1 and A4==1
 0,0152 A1==2 and A4==1
 0,0147 A1==0 or A2==2
 0,0143 A1==2 or A2==0 or A3==1
 0,0132 A1==0 or A2==1 or A3==1
 0,0131 A2_x_A4
 0,0131 A2==1 xor A4==2
 0,0131 A2==1 xor A3==2
 0,0131 A2==1 equ A4==2
 0,0131 A2==1 equ A3==2
 0,0130 A1==0 and A3==2
 0,0122 A1==2 or A3==2
 0,0120 A1==2 and A2==2 and A4==1
 0,0120 A1==2 and A2==2 and A3==0
 0,0120 A1==2 and A2==1 and A4==2
 0,0120 A1==2 and A2==1 and A3==2
 0,0120 A1==2 and A2==1 and A3==0
 0,0120 A1==2 and A2==0 and A3==0
 0,0120 A1==0 and A2==1 and A4==2
 0,0120 A1==0 and A2==1 and A4==0
 0,0120 A1==0 and A2==1 and A3==2
 0,0120 A1==0 and A2==1 and A3==0
 0,0120 A1==0 and A2==0 and A4==1
 0,0120 A1==0 and A2==0 and A3==0
 0,0116 A1==0 xor A2==2
 0,0116 A1==0 equ A2==2
 0,0111 A1==0 or A2==2 or A4==1
 0,0110 A2==1 and A4==0
 0,0109 A1==0 or A4==2
 0,0106 A2==2 impl A4==2
 0,0104 A2==1 impl A3==1
 0,0099 A1==0 xor A3==0
 0,0099 A1==0 equ A3==0
 0,0097 A2==2 impl A4==1
 0,0096 A1==2 and A2==2 and A4==2
 0,0096 A1==2 and A2==2 and A4==0
 0,0096 A1==2 and A2==2 and A3==2
 0,0096 A1==2 and A2==2 and A3==1
 0,0096 A1==2 and A2==1 and A4==1
 0,0096 A1==2 and A2==0 and A3==2
 0,0096 A1==0 and A2==2 and A4==2
 0,0096 A1==0 and A2==2 and A4==1
 0,0096 A1==0 and A2==1 and A4==1
 0,0096 A1==0 and A2==1 and A3==1
 0,0094 A2_x_A3
 0,0089 A2==1 and A3==1
 0,0087 A2==1 impl A4==0
 0,0084 A2==2 or A3==1
 0,0074 A2==2 xor A4==2
 0,0074 A2==2 equ A4==2
 0,0073 A1==0 and A2==0 and A4==0
 0,0073 A1==0 and A2==0 and A3==1
 0,0071 A1==0 or A2==2 or A4==0
 0,0070 A1==1 xor A3==0
 0,0070 A1==1 equ A3==0
 0,0068 A1==1 and A2==1
 0,0062 A1==2 or A2==0 or A4==2
 0,0062 A1==2 or A4==0
 0,0055 A2==0 or A4==0
 0,0054 A2==1 impl A4==1
 0,0051 A1==2 and A2==1 and A4==0
 0,0051 A1==0 and A2==0 and A4==2
 0,0051 A1==0 and A2==0 and A3==2
 0,0051 A2==2 or A4==2
 0,0042 A2==0 impl A3==0
 0,0042 A1==0 or A3==1
 0,0039 A2==1 impl A3==0
 0,0031 A1==2 and A2==1 and A3==1
 0,0020 A2==0 impl A3==2
 0,0018 A1==0 or A2==2 or A3==2
 0,0017 A1==1 xor A3==2
 0,0017 A1==1 equ A3==2
 -0,0006 A2==0 xor A3==2
 -0,0006 A2==0 equ A3==2
 -0,0012 A2==0 xor A4==0
 -0,0012 A2==0 equ A4==0
 -0,0013 A1==0 xor A3==2
 -0,0013 A1==0 equ A3==2
 -0,0013 A2==2 impl A3==2
 -0,0015 A1==2 xor A2==2
 -0,0015 A1==2 equ A2==2
 -0,0020 A2==2 impl A3==0
 -0,0023 A2==0 or A3==2
 -0,0024 A2==2 xor A3==1
 -0,0024 A2==2 equ A3==1
 -0,0027 A1==1 xor A4==2
 -0,0027 A1==1 equ A4==2
 -0,0032 A1==0 or A2==0 or A4==1
 -0,0032 A1==0 or A2==0 or A3==0
 -0,0036 A2==2 and A3==1
 -0,0038 A1==2 or A2==0 or A3==2
 -0,0041 A2==2 impl A3==1
 -0,0043 A2==1 xor A4==1
 -0,0043 A2==1 equ A4==1
 -0,0044 A2==2 or A3==2
 -0,0046 A2==0 impl A4==1
 -0,0051 A1==2 or A2==2 or A4==1
 -0,0052 A1==2 and A2==0 and A4==2
 -0,0052 A1==2 and A2==0 and A4==0
 -0,0054 A1==0 and A2==2 and A3==1
 -0,0055 A2==0 and A4==2
 -0,0058 A2==0 impl A4==0
 -0,0060 A1==2 and A2==0 and A4==1
 -0,0060 A1==1 and A2==1 and A4==0
 -0,0060 A1==1 and A2==1 and A3==0
 -0,0060 A2==2 and A3==0
 -0,0062 A1==0 xor A4==1
 -0,0062 A1==0 equ A4==1
 -0,0063 A1==2 xor A4==2
 -0,0063 A1==2 equ A4==2
 -0,0064 A2==2 and A3==2
 -0,0064 A1==1 and A2==1 and A4==1
 -0,0064 A1==1 and A2==1 and A3==1
 -0,0064 A1==0 and A2==2 and A3==2
 -0,0064 A1==0 and A2==2 and A3==0
 -0,0065 A1==0 or A2==0
 -0,0065 A1==2 or A2==0 or A4==0
 -0,0067 A1==0 or A2==2 or A4==2
 -0,0067 A2==0 and A4==0
 -0,0068 A2==1 xor A3==0
 -0,0068 A2==1 equ A3==0
 -0,0068 A2==0 impl A4==2
 -0,0070 A2==2 xor A4==0
 -0,0070 A2==2 equ A4==0
 -0,0071 A1==2 or A2==2 or A3==1
 -0,0074 A1==0 or A2==0 or A4==0
 -0,0074 A1==0 or A2==0 or A3==1
 -0,0076 A2==0 and A4==1
 -0,0077 A1==2 and A2==0
 -0,0077 A1==2 xor A3==0
 -0,0077 A1==2 equ A3==0
 -0,0080 A1==2 or A2==2 or A3==0
 -0,0084 A1==2 or A2==2 or A4==0
 -0,0084 A2==2 or A4==0
 -0,0085 A2==1 and A4==2
 -0,0085 A2==1 and A3==2
 -0,0086 A1==2 and A3==1
 -0,0086 A2==0 and A3==2
 -0,0087 A1==0 or A2==2 or A3==1
 -0,0090 A2==2 and A4==2
 -0,0090 A1==0 and A4==0
 -0,0090 A1==0 and A2==2
 -0,0090 A2==0 or A4==2
 -0,0091 A2==2 xor A3==2
 -0,0091 A2==2 equ A3==2
 -0,0091 A1==0 xor A2==0
 -0,0091 A1==0 equ A2==0
 -0,0092 A2==0 xor A3==1
 -0,0092 A2==0 equ A3==1
 -0,0093 A2==0 and A3==0
 -0,0093 A2==2 and A4==1
 -0,0093 A2==1 or A3==1
 -0,0094 A2==0 or A3==1
 -0,0098 A2==2 xor A4==1
 -0,0098 A2==2 equ A4==1
 -0,0100 A1==2 or A2==2 or A4==2
 -0,0101 A2==1 or A4==0
 -0,0101 A1==2 or A2==2
 -0,0102 A2==2 or A4==1
 -0,0103 A2==1 xor A4==0
 -0,0103 A2==1 equ A4==0
 -0,0104 A2==0 impl A3==1
 -0,0105 A1==2 xor A4==0
 -0,0105 A1==2 equ A4==0
 -0,0106 A2==0 xor A4==1
 -0,0106 A2==0 equ A4==1
 -0,0106 A1==0 xor A3==1
 -0,0106 A1==0 equ A3==1
 -0,0107 A2==2 impl A4==0
 -0,0108 A1==2 or A2==2 or A3==2
 -0,0109 A2==2 xor A3==0
 -0,0109 A2==2 equ A3==0
 -0,0109 A2==0 xor A3==0
 -0,0109 A2==0 equ A3==0
 -0,0113 A2==1 xor A3==1
 -0,0113 A2==1 equ A3==1
 -0,0115 A1==0 or A2==0 or A4==2
 -0,0115 A1==0 or A2==0 or A3==2
 -0,0116 A2==0 or A3==0
 -0,0116 A2==0 xor A4==2
 -0,0116 A2==0 equ A4==2
 -0,0118 A1==0 xor A4==2
 -0,0118 A1==0 equ A4==2
 -0,0118 A2==0 or A4==1
 -0,0119 A1==2 xor A3==2
 -0,0119 A1==2 equ A3==2
 -0,0120 A2==2 or A3==0
 -0,0138 A4
 -0,0145 A3
 -0,0225 A5
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.0
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.25
								--------------
									Fold  3
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,5031 A1_x_A2
 0,4249 A1==1 impl A2==1
 0,3933 A1_x_A4
 0,3864 (A1 = 1)
 0,3755 A1_x_A3
 0,3730 A1
 0,2954 num-of-N((A1 = 1) and (A2 = 2))
 0,2790 num-of-N((A1 = 1) and (A2 = 0))
 0,2721 A1==1 or A4==0
 0,2574 A1==1 impl A3==0
 0,2383 A1==1 impl A4==0
 0,2353 A1==1 impl A4==1
 0,2353 A1==1 impl A3==1
 0,2324 num-of-N((A1 = 1) and (A3 = 2))
 0,2242 A1==1 or A3==1
 0,2176 A1==1 or A2==0 or A4==0
 0,2052 A1==1 or A2==2
 0,2037 A1==1 or A2==2 or A3==1
 0,1983 num-of-N((A1 = 1) and (A4 = 2))
 0,1954 A1==1 or A2==0
 0,1768 A1==1 and A2==2
 0,1768 (A1 = 1) and (A2 = 2)
 0,1685 A1==1 and A3==2
 0,1685 A1==1 and A2==0
 0,1685 (A1 = 1) and (A3 = 2)
 0,1685 (A1 = 1) and (A2 = 0)
 0,1604 A1==0 impl A4==0
 0,1563 A1==0 impl A2==2
 0,1558 A1==0 or A2==1
 0,1521 A1==1 and A4==2
 0,1521 (A1 = 1) and (A4 = 2)
 0,1513 A1==1 impl A4==2
 0,1381 A1==1 or A3==2
 0,1362 A1==2 impl A2==0
 0,1359 A1==1 impl A3==2
 0,1359 A1==1 impl A2==0
 0,1292 A1==2 or A2==1
 0,1284 A1==1 impl A2==2
 0,1206 A1==1 or A2==1 or A4==0
 0,1171 A1==2 impl A3==1
 0,1130 A1==1 or A2==2 or A4==0
 0,1123 A1==1 or A4==1
 0,1115 A1==0 or A2==1 or A3==0
 0,1091 A1==1 or A3==0
 0,1082 A1==1 or A2==0 or A3==2
 0,1047 A1==1 or A2==2 or A4==2
 0,1047 A1==1 or A2==2 or A4==1
 0,1045 A1==1 or A4==2
 0,0973 A1==1 or A2==0 or A3==0
 0,0938 A1==1 or A2==0 or A3==1
 0,0921 A1==1 xor A4==0
 0,0921 A1==1 equ A4==0
 0,0884 A1==2 or A2==1 or A4==2
 0,0884 A1==2 or A2==1 or A4==1
 0,0839 A1==1 or A2==2 or A3==2
 0,0836 A1==1 or A2==1 or A3==1
 0,0802 A1==0 or A3==0
 0,0782 A1==1 or A2==1
 0,0777 A1==0 or A2==1 or A4==2
 0,0777 A1==0 or A2==1 or A4==1
 0,0746 A1==0 or A2==1 or A3==2
 0,0717 num-of-N((A4 = 0) and (A2 = 2) and (A1 = 0))
 0,0706 A1==1 xor A3==1
 0,0706 A1==1 equ A3==1
 0,0696 A1==1 or A2==0 or A4==1
 0,0683 A2==1 impl A3==2
 0,0678 A1==1 or A2==2 or A3==0
 0,0674 A1==0 or A2==1 or A4==0
 0,0646 A1==0 and A4==2
 0,0613 A1==0 and A4==1
 0,0613 A1==0 and A2==1
 0,0613 A1==0 and A2==0
 0,0604 A1==1 and A4==1
 0,0604 A1==1 and A3==1
 0,0598 A1==2 or A2==1 or A3==1
 0,0590 A1==1 and A4==0
 0,0582 A1==2 or A2==1 or A3==0
 0,0575 A1==1 or A2==0 or A4==2
 0,0555 A2==1 impl A4==2
 0,0554 A1==0 impl A3==2
 0,0554 A1==0 impl A3==1
 0,0550 A1==2 and A3==0
 0,0550 A1==2 and A2==1
 0,0530 A1==2 or A2==1 or A3==2
 0,0526 A1==0 xor A2==1
 0,0526 A1==0 equ A2==1
 0,0525 A1==0 impl A3==0
 0,0519 A1==2 or A4==1
 0,0518 A1==2 and A2==2
 0,0505 num-of-N((A3 = 1) and (A2 = 0) and (A1 = 2))
 0,0502 A1==2 impl A4==0
 0,0483 A1==1 and A2==2 and A4==1
 0,0483 A1==1 and A2==2 and A4==0
 0,0483 A1==1 and A2==2 and A3==2
 0,0483 A1==1 and A2==2 and A3==0
 0,0483 A1==1 and A2==0 and A4==2
 0,0483 A1==1 and A2==0 and A3==2
 0,0483 A1==0 and A2==2 and A4==0
 0,0483 (A4 = 0) and (A2 = 2) and (A1 = 0)
 0,0474 A1==1 and A3==0
 0,0469 A2
 0,0467 A1==1 xor A2==1
 0,0467 A1==1 equ A2==1
 0,0444 A1==2 xor A2==1
 0,0444 A1==2 equ A2==1
 0,0441 A1==2 impl A4==1
 0,0438 A1==0 or A2==1 or A3==1
 0,0433 A1==0 or A4==1
 0,0425 A1==0 or A2==2 or A3==0
 0,0417 A1==1 and A2==2 and A4==2
 0,0417 A1==1 and A2==2 and A3==1
 0,0417 A1==1 and A2==0 and A4==1
 0,0417 A1==1 and A2==0 and A4==0
 0,0417 A1==1 and A2==0 and A3==1
 0,0417 A1==1 and A2==0 and A3==0
 0,0414 A1==2 impl A4==2
 0,0412 A2==2 and A4==0
 0,0404 A2_x_A4
 0,0394 A1==0 or A4==0
 0,0389 A1==2 or A3==0
 0,0368 A1==0 xor A4==0
 0,0368 A1==0 equ A4==0
 0,0366 A1==2 and A3==2
 0,0366 A2==1 and A3==0
 0,0360 A2_x_A3
 0,0353 A1==2 and A2==0 and A3==1
 0,0353 A1==1 and A2==1 and A3==2
 0,0353 (A3 = 1) and (A2 = 0) and (A1 = 2)
 0,0350 A2==1 or A4==2
 0,0350 A2==1 or A4==1
 0,0331 A2==1 or A3==0
 0,0317 A1==2 impl A3==2
 0,0293 A1==2 or A3==1
 0,0290 A1==1 and A2==1 and A4==2
 0,0271 A1==1 or A2==1 or A3==2
 0,0264 A1==0 impl A4==1
 0,0264 A1==0 impl A2==1
 0,0264 A1==0 impl A2==0
 0,0251 A1==0 xor A3==0
 0,0251 A1==0 equ A3==0
 0,0241 A1==0 impl A4==2
 0,0229 A1==2 or A4==2
 0,0227 A1==2 or A2==0 or A4==1
 0,0214 A2==0 and A3==1
 0,0213 A1==1 xor A3==0
 0,0213 A1==1 equ A3==0
 0,0210 A2==1 impl A3==1
 0,0208 A2==1 xor A4==2
 0,0208 A2==1 equ A4==2
 0,0206 A1==2 xor A3==1
 0,0206 A1==2 equ A3==1
 0,0202 A1==2 impl A2==2
 0,0198 A2==1 impl A4==1
 0,0197 A2==1 and A4==0
 0,0197 A1==0 and A3==0
 0,0195 A1==0 or A2==2
 0,0191 A2==2 impl A4==2
 0,0188 A1==1 xor A2==0
 0,0188 A1==1 equ A2==0
 0,0184 A2==1 and A4==1
 0,0184 A1==2 and A4==2
 0,0181 A1==1 xor A4==1
 0,0181 A1==1 equ A4==1
 0,0181 A1==2 impl A3==0
 0,0181 A1==2 impl A2==1
 0,0174 A1==0 and A3==2
 0,0174 A1==0 and A3==1
 0,0173 A1==0 or A3==1
 0,0168 A2==1 impl A4==0
 0,0167 A1==0 or A4==2
 0,0161 A1==1 xor A2==2
 0,0161 A1==1 equ A2==2
 0,0161 A1==2 and A4==1
 0,0156 A2==1 or A3==2
 0,0155 A1==0 or A2==2 or A4==1
 0,0153 A1==0 xor A2==2
 0,0153 A1==0 equ A2==2
 0,0152 A2==1 and A3==1
 0,0151 A1==2 xor A2==0
 0,0151 A1==2 equ A2==0
 0,0149 A1==2 xor A4==1
 0,0149 A1==2 equ A4==1
 0,0147 A1==1 or A2==1 or A3==0
 0,0136 A2==0 impl A3==0
 0,0136 A1==2 or A2==0
 0,0134 A1==0 or A2==2 or A4==0
 0,0132 A1==2 or A2==0 or A3==0
 0,0127 A2==2 xor A4==2
 0,0127 A2==2 equ A4==2
 0,0127 A1==0 or A3==2
 0,0124 A1==1 or A2==1 or A4==2
 0,0124 A1==1 or A2==1 or A4==1
 0,0122 A1==2 or A2==1 or A4==0
 0,0120 A1==2 and A2==2 and A4==2
 0,0120 A1==2 and A2==2 and A3==1
 0,0120 A1==2 and A2==1 and A4==0
 0,0120 A1==0 and A2==2 and A4==2
 0,0120 A1==0 and A2==2 and A4==1
 0,0120 A1==0 and A2==1 and A4==2
 0,0120 A1==0 and A2==1 and A4==0
 0,0120 A1==0 and A2==1 and A3==1
 0,0120 A1==0 and A2==1 and A3==0
 0,0120 A1==0 and A2==0 and A4==2
 0,0120 A1==0 and A2==0 and A4==1
 0,0120 A1==0 and A2==0 and A3==2
 0,0120 A1==0 and A2==0 and A3==0
 0,0114 A2==0 or A4==0
 0,0110 A1==2 and A4==0
 0,0106 A2==2 impl A4==1
 0,0101 A2==0 or A3==2
 0,0097 A2==1 xor A3==2
 0,0097 A2==1 equ A3==2
 0,0096 A1==2 and A2==2 and A3==0
 0,0096 A1==2 and A2==1 and A4==2
 0,0096 A1==2 and A2==1 and A3==2
 0,0096 A1==2 and A2==1 and A3==1
 0,0096 A1==2 and A2==1 and A3==0
 0,0096 A1==2 and A2==0 and A3==0
 0,0096 A1==0 and A2==1 and A4==1
 0,0096 A1==0 and A2==1 and A3==2
 0,0096 A1==0 and A2==0 and A4==0
 0,0096 A1==0 and A2==0 and A3==1
 0,0093 A2==1 impl A3==0
 0,0081 A1==2 or A2==0 or A3==1
 0,0081 A2==2 or A3==1
 0,0073 A1==2 and A2==2 and A4==1
 0,0073 A1==2 and A2==2 and A4==0
 0,0073 A1==2 and A2==1 and A4==1
 0,0066 A2==2 or A4==2
 0,0051 A1==2 and A2==2 and A3==2
 0,0051 A2==0 xor A3==2
 0,0051 A2==0 equ A3==2
 0,0045 A1==2 or A2==0 or A4==2
 0,0038 A2==2 or A3==2
 0,0035 A1==2 xor A2==2
 0,0035 A1==2 equ A2==2
 0,0027 A2==2 impl A3==1
 0,0026 A2==1 xor A4==1
 0,0026 A2==1 equ A4==1
 0,0020 A2==0 impl A3==2
 0,0015 A1==1 xor A3==2
 0,0015 A1==1 equ A3==2
 0,0013 A1==2 and A2==0 and A3==2
 0,0012 A2==0 impl A4==1
 0,0007 A2==2 xor A3==1
 0,0007 A2==2 equ A3==1
 0,0004 A1==2 or A3==2
 -0,0006 A2==0 xor A4==0
 -0,0006 A2==0 equ A4==0
 -0,0013 A2==2 impl A3==0
 -0,0013 A2==2 and A3==2
 -0,0015 A2==1 or A3==1
 -0,0015 A1==0 xor A2==0
 -0,0015 A1==0 equ A2==0
 -0,0018 A1==1 and A2==1
 -0,0018 A1==2 or A4==0
 -0,0020 A1==1 and A2==1 and A3==0
 -0,0036 A1==2 xor A4==2
 -0,0036 A1==2 equ A4==2
 -0,0036 A2==0 and A4==2
 -0,0036 A2==0 and A4==0
 -0,0038 A1==1 xor A4==2
 -0,0038 A1==1 equ A4==2
 -0,0039 A1==0 or A2==2 or A3==2
 -0,0040 A2==0 impl A4==2
 -0,0040 A2==0 impl A4==0
 -0,0041 A2==2 impl A3==2
 -0,0043 A2==1 xor A3==0
 -0,0043 A2==1 equ A3==0
 -0,0046 A1==2 xor A3==0
 -0,0046 A1==2 equ A3==0
 -0,0046 A1==2 and A2==0 and A4==2
 -0,0047 A2==2 and A3==0
 -0,0050 A1==2 and A2==0 and A4==0
 -0,0051 A1==0 or A2==0 or A3==0
 -0,0051 A2==2 xor A4==0
 -0,0051 A2==2 equ A4==0
 -0,0053 A1==0 xor A4==1
 -0,0053 A1==0 equ A4==1
 -0,0055 A1==2 and A2==0 and A4==1
 -0,0055 A1==1 and A2==1 and A4==1
 -0,0059 A2==1 and A4==2
 -0,0060 A1==1 and A2==1 and A3==1
 -0,0062 A1==0 or A2==2 or A3==1
 -0,0064 A1==1 and A2==1 and A4==0
 -0,0064 A1==0 and A2==2 and A3==2
 -0,0064 A1==0 and A2==2 and A3==1
 -0,0064 A1==0 and A2==2 and A3==0
 -0,0067 A1==0 or A2==2 or A4==2
 -0,0067 A1==0 or A2==0 or A3==1
 -0,0071 A2==2 xor A3==2
 -0,0071 A2==2 equ A3==2
 -0,0074 A2==2 and A3==1
 -0,0076 A1==0 xor A3==1
 -0,0076 A1==0 equ A3==1
 -0,0076 A1==2 or A2==2 or A3==2
 -0,0076 A2==0 and A4==1
 -0,0077 A1==2 and A3==1
 -0,0077 A2==0 xor A3==1
 -0,0077 A2==0 equ A3==1
 -0,0078 A2==0 and A3==2
 -0,0079 A2==2 or A4==0
 -0,0079 A1==2 or A2==2 or A3==0
 -0,0080 A1==0 or A2==0 or A4==0
 -0,0082 A2==1 and A3==2
 -0,0083 A2==1 xor A4==0
 -0,0083 A2==1 equ A4==0
 -0,0084 A1==2 and A2==0
 -0,0085 A2==2 and A4==2
 -0,0088 A2==0 and A3==0
 -0,0090 A2==2 xor A3==0
 -0,0090 A2==2 equ A3==0
 -0,0090 A2==0 or A4==2
 -0,0091 A2==2 or A4==1
 -0,0091 A1==0 xor A3==2
 -0,0091 A1==0 equ A3==2
 -0,0091 A1==0 or A2==0 or A4==1
 -0,0091 A2==2 xor A4==1
 -0,0091 A2==2 equ A4==1
 -0,0092 A2==2 and A4==1
 -0,0093 A1==0 and A2==2
 -0,0093 A1==0 and A4==0
 -0,0094 A1==2 or A2==0 or A3==2
 -0,0095 A1==2 or A2==2 or A4==2
 -0,0096 A2==0 xor A3==0
 -0,0096 A2==0 equ A3==0
 -0,0096 A1==0 or A2==0
 -0,0098 A2==1 or A4==0
 -0,0100 A1==0 or A2==0 or A3==2
 -0,0101 A2==0 or A3==1
 -0,0102 A1==2 or A2==2 or A4==1
 -0,0105 A1==2 or A2==2 or A4==0
 -0,0105 A1==2 or A2==0 or A4==0
 -0,0105 A2==2 impl A4==0
 -0,0108 A2==0 impl A3==1
 -0,0109 A1==2 or A2==2 or A3==1
 -0,0109 A2==0 or A3==0
 -0,0115 A1==0 or A2==0 or A4==2
 -0,0117 A2==0 or A4==1
 -0,0118 A1==2 xor A4==0
 -0,0118 A1==2 equ A4==0
 -0,0119 A2==2 or A3==0
 -0,0119 A1==0 xor A4==2
 -0,0119 A1==0 equ A4==2
 -0,0119 A2==0 xor A4==2
 -0,0119 A2==0 equ A4==2
 -0,0120 A1==2 or A2==2
 -0,0120 A2==0 xor A4==1
 -0,0120 A2==0 equ A4==1
 -0,0120 A2==1 xor A3==1
 -0,0120 A2==1 equ A3==1
 -0,0120 A1==2 xor A3==2
 -0,0120 A1==2 equ A3==2
 -0,0124 A3
 -0,0135 A4
 -0,0221 A5
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.25
MDL (param. search)
The best parameter when using FURIA: MDL@0.25
MDL (param. search)
The best parameter when using RandomForest: MDL@0.5
								--------------
									Fold  4
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,4789 A1_x_A2
 0,3856 A1_x_A4
 0,3788 A1==1 impl A2==1
 0,3737 (A1 = 1)
 0,3695 A1_x_A3
 0,3605 A1
 0,2671 num-of-N((A1 = 1) and (A2 = 2))
 0,2628 A1==1 or A4==0
 0,2612 num-of-N((A1 = 1) and (A2 = 0))
 0,2547 A1==1 impl A4==0
 0,2385 A1==1 impl A4==1
 0,2385 A1==1 impl A3==0
 0,2364 A1==1 or A3==1
 0,2171 A1==1 impl A3==1
 0,2141 num-of-N((A1 = 1) and (A4 = 2))
 0,2102 A1==1 or A2==0 or A4==0
 0,2056 A1==1 or A2==2 or A3==1
 0,1963 num-of-N((A1 = 1) and (A3 = 2))
 0,1888 A1==1 or A2==2
 0,1769 A1==1 or A2==0
 0,1768 A1==1 and A4==2
 0,1768 (A1 = 1) and (A4 = 2)
 0,1602 A1==1 and A2==0
 0,1602 (A1 = 1) and (A2 = 0)
 0,1521 A1==1 and A2==2
 0,1521 (A1 = 1) and (A2 = 2)
 0,1518 A1==1 impl A3==2
 0,1441 A1==1 and A3==2
 0,1441 (A1 = 1) and (A3 = 2)
 0,1440 A1==1 impl A2==2
 0,1423 A1==2 impl A2==0
 0,1423 A1==0 impl A4==0
 0,1423 A1==0 impl A2==2
 0,1384 A1==2 impl A3==1
 0,1363 A1==1 impl A2==0
 0,1215 A1==1 impl A4==2
 0,1150 A1==1 xor A4==0
 0,1150 A1==1 equ A4==0
 0,1139 A1==1 or A2==1 or A4==0
 0,1102 A1==1 or A2==2 or A4==0
 0,1097 A1==1 or A3==2
 0,1097 A1==1 or A3==0
 0,1074 A1==2 or A2==1
 0,1027 A1==1 or A2==1 or A3==1
 0,1021 A1==1 or A4==2
 0,1015 A1==1 or A4==1
 0,1001 A1==0 or A2==1
 0,0958 A1==1 or A2==2 or A4==2
 0,0956 A1==1 or A2==0 or A3==2
 0,0887 A1==1 or A2==2 or A4==1
 0,0887 A1==1 or A2==0 or A3==1
 0,0887 A1==1 or A2==0 or A3==0
 0,0862 A1==1 or A2==1
 0,0835 num-of-N((A4 = 0) and (A2 = 2) and (A1 = 0))
 0,0813 A1==0 or A2==1 or A3==2
 0,0753 A1==2 or A2==1 or A4==1
 0,0726 A1==1 xor A3==1
 0,0726 A1==1 equ A3==1
 0,0694 A1==2 or A2==1 or A4==2
 0,0668 A1==1 and A3==1
 0,0652 A1==0 or A2==1 or A3==0
 0,0646 num-of-N((A3 = 1) and (A2 = 0) and (A1 = 2))
 0,0640 A1==1 or A2==2 or A3==2
 0,0640 A1==1 or A2==2 or A3==0
 0,0632 A1==2 or A4==1
 0,0612 A1==2 or A2==1 or A3==2
 0,0605 A1==2 and A2==2
 0,0605 A1==0 and A2==0
 0,0574 A1==0 and A4==1
 0,0573 A1==2 impl A4==0
 0,0562 A1==1 or A2==0 or A4==1
 0,0544 A1==0 or A3==0
 0,0542 A1==2 and A3==2
 0,0542 A1==2 and A3==0
 0,0542 A1==0 and A4==2
 0,0534 A1==1 and A4==1
 0,0534 A1==1 and A3==0
 0,0534 A1==1 or A2==0 or A4==2
 0,0521 A1==0 or A2==1 or A4==0
 0,0511 A1==2 and A2==1
 0,0511 A1==0 and A2==1
 0,0484 A1==1 and A2==2 and A4==2
 0,0484 A1==1 and A2==1 and A4==2
 0,0484 A1==1 and A2==0 and A3==1
 0,0484 A1==0 and A2==2 and A4==0
 0,0484 (A4 = 0) and (A2 = 2) and (A1 = 0)
 0,0471 A1==2 or A2==1 or A3==0
 0,0460 A2==1 impl A4==2
 0,0460 A1==2 impl A4==2
 0,0459 A1==2 impl A4==1
 0,0459 A1==0 impl A3==1
 0,0437 A1==0 or A2==1 or A4==1
 0,0432 A2==1 impl A3==2
 0,0432 A1==0 impl A3==2
 0,0432 A1==0 impl A3==0
 0,0431 A1==1 and A4==0
 0,0428 A1==0 xor A4==0
 0,0428 A1==0 equ A4==0
 0,0418 A1==2 and A2==0 and A3==1
 0,0418 A1==1 and A2==2 and A4==1
 0,0418 A1==1 and A2==2 and A3==1
 0,0418 A1==1 and A2==2 and A3==0
 0,0418 A1==1 and A2==1 and A3==2
 0,0418 A1==1 and A2==0 and A4==2
 0,0418 A1==1 and A2==0 and A4==1
 0,0418 A1==1 and A2==0 and A4==0
 0,0418 A1==1 and A2==0 and A3==0
 0,0418 (A3 = 1) and (A2 = 0) and (A1 = 2)
 0,0409 A1==0 or A2==1 or A4==2
 0,0398 A1==0 or A4==0
 0,0393 A1==1 xor A2==1
 0,0393 A1==1 equ A2==1
 0,0390 A1==2 or A2==1 or A3==1
 0,0385 A1==2 or A3==0
 0,0376 A1==2 or A2==0 or A4==1
 0,0359 A1==0 or A4==1
 0,0353 A1==1 and A2==2 and A3==2
 0,0353 A1==1 and A2==0 and A3==2
 0,0345 A1==0 or A2==2 or A3==0
 0,0327 A1==2 xor A2==1
 0,0327 A1==2 equ A2==1
 0,0310 A2==0 and A3==1
 0,0290 A1==1 and A2==2 and A4==0
 0,0290 A1==2 or A3==1
 0,0282 A1==0 xor A2==1
 0,0282 A1==0 equ A2==1
 0,0269 A1==2 impl A2==1
 0,0259 A2==1 xor A3==2
 0,0259 A2==1 equ A3==2
 0,0259 A1==0 xor A2==2
 0,0259 A1==0 equ A2==2
 0,0249 A1==2 or A2==0
 0,0249 A1==0 or A2==2
 0,0247 A1==2 impl A3==2
 0,0247 A1==2 impl A3==0
 0,0243 A2==1 or A3==2
 0,0243 A1==0 or A3==2
 0,0237 A1==2 xor A3==1
 0,0237 A1==2 equ A3==1
 0,0220 A1==1 xor A2==2
 0,0220 A1==1 equ A2==2
 0,0218 A1==2 xor A2==0
 0,0218 A1==2 equ A2==0
 0,0213 A1==1 or A2==1 or A3==0
 0,0212 A1==0 impl A2==1
 0,0208 A1==0 or A2==2 or A4==1
 0,0204 A1==2 and A4==1
 0,0203 A1==2 impl A2==2
 0,0193 A1==2 and A4==2
 0,0191 A1==0 impl A4==2
 0,0189 A1==1 xor A3==0
 0,0189 A1==1 equ A3==0
 0,0179 A1==2 xor A4==1
 0,0179 A1==2 equ A4==1
 0,0175 A2==2 and A4==0
 0,0173 A1==1 or A2==1 or A4==2
 0,0173 A1==1 or A2==1 or A3==2
 0,0172 A2
 0,0171 A1==2 or A2==0 or A3==0
 0,0171 A1==0 impl A4==1
 0,0169 A1==1 or A2==1 or A4==1
 0,0163 A2==1 or A4==1
 0,0159 A2_x_A3
 0,0157 A2==1 and A4==0
 0,0154 A1==1 xor A4==1
 0,0154 A1==1 equ A4==1
 0,0151 A1==0 impl A2==0
 0,0148 A1==1 xor A2==0
 0,0148 A1==1 equ A2==0
 0,0148 A1==2 or A2==0 or A3==1
 0,0148 A2==1 and A4==1
 0,0148 A2==1 and A3==0
 0,0148 A1==0 and A3==2
 0,0148 A1==0 and A3==0
 0,0141 A2==1 xor A4==2
 0,0141 A2==1 equ A4==2
 0,0141 A1==0 xor A3==0
 0,0141 A1==0 equ A3==0
 0,0137 A1==2 or A2==1 or A4==0
 0,0137 A1==0 or A2==2 or A4==0
 0,0134 A2==1 or A4==2
 0,0134 A1==2 or A4==2
 0,0129 A2==1 or A3==0
 0,0129 A1==2 or A3==2
 0,0127 A2==1 and A3==1
 0,0127 A1==0 and A3==1
 0,0118 A1==2 and A2==2 and A4==2
 0,0118 A1==2 and A2==2 and A4==0
 0,0118 A1==2 and A2==2 and A3==1
 0,0118 A1==2 and A2==2 and A3==0
 0,0118 A1==2 and A2==1 and A4==2
 0,0118 A1==2 and A2==0 and A3==2
 0,0118 A1==0 and A2==0 and A4==2
 0,0118 A1==0 and A2==0 and A4==1
 0,0118 A1==0 and A2==0 and A3==2
 0,0118 A1==0 and A2==0 and A3==0
 0,0111 A1==2 or A4==0
 0,0106 A1==2 and A4==0
 0,0102 A2==0 xor A3==2
 0,0102 A2==0 equ A3==2
 0,0100 A2==0 impl A3==2
 0,0095 A1==2 and A2==2 and A4==1
 0,0095 A1==2 and A2==2 and A3==2
 0,0095 A1==2 and A2==1 and A4==1
 0,0095 A1==2 and A2==1 and A3==1
 0,0095 A1==2 and A2==1 and A3==0
 0,0095 A1==0 and A2==2 and A4==2
 0,0095 A1==0 and A2==2 and A4==1
 0,0095 A1==0 and A2==1 and A4==1
 0,0095 A1==0 and A2==1 and A4==0
 0,0095 A1==0 and A2==1 and A3==1
 0,0095 A1==0 and A2==1 and A3==0
 0,0095 A1==0 and A2==0 and A4==0
 0,0095 A1==0 and A2==0 and A3==1
 0,0075 A1==0 or A2==2 or A3==2
 0,0072 A1==2 and A2==1 and A3==2
 0,0072 A1==2 and A2==0 and A3==0
 0,0072 A1==0 and A2==1 and A4==2
 0,0072 A1==0 and A2==1 and A3==2
 0,0070 A1==1 and A2==1
 0,0066 A1==0 or A2==1 or A3==1
 0,0058 A2==2 or A3==1
 0,0053 A2_x_A4
 0,0050 A1==2 and A2==1 and A4==0
 0,0037 A2==2 xor A4==2
 0,0037 A2==2 equ A4==2
 0,0031 A2==2 impl A4==1
 0,0031 A2==0 impl A3==0
 0,0029 A2==2 or A4==2
 0,0023 A2==2 impl A4==2
 0,0020 A2==1 impl A3==1
 0,0020 A1==0 or A4==2
 0,0019 A2==0 or A3==2
 0,0016 A1==0 or A3==1
 0,0016 A2==1 impl A4==0
 0,0006 A2==1 impl A4==1
 0,0006 A2==1 impl A3==0
 0,0002 A1==0 xor A2==0
 0,0002 A1==0 equ A2==0
 -0,0001 A1==1 xor A3==2
 -0,0001 A1==1 equ A3==2
 -0,0005 A2==0 or A4==0
 -0,0016 A1==2 or A2==0 or A4==2
 -0,0019 A1==2 xor A2==2
 -0,0019 A1==2 equ A2==2
 -0,0022 A1==2 or A2==0 or A4==0
 -0,0022 A2==2 xor A3==1
 -0,0022 A2==2 equ A3==1
 -0,0028 A2==0 xor A3==1
 -0,0028 A2==0 equ A3==1
 -0,0030 A1==0 xor A3==2
 -0,0030 A1==0 equ A3==2
 -0,0040 A2==0 or A4==2
 -0,0041 A1==2 or A2==0 or A3==2
 -0,0044 A2==2 impl A3==2
 -0,0044 A2==0 impl A4==1
 -0,0048 A1==2 xor A3==0
 -0,0048 A1==2 equ A3==0
 -0,0050 A2==0 and A4==0
 -0,0050 A2==0 impl A4==2
 -0,0054 A1==0 or A2==2 or A4==2
 -0,0055 A1==2 and A2==0 and A4==1
 -0,0055 A1==1 and A2==1 and A4==0
 -0,0056 A1==0 or A2==0 or A4==0
 -0,0058 A1==2 or A2==2 or A4==1
 -0,0058 A1==2 or A2==2 or A3==0
 -0,0060 A1==2 and A2==0 and A4==0
 -0,0060 A1==1 and A2==1 and A3==1
 -0,0060 A1==0 and A2==2 and A3==1
 -0,0060 A1==0 and A2==2 and A3==0
 -0,0061 A2==2 impl A3==1
 -0,0061 A2==2 impl A3==0
 -0,0062 A2==2 and A3==1
 -0,0062 A2==2 and A3==0
 -0,0062 A1==2 or A2==2 or A4==0
 -0,0064 A1==2 and A2==0 and A4==2
 -0,0064 A1==1 and A2==1 and A4==1
 -0,0064 A1==1 and A2==1 and A3==0
 -0,0064 A1==0 and A2==2 and A3==2
 -0,0066 A1==0 xor A4==1
 -0,0066 A1==0 equ A4==1
 -0,0067 A2==1 xor A4==1
 -0,0067 A2==1 equ A4==1
 -0,0068 A2==1 xor A3==1
 -0,0068 A2==1 equ A3==1
 -0,0071 A2==0 impl A4==0
 -0,0071 A2==0 and A3==2
 -0,0073 A2==0 and A4==2
 -0,0073 A1==0 or A2==2 or A3==1
 -0,0073 A1==0 or A2==0 or A3==0
 -0,0074 A2==0 xor A4==0
 -0,0074 A2==0 equ A4==0
 -0,0074 A1==2 xor A4==0
 -0,0074 A1==2 equ A4==0
 -0,0075 A2==2 and A3==2
 -0,0075 A2==0 and A4==1
 -0,0080 A2==2 or A3==2
 -0,0081 A2==2 xor A4==0
 -0,0081 A2==2 equ A4==0
 -0,0081 A2==1 xor A3==0
 -0,0081 A2==1 equ A3==0
 -0,0081 A1==0 or A2==0 or A4==1
 -0,0081 A1==0 or A2==0 or A3==1
 -0,0083 A2==0 xor A4==2
 -0,0083 A2==0 equ A4==2
 -0,0088 A2==0 impl A3==1
 -0,0088 A2==1 and A3==2
 -0,0088 A1==2 and A3==1
 -0,0088 A1==1 xor A4==2
 -0,0088 A1==1 equ A4==2
 -0,0089 A1==2 or A2==2 or A3==1
 -0,0090 A2==2 and A4==1
 -0,0090 A2==0 and A3==0
 -0,0090 A1==2 and A2==0
 -0,0090 A1==0 or A2==0 or A4==2
 -0,0092 A2==1 and A4==2
 -0,0092 A1==0 and A4==0
 -0,0092 A1==0 and A2==2
 -0,0093 A2==2 and A4==2
 -0,0093 A1==2 xor A4==2
 -0,0093 A1==2 equ A4==2
 -0,0095 A2==1 xor A4==0
 -0,0095 A2==1 equ A4==0
 -0,0095 A1==2 or A2==2
 -0,0098 A2==2 xor A3==0
 -0,0098 A2==2 equ A3==0
 -0,0101 A1==2 or A2==2 or A4==2
 -0,0102 A2==2 or A4==0
 -0,0104 A2==2 xor A3==2
 -0,0104 A2==2 equ A3==2
 -0,0104 A1==0 or A2==0
 -0,0105 A2==1 or A4==0
 -0,0105 A2==0 xor A3==0
 -0,0105 A2==0 equ A3==0
 -0,0105 A1==0 or A2==0 or A3==2
 -0,0107 A2==0 xor A4==1
 -0,0107 A2==0 equ A4==1
 -0,0107 A2==2 impl A4==0
 -0,0107 A2==0 or A3==1
 -0,0111 A2==0 or A3==0
 -0,0112 A2==2 xor A4==1
 -0,0112 A2==2 equ A4==1
 -0,0113 A1==2 or A2==2 or A3==2
 -0,0113 A1==0 xor A3==1
 -0,0113 A1==0 equ A3==1
 -0,0116 A1==0 xor A4==2
 -0,0116 A1==0 equ A4==2
 -0,0116 A2==2 or A4==1
 -0,0116 A1==2 xor A3==2
 -0,0116 A1==2 equ A3==2
 -0,0117 A2==1 or A3==1
 -0,0118 A2==2 or A3==0
 -0,0118 A2==0 or A4==1
 -0,0146 A4
 -0,0146 A3
 -0,0221 A5
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.25
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.0
MDL (param. search)
The best parameter when using FURIA: MDL@0.25
MDL (param. search)
The best parameter when using RandomForest: MDL@0.25
								--------------
									Fold  5
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,4831 A1_x_A2
 0,3900 A1==1 impl A2==1
 0,3891 A1_x_A3
 0,3868 (A1 = 1)
 0,3856 A1_x_A4
 0,3733 A1
 0,2767 num-of-N((A1 = 1) and (A2 = 0))
 0,2707 num-of-N((A1 = 1) and (A2 = 2))
 0,2675 A1==1 impl A4==1
 0,2514 A1==1 or A4==0
 0,2514 A1==1 or A3==1
 0,2451 A1==1 impl A3==1
 0,2385 A1==1 impl A3==0
 0,2263 A1==1 impl A4==0
 0,2129 num-of-N((A1 = 1) and (A4 = 2))
 0,2102 A1==1 or A2==0 or A4==0
 0,2073 num-of-N((A1 = 1) and (A3 = 2))
 0,2056 A1==1 or A2==2 or A3==1
 0,1938 A1==1 or A2==2
 0,1888 A1==1 or A2==0
 0,1685 A1==1 and A4==2
 0,1685 A1==1 and A2==0
 0,1685 (A1 = 1) and (A4 = 2)
 0,1685 (A1 = 1) and (A2 = 0)
 0,1602 A1==1 and A3==2
 0,1602 (A1 = 1) and (A3 = 2)
 0,1521 A1==1 and A2==2
 0,1521 (A1 = 1) and (A2 = 2)
 0,1518 A1==1 impl A2==2
 0,1440 A1==1 impl A3==2
 0,1423 A1==2 impl A3==1
 0,1423 A1==0 impl A2==2
 0,1384 A1==2 impl A2==0
 0,1384 A1==0 impl A4==0
 0,1363 A1==1 impl A4==2
 0,1363 A1==1 impl A2==0
 0,1184 A1==1 or A4==1
 0,1184 A1==1 or A3==0
 0,1161 A1==0 or A2==1
 0,1139 A1==1 or A2==1 or A4==0
 0,1102 A1==1 or A2==2 or A4==1
 0,1102 A1==1 or A2==1 or A3==1
 0,1097 A1==1 or A4==2
 0,1097 A1==1 or A3==2
 0,1032 A1==2 or A2==1
 0,1029 A1==1 or A2==0 or A3==1
 0,1029 A1==1 or A2==0 or A3==0
 0,0958 A1==1 or A2==2 or A4==0
 0,0956 A1==1 or A2==2 or A4==2
 0,0921 A1==1 xor A3==1
 0,0921 A1==1 equ A3==1
 0,0900 A1==1 or A2==1
 0,0887 A1==1 or A2==0 or A3==2
 0,0875 A1==2 or A2==1 or A4==1
 0,0844 A1==0 or A2==1 or A3==2
 0,0788 A1==1 xor A4==0
 0,0788 A1==1 equ A4==0
 0,0738 A1==0 or A2==1 or A3==0
 0,0702 A1==1 or A2==2 or A3==2
 0,0694 A1==0 or A2==1 or A4==1
 0,0682 A1==2 or A4==1
 0,0681 num-of-N((A4 = 0) and (A2 = 2) and (A1 = 0))
 0,0671 A1==1 or A2==0 or A4==1
 0,0670 num-of-N((A3 = 1) and (A2 = 0) and (A1 = 2))
 0,0668 A1==1 and A4==0
 0,0640 A1==1 or A2==2 or A3==0
 0,0612 A1==2 or A2==1 or A4==2
 0,0609 A1==0 or A3==0
 0,0605 A1==0 and A2==0
 0,0593 A1==1 and A3==0
 0,0581 A1==1 or A2==0 or A4==2
 0,0574 A1==2 and A3==0
 0,0573 A1==0 impl A3==0
 0,0546 A1==1 and A3==1
 0,0544 A1==2 impl A4==0
 0,0542 A1==2 and A3==2
 0,0542 A1==2 and A2==2
 0,0542 A1==2 and A2==1
 0,0542 A1==0 and A4==2
 0,0542 A1==0 and A4==1
 0,0521 A1==2 or A2==1 or A3==1
 0,0515 A1==0 impl A3==1
 0,0513 A1==0 or A4==1
 0,0511 A1==0 and A2==1
 0,0507 A1==0 or A2==1 or A4==2
 0,0487 A1==2 impl A4==1
 0,0486 A1==2 or A2==1 or A3==2
 0,0484 A1==1 and A2==2 and A4==2
 0,0484 A1==1 and A2==0 and A4==0
 0,0484 A1==1 and A2==0 and A3==0
 0,0459 A1==0 impl A3==2
 0,0432 A2==1 impl A3==2
 0,0423 A1==0 or A2==1 or A4==0
 0,0421 A1==1 and A4==1
 0,0418 A1==2 and A2==0 and A3==1
 0,0418 A1==1 and A2==2 and A4==0
 0,0418 A1==1 and A2==2 and A3==2
 0,0418 A1==1 and A2==2 and A3==0
 0,0418 A1==1 and A2==1 and A4==2
 0,0418 A1==1 and A2==1 and A3==2
 0,0418 A1==1 and A2==0 and A4==2
 0,0418 A1==1 and A2==0 and A4==1
 0,0418 A1==1 and A2==0 and A3==2
 0,0418 A1==1 and A2==0 and A3==1
 0,0418 A1==0 and A2==2 and A4==0
 0,0418 (A4 = 0) and (A2 = 2) and (A1 = 0)
 0,0418 (A3 = 1) and (A2 = 0) and (A1 = 2)
 0,0413 A1==1 xor A2==1
 0,0413 A1==1 equ A2==1
 0,0406 A1==2 impl A4==2
 0,0405 A1==2 or A3==1
 0,0401 A1==2 xor A3==1
 0,0401 A1==2 equ A3==1
 0,0390 A1==2 or A2==1 or A3==0
 0,0380 A2==1 impl A4==2
 0,0376 A1==0 or A2==2 or A3==0
 0,0376 A1==0 xor A2==1
 0,0376 A1==0 equ A2==1
 0,0367 A2==2 and A4==0
 0,0358 A1==2 or A2==0 or A4==1
 0,0353 A1==1 and A2==2 and A3==1
 0,0308 A1==1 xor A4==1
 0,0308 A1==1 equ A4==1
 0,0293 A1==0 impl A2==1
 0,0290 A1==1 and A2==2 and A4==1
 0,0290 A2==1 or A4==1
 0,0290 A1==2 or A3==0
 0,0290 A1==0 or A4==0
 0,0281 A1==2 xor A2==1
 0,0281 A1==2 equ A2==1
 0,0269 A1==0 impl A4==2
 0,0269 A1==0 impl A4==1
 0,0266 A1==0 or A2==2
 0,0243 A1==1 xor A2==2
 0,0243 A1==1 equ A2==2
 0,0240 A1==1 or A2==1 or A3==0
 0,0237 A1==2 xor A4==1
 0,0237 A1==2 equ A4==1
 0,0228 A1==2 and A4==2
 0,0228 A1==0 and A3==2
 0,0226 A1==0 or A3==2
 0,0225 A1==2 impl A3==2
 0,0225 A1==2 impl A2==2
 0,0225 A1==2 impl A2==1
 0,0225 A1==0 impl A2==0
 0,0218 A2==0 and A3==1
 0,0216 A1==0 xor A4==0
 0,0216 A1==0 xor A2==2
 0,0216 A1==0 equ A4==0
 0,0216 A1==0 equ A2==2
 0,0213 A1==1 or A2==1 or A4==2
 0,0210 A2_x_A4
 0,0204 A2==1 or A3==2
 0,0203 A1==2 impl A3==0
 0,0199 A1==0 xor A3==0
 0,0199 A1==0 equ A3==0
 0,0197 A2==1 xor A3==2
 0,0197 A2==1 equ A3==2
 0,0195 A2
 0,0189 A1==2 or A2==0
 0,0189 A1==1 xor A3==0
 0,0189 A1==1 equ A3==0
 0,0183 A1==0 or A2==2 or A4==1
 0,0179 A1==1 or A2==1 or A4==1
 0,0173 A1==1 or A2==1 or A3==2
 0,0170 A1==0 and A3==1
 0,0160 A1==0 or A2==1 or A3==1
 0,0159 A1==2 xor A2==0
 0,0159 A1==2 equ A2==0
 0,0148 A1==2 or A4==2
 0,0148 A1==1 xor A2==0
 0,0148 A1==1 equ A2==0
 0,0148 A1==2 or A2==0 or A3==1
 0,0148 A1==0 or A2==2 or A4==0
 0,0148 A2==1 and A4==0
 0,0148 A2==1 and A3==0
 0,0148 A1==2 and A4==1
 0,0129 A2==1 or A4==2
 0,0127 A2==1 and A3==1
 0,0127 A1==0 and A3==0
 0,0124 A2==2 impl A4==1
 0,0118 A1==2 and A2==2 and A4==2
 0,0118 A1==2 and A2==2 and A4==1
 0,0118 A1==2 and A2==2 and A3==2
 0,0118 A1==2 and A2==1 and A4==2
 0,0118 A1==2 and A2==1 and A3==0
 0,0118 A1==0 and A2==2 and A4==1
 0,0118 A1==0 and A2==1 and A4==0
 0,0118 A1==0 and A2==0 and A4==1
 0,0118 A1==0 and A2==0 and A4==0
 0,0118 A1==0 and A2==0 and A3==1
 0,0118 A1==0 and A2==0 and A3==0
 0,0116 A2==1 or A3==0
 0,0106 A1==2 and A4==0
 0,0095 A1==2 or A2==0 or A3==0
 0,0095 A1==2 and A2==2 and A3==0
 0,0095 A1==2 and A2==1 and A4==0
 0,0095 A1==2 and A2==1 and A3==1
 0,0095 A1==2 and A2==0 and A3==2
 0,0095 A1==2 and A2==0 and A3==0
 0,0095 A1==0 and A2==2 and A4==2
 0,0095 A1==0 and A2==1 and A4==2
 0,0095 A1==0 and A2==1 and A3==2
 0,0095 A1==0 and A2==1 and A3==1
 0,0095 A1==0 and A2==0 and A4==2
 0,0095 A1==0 and A2==0 and A3==2
 0,0089 A2==1 xor A4==2
 0,0089 A2==1 equ A4==2
 0,0086 A2==1 and A4==1
 0,0085 A1==0 or A4==2
 0,0081 A1==2 or A3==2
 0,0081 A1==0 or A3==1
 0,0075 A1==2 or A2==1 or A4==0
 0,0074 A2==0 or A4==0
 0,0072 A1==2 and A2==2 and A3==1
 0,0072 A1==2 and A2==1 and A4==1
 0,0072 A1==2 and A2==1 and A3==2
 0,0072 A1==0 and A2==1 and A3==0
 0,0070 A1==1 and A2==1
 0,0065 A2==1 impl A4==1
 0,0060 A2_x_A3
 0,0058 A2==0 impl A3==2
 0,0050 A1==2 and A2==2 and A4==0
 0,0050 A1==0 and A2==1 and A4==1
 0,0050 A2==0 impl A3==0
 0,0041 A1==2 or A4==0
 0,0040 A1==0 or A2==2 or A3==2
 0,0037 A2==0 xor A3==2
 0,0037 A2==0 equ A3==2
 0,0035 A2==1 impl A3==1
 0,0032 A2==1 xor A4==1
 0,0032 A2==1 equ A4==1
 0,0020 A2==1 impl A4==0
 0,0020 A2==1 impl A3==0
 0,0017 A2==0 or A3==2
 0,0015 A2==2 impl A4==2
 0,0006 A2==2 xor A4==2
 0,0006 A2==2 equ A4==2
 0,0006 A2==2 or A3==1
 0,0006 A1==0 xor A4==1
 0,0006 A1==0 equ A4==1
 -0,0005 A2==2 or A4==2
 -0,0010 A1==0 xor A2==0
 -0,0010 A1==0 equ A2==0
 -0,0016 A2==2 xor A4==0
 -0,0016 A2==2 equ A4==0
 -0,0016 A1==2 or A2==0 or A4==2
 -0,0019 A2==0 xor A4==0
 -0,0019 A2==0 equ A4==0
 -0,0031 A2==0 impl A4==1
 -0,0034 A1==0 or A2==2 or A4==2
 -0,0037 A2==2 impl A3==2
 -0,0041 A1==0 or A2==0 or A4==1
 -0,0042 A1==1 xor A3==2
 -0,0042 A1==1 equ A3==2
 -0,0050 A2==2 and A3==0
 -0,0050 A2==0 impl A4==2
 -0,0050 A2==0 impl A4==0
 -0,0050 A2==0 or A4==2
 -0,0051 A2==2 and A4==1
 -0,0052 A2==2 xor A3==1
 -0,0052 A2==2 equ A3==1
 -0,0052 A1==2 or A2==2 or A3==1
 -0,0052 A1==0 or A2==2 or A3==1
 -0,0052 A1==0 and A2==2 and A3==2
 -0,0053 A2==0 and A4==2
 -0,0054 A1==2 and A2==0 and A4==2
 -0,0057 A1==0 xor A3==2
 -0,0057 A1==0 equ A3==2
 -0,0058 A1==2 or A2==2 or A4==0
 -0,0058 A1==2 or A2==0 or A3==2
 -0,0059 A2==0 and A4==0
 -0,0059 A2==2 xor A4==1
 -0,0059 A2==2 equ A4==1
 -0,0059 A2==1 xor A4==0
 -0,0059 A2==1 equ A4==0
 -0,0059 A1==2 xor A2==2
 -0,0059 A1==2 equ A2==2
 -0,0059 A1==1 xor A4==2
 -0,0059 A1==1 equ A4==2
 -0,0060 A1==1 and A2==1 and A4==0
 -0,0060 A1==1 and A2==1 and A3==1
 -0,0060 A1==0 and A2==2 and A3==0
 -0,0061 A2==2 impl A3==1
 -0,0062 A1==2 or A2==2 or A4==1
 -0,0064 A1==0 or A2==0 or A3==0
 -0,0064 A1==2 and A2==0 and A4==1
 -0,0064 A1==2 and A2==0 and A4==0
 -0,0064 A1==1 and A2==1 and A4==1
 -0,0064 A1==1 and A2==1 and A3==0
 -0,0064 A1==0 and A2==2 and A3==1
 -0,0065 A2==2 or A3==2
 -0,0066 A2==2 and A3==1
 -0,0066 A2==0 xor A3==1
 -0,0066 A2==0 equ A3==1
 -0,0068 A1==2 or A2==2 or A3==0
 -0,0073 A2==0 and A4==1
 -0,0073 A1==2 or A2==0 or A4==0
 -0,0075 A2==2 impl A3==0
 -0,0077 A1==0 or A2==0 or A3==1
 -0,0082 A2==2 impl A4==0
 -0,0083 A2==2 and A3==2
 -0,0083 A1==2 or A2==2
 -0,0085 A1==0 and A4==0
 -0,0087 A2==2 xor A3==2
 -0,0087 A2==2 equ A3==2
 -0,0087 A2==1 xor A3==0
 -0,0087 A2==1 equ A3==0
 -0,0087 A1==2 xor A4==2
 -0,0087 A1==2 xor A3==0
 -0,0087 A1==2 equ A4==2
 -0,0087 A1==2 equ A3==0
 -0,0088 A2==1 and A4==2
 -0,0088 A1==0 and A2==2
 -0,0090 A2==0 and A3==2
 -0,0090 A1==2 and A2==0
 -0,0090 A2==1 and A3==2
 -0,0090 A1==2 and A3==1
 -0,0092 A2==2 xor A3==0
 -0,0092 A2==2 equ A3==0
 -0,0093 A2==2 and A4==2
 -0,0093 A2==0 and A3==0
 -0,0095 A2==0 xor A3==0
 -0,0095 A2==0 equ A3==0
 -0,0095 A1==0 or A2==0 or A4==0
 -0,0097 A2==0 xor A4==2
 -0,0097 A2==0 equ A4==2
 -0,0099 A2==0 xor A4==1
 -0,0099 A2==0 or A3==0
 -0,0099 A2==0 equ A4==1
 -0,0099 A2==1 xor A3==1
 -0,0099 A2==1 equ A3==1
 -0,0099 A1==0 or A2==0
 -0,0100 A2==1 or A3==1
 -0,0102 A1==2 xor A4==0
 -0,0102 A1==2 equ A4==0
 -0,0103 A2==0 or A3==1
 -0,0104 A1==0 xor A3==1
 -0,0104 A1==0 equ A3==1
 -0,0105 A1==0 or A2==0 or A4==2
 -0,0105 A1==0 or A2==0 or A3==2
 -0,0107 A2==2 or A4==1
 -0,0107 A2==0 impl A3==1
 -0,0111 A2==2 or A4==0
 -0,0113 A1==2 or A2==2 or A4==2
 -0,0113 A1==2 or A2==2 or A3==2
 -0,0117 A2==1 or A4==0
 -0,0117 A2==0 or A4==1
 -0,0117 A4
 -0,0118 A2==2 or A3==0
 -0,0120 A1==2 xor A3==2
 -0,0120 A1==2 equ A3==2
 -0,0120 A1==0 xor A4==2
 -0,0120 A1==0 equ A4==2
 -0,0175 A3
 -0,0224 A5
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.0
MDL (param. search)
The best parameter when using FURIA: MDL@0.5
MDL (param. search)
The best parameter when using RandomForest: MDL@0.5
								--------------
									Fold  6
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,5015 A1_x_A2
 0,4261 (A1 = 1)
 0,4198 A1_x_A4
 0,4132 A1
 0,4129 A1==1 impl A2==1
 0,4120 A1_x_A3
 0,3078 num-of-N((A1 = 1) and (A2 = 2))
 0,2873 num-of-N((A1 = 1) and (A2 = 0))
 0,2775 A1==1 impl A3==0
 0,2577 A1==1 impl A4==0
 0,2577 A1==1 impl A3==1
 0,2480 A1==1 impl A4==1
 0,2459 A1==1 or A4==0
 0,2419 A1==1 or A3==1
 0,2382 num-of-N((A1 = 1) and (A3 = 2))
 0,2256 A1==1 or A2==2
 0,2248 num-of-N((A1 = 1) and (A4 = 2))
 0,2102 A1==1 or A2==2 or A3==1
 0,2102 A1==1 or A2==0 or A4==0
 0,2040 A1==1 or A2==0
 0,1768 A1==1 and A3==2
 0,1768 (A1 = 1) and (A3 = 2)
 0,1766 A1==1 impl A4==2
 0,1685 A1==1 and A2==2
 0,1685 A1==1 and A2==0
 0,1685 (A1 = 1) and (A2 = 2)
 0,1685 (A1 = 1) and (A2 = 0)
 0,1601 A1==1 impl A2==2
 0,1601 A1==1 impl A2==0
 0,1522 A1==1 impl A3==2
 0,1521 A1==1 and A4==2
 0,1521 (A1 = 1) and (A4 = 2)
 0,1463 A1==2 impl A3==1
 0,1459 A1==1 or A3==0
 0,1423 A1==2 impl A2==0
 0,1403 A1==1 or A4==1
 0,1384 A1==0 impl A4==0
 0,1384 A1==0 impl A2==2
 0,1372 A1==1 or A4==2
 0,1330 A1==1 or A3==2
 0,1320 A1==2 or A2==1
 0,1282 A1==1 or A2==2 or A4==2
 0,1263 A1==1 or A2==2 or A4==1
 0,1117 A1==0 or A2==1
 0,1102 A1==1 or A2==0 or A3==2
 0,1065 A1==1 or A2==0 or A3==0
 0,1040 A1==2 or A2==1 or A4==2
 0,1029 A1==1 or A2==2 or A4==0
 0,0994 A1==1 or A2==1 or A4==0
 0,0991 A1==1 or A2==0 or A3==1
 0,0983 A1==1 or A2==1
 0,0956 A1==1 or A2==2 or A3==0
 0,0956 A1==1 or A2==1 or A3==1
 0,0798 A1==0 or A2==1 or A3==0
 0,0787 A1==1 or A2==2 or A3==2
 0,0762 A1==1 xor A3==1
 0,0762 A1==1 equ A3==1
 0,0753 A1==2 or A2==1 or A4==1
 0,0752 A1==1 xor A4==0
 0,0752 A1==1 equ A4==0
 0,0750 A1==2 impl A4==2
 0,0738 A1==0 or A2==1 or A3==2
 0,0733 A1==1 or A2==0 or A4==1
 0,0732 A1==1 and A4==1
 0,0702 A1==1 or A2==0 or A4==2
 0,0671 A1==2 impl A4==1
 0,0668 A1==1 and A4==0
 0,0668 A1==1 and A3==1
 0,0652 A1==2 or A2==1 or A3==1
 0,0623 A1==0 or A3==0
 0,0605 A1==2 and A3==2
 0,0597 A1==2 or A2==1 or A3==2
 0,0597 A1==0 or A2==1 or A4==0
 0,0574 A1==2 and A2==1
 0,0574 A1==0 and A4==2
 0,0574 A1==0 and A2==1
 0,0574 A1==2 or A2==1 or A3==0
 0,0567 A1==2 or A4==1
 0,0548 num-of-N((A3 = 1) and (A2 = 0) and (A1 = 2))
 0,0546 A1==1 and A3==0
 0,0544 A1==0 impl A3==0
 0,0542 A1==2 and A3==0
 0,0542 A1==2 and A2==2
 0,0521 A1==0 or A2==1 or A4==2
 0,0515 A2==1 impl A3==2
 0,0515 A1==2 impl A4==0
 0,0515 A1==0 impl A3==2
 0,0511 A1==0 and A4==1
 0,0511 A1==0 and A2==0
 0,0506 A1==2 or A3==0
 0,0484 A1==1 and A2==2 and A4==1
 0,0484 A1==1 and A2==2 and A4==0
 0,0484 A1==1 and A2==2 and A3==2
 0,0484 A1==1 and A2==1 and A3==2
 0,0484 A1==1 and A2==0 and A4==1
 0,0484 A1==1 and A2==0 and A3==1
 0,0483 A1==2 or A3==1
 0,0433 A1==0 or A4==0
 0,0432 A2==1 impl A4==2
 0,0432 A1==0 impl A3==1
 0,0427 A1==2 xor A2==1
 0,0427 A1==2 equ A2==1
 0,0426 A1==1 xor A2==1
 0,0426 A1==1 equ A2==1
 0,0423 A1==0 or A2==1 or A4==1
 0,0418 A1==1 and A2==2 and A3==1
 0,0418 A1==1 and A2==2 and A3==0
 0,0418 A1==1 and A2==1 and A4==2
 0,0418 A1==1 and A2==0 and A4==2
 0,0418 A1==1 and A2==0 and A4==0
 0,0418 A1==1 and A2==0 and A3==2
 0,0418 A1==1 and A2==0 and A3==0
 0,0418 A1==0 and A2==2 and A4==0
 0,0406 A1==2 impl A3==0
 0,0406 A1==2 impl A2==2
 0,0380 A1==2 impl A2==1
 0,0378 A1==2 or A4==2
 0,0378 A1==1 xor A3==0
 0,0378 A1==1 equ A3==0
 0,0375 A1==0 xor A4==0
 0,0375 A1==0 equ A4==0
 0,0360 A1==2 and A4==0
 0,0354 A1==2 impl A3==2
 0,0353 A1==1 and A2==2 and A4==2
 0,0351 A1==2 xor A3==1
 0,0351 A1==2 equ A3==1
 0,0325 A1==1 or A2==1 or A3==0
 0,0303 A1==0 xor A2==1
 0,0303 A1==0 equ A2==1
 0,0301 A1==1 or A2==1 or A4==2
 0,0292 A1==1 or A2==1 or A4==1
 0,0290 A1==2 and A2==0 and A3==1
 0,0290 (A3 = 1) and (A2 = 0) and (A1 = 2)
 0,0290 A1==0 or A4==1
 0,0286 A1==2 or A2==0 or A4==1
 0,0279 A1==1 or A2==1 or A3==2
 0,0269 A1==0 impl A4==1
 0,0269 A1==0 impl A2==0
 0,0266 A1==1 xor A2==2
 0,0266 A1==1 equ A2==2
 0,0263 A2==2 and A4==0
 0,0259 A1==0 or A2==2 or A3==0
 0,0243 A2
 0,0243 A1==2 or A2==0
 0,0232 A1==1 xor A4==1
 0,0232 A1==1 equ A4==1
 0,0228 A1==0 and A3==1
 0,0226 A2==1 or A4==2
 0,0225 A1==0 impl A4==2
 0,0225 A1==0 impl A2==1
 0,0220 A1==2 or A2==0 or A3==0
 0,0216 A1==0 xor A3==0
 0,0216 A1==0 equ A3==0
 0,0216 A2==0 and A3==1
 0,0210 A1==1 xor A2==0
 0,0210 A1==1 equ A2==0
 0,0204 A2==1 and A3==0
 0,0204 A1==2 and A4==1
 0,0195 A1==2 or A2==0 or A3==1
 0,0183 A1==2 or A2==1 or A4==0
 0,0177 A2==1 xor A4==2
 0,0177 A2==1 equ A4==2
 0,0174 A2==1 or A3==2
 0,0174 A1==0 or A3==2
 0,0168 A2==1 or A3==0
 0,0168 A1==0 or A2==2
 0,0165 A2_x_A3
 0,0160 A1==0 or A2==2 or A4==0
 0,0159 A2==1 xor A3==2
 0,0159 A2==1 equ A3==2
 0,0148 A2==1 and A4==0
 0,0148 A2==1 and A3==1
 0,0148 A1==2 and A4==2
 0,0148 A1==0 and A3==2
 0,0141 A1==2 xor A4==1
 0,0141 A1==2 equ A4==1
 0,0137 A1==0 or A2==1 or A3==1
 0,0134 A2==0 xor A3==2
 0,0134 A2==0 equ A3==2
 0,0127 A2==1 and A4==1
 0,0127 A1==0 and A3==0
 0,0123 A1==2 xor A2==0
 0,0123 A1==2 equ A2==0
 0,0123 A1==0 xor A2==2
 0,0123 A1==0 equ A2==2
 0,0123 A2_x_A4
 0,0118 A1==2 and A2==2 and A4==0
 0,0118 A1==2 and A2==2 and A3==0
 0,0118 A1==2 and A2==1 and A4==2
 0,0118 A1==2 and A2==1 and A3==2
 0,0118 A1==2 and A2==1 and A3==1
 0,0118 A1==2 and A2==0 and A3==2
 0,0118 A1==0 and A2==2 and A4==2
 0,0118 A1==0 and A2==1 and A4==0
 0,0118 A1==0 and A2==1 and A3==0
 0,0118 A1==0 and A2==0 and A3==2
 0,0116 A2==1 or A4==1
 0,0116 A1==2 or A4==0
 0,0110 A2==2 impl A4==2
 0,0100 A1==1 and A2==1
 0,0098 A1==0 or A4==2
 0,0095 A1==2 and A2==2 and A4==1
 0,0095 A1==2 and A2==2 and A3==2
 0,0095 A1==2 and A2==1 and A4==1
 0,0095 A1==2 and A2==1 and A4==0
 0,0095 A1==2 and A2==0 and A3==0
 0,0095 A1==0 and A2==2 and A4==1
 0,0095 A1==0 and A2==1 and A4==2
 0,0095 A1==0 and A2==1 and A4==1
 0,0095 A1==0 and A2==1 and A3==2
 0,0095 A1==0 and A2==1 and A3==1
 0,0095 A1==0 and A2==0 and A4==2
 0,0095 A1==0 and A2==0 and A4==0
 0,0095 A1==0 and A2==0 and A3==1
 0,0093 A2==2 xor A4==2
 0,0093 A2==2 equ A4==2
 0,0086 A1==2 or A2==0 or A4==2
 0,0085 A1==2 or A3==2
 0,0083 A2==0 impl A3==2
 0,0081 A1==0 or A3==1
 0,0075 A1==0 or A2==2 or A4==1
 0,0074 A2==0 or A3==2
 0,0072 A1==2 and A2==2 and A4==2
 0,0072 A1==2 and A2==2 and A3==1
 0,0072 A1==2 and A2==1 and A3==0
 0,0072 A1==0 and A2==0 and A4==1
 0,0065 A2==1 impl A4==1
 0,0050 A1==0 and A2==0 and A3==0
 0,0050 A2==1 impl A4==0
 0,0050 A2==1 impl A3==1
 0,0050 A2==2 impl A4==1
 0,0049 A1==1 xor A4==2
 0,0049 A1==1 equ A4==2
 0,0044 A2==2 or A4==2
 0,0044 A1==2 xor A4==2
 0,0044 A1==2 equ A4==2
 0,0031 A2==2 or A3==1
 0,0031 A2==0 or A4==0
 0,0030 A2==1 impl A3==0
 0,0006 A2==0 impl A3==0
 0,0004 A1==2 xor A3==0
 0,0004 A1==2 equ A3==0
 -0,0001 A2==0 xor A4==0
 -0,0001 A2==0 equ A4==0
 -0,0002 A1==0 or A2==2 or A3==2
 -0,0017 A2==2 impl A3==0
 -0,0017 A2==0 impl A4==0
 -0,0019 A2==2 xor A4==0
 -0,0019 A2==2 equ A4==0
 -0,0020 A1==2 and A2==0 and A4==0
 -0,0025 A2==2 impl A3==1
 -0,0029 A1==2 or A2==2 or A4==0
 -0,0030 A2==2 and A3==2
 -0,0034 A2==2 xor A3==1
 -0,0034 A2==2 equ A3==1
 -0,0034 A1==1 xor A3==2
 -0,0034 A1==1 equ A3==2
 -0,0034 A1==2 or A2==2 or A3==0
 -0,0034 A1==0 or A2==0 or A3==0
 -0,0034 A2==0 and A4==1
 -0,0049 A2==0 xor A3==1
 -0,0049 A2==0 equ A3==1
 -0,0050 A2==2 or A3==2
 -0,0052 A1==0 or A2==0 or A3==1
 -0,0052 A1==0 and A2==2 and A3==1
 -0,0055 A1==2 and A2==0 and A4==1
 -0,0055 A1==1 and A2==1 and A3==0
 -0,0055 A2==0 impl A4==2
 -0,0058 A1==2 or A2==2 or A3==1
 -0,0058 A1==0 or A2==0 or A4==0
 -0,0060 A1==1 and A2==1 and A4==1
 -0,0060 A1==1 and A2==1 and A4==0
 -0,0060 A1==1 and A2==1 and A3==1
 -0,0060 A1==0 and A2==2 and A3==2
 -0,0060 A1==2 and A2==0
 -0,0061 A2==2 impl A3==2
 -0,0062 A2==0 and A4==2
 -0,0064 A1==2 and A2==0 and A4==2
 -0,0064 A1==0 and A2==2 and A3==0
 -0,0065 A1==0 xor A3==2
 -0,0065 A1==0 equ A3==2
 -0,0066 A2==2 and A3==1
 -0,0067 A1==2 and A3==1
 -0,0068 A1==2 or A2==2
 -0,0068 A1==2 or A2==2 or A4==1
 -0,0068 A1==2 or A2==0 or A4==0
 -0,0068 A1==0 or A2==2 or A3==1
 -0,0068 A1==0 or A2==0 or A4==1
 -0,0073 A2==1 xor A3==0
 -0,0073 A2==1 equ A3==0
 -0,0073 A1==0 xor A4==1
 -0,0073 A1==0 equ A4==1
 -0,0073 A2==2 and A3==0
 -0,0073 A1==0 or A2==2 or A4==2
 -0,0075 A2==0 impl A4==1
 -0,0076 A1==2 xor A2==2
 -0,0076 A1==2 equ A2==2
 -0,0076 A1==0 xor A2==0
 -0,0076 A1==0 or A2==0
 -0,0076 A1==0 equ A2==0
 -0,0080 A2==2 or A4==1
 -0,0080 A2==1 xor A4==1
 -0,0080 A2==1 equ A4==1
 -0,0081 A2==2 xor A4==1
 -0,0081 A2==2 equ A4==1
 -0,0081 A2==1 or A4==0
 -0,0082 A2==2 and A4==2
 -0,0083 A2==1 or A3==1
 -0,0084 A2==0 and A4==0
 -0,0085 A2==0 and A3==2
 -0,0086 A2==0 or A4==2
 -0,0088 A2==0 and A3==0
 -0,0088 A2==1 and A4==2
 -0,0088 A1==0 and A4==0
 -0,0088 A1==0 and A2==2
 -0,0089 A1==2 or A2==0 or A3==2
 -0,0092 A2==2 and A4==1
 -0,0093 A2==1 and A3==2
 -0,0103 A2==0 xor A4==1
 -0,0103 A2==0 equ A4==1
 -0,0104 A2==2 impl A4==0
 -0,0104 A2==0 impl A3==1
 -0,0107 A2==1 xor A3==1
 -0,0107 A2==1 equ A3==1
 -0,0107 A1==0 xor A3==1
 -0,0107 A1==0 equ A3==1
 -0,0108 A1==0 or A2==0 or A3==2
 -0,0108 A2==1 xor A4==0
 -0,0108 A2==1 equ A4==0
 -0,0109 A2==2 xor A3==2
 -0,0109 A2==2 equ A3==2
 -0,0111 A1==2 xor A4==0
 -0,0111 A1==2 equ A4==0
 -0,0113 A2==0 or A3==1
 -0,0114 A2==0 xor A4==2
 -0,0114 A2==0 equ A4==2
 -0,0114 A1==2 or A2==2 or A3==2
 -0,0114 A2==2 or A4==0
 -0,0115 A1==2 or A2==2 or A4==2
 -0,0115 A1==0 or A2==0 or A4==2
 -0,0116 A2==0 or A3==0
 -0,0116 A2==2 xor A3==0
 -0,0116 A2==2 equ A3==0
 -0,0117 A2==0 xor A3==0
 -0,0117 A2==0 equ A3==0
 -0,0119 A2==2 or A3==0
 -0,0119 A1==2 xor A3==2
 -0,0119 A1==2 equ A3==2
 -0,0120 A1==0 xor A4==2
 -0,0120 A1==0 equ A4==2
 -0,0120 A2==0 or A4==1
 -0,0168 A3
 -0,0197 A4
 -0,0221 A5
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.0
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.5
								--------------
									Fold  7
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,4889 A1_x_A2
 0,4013 A1==1 impl A2==1
 0,3883 A1_x_A3
 0,3873 A1_x_A4
 0,3853 (A1 = 1)
 0,3719 A1
 0,2790 num-of-N((A1 = 1) and (A2 = 0))
 0,2675 A1==1 impl A4==0
 0,2662 num-of-N((A1 = 1) and (A2 = 2))
 0,2615 A1==1 impl A3==1
 0,2571 A1==1 or A3==1
 0,2419 A1==1 or A4==0
 0,2385 A1==1 impl A4==1
 0,2210 num-of-N((A1 = 1) and (A4 = 2))
 0,2171 A1==1 impl A3==0
 0,2102 A1==1 or A2==0 or A4==0
 0,2056 A1==1 or A2==2 or A3==1
 0,1988 A1==1 or A2==0
 0,1968 num-of-N((A1 = 1) and (A3 = 2))
 0,1769 A1==1 or A2==2
 0,1768 A1==1 and A4==2
 0,1768 (A1 = 1) and (A4 = 2)
 0,1685 A1==1 and A2==2
 0,1685 (A1 = 1) and (A2 = 2)
 0,1602 A1==1 and A2==0
 0,1602 (A1 = 1) and (A2 = 0)
 0,1543 A1==2 impl A2==0
 0,1522 A1==1 impl A3==2
 0,1521 A1==1 and A3==2
 0,1521 (A1 = 1) and (A3 = 2)
 0,1503 A1==2 impl A3==1
 0,1443 A1==1 impl A2==0
 0,1367 A1==1 impl A2==2
 0,1345 A1==0 impl A4==0
 0,1307 A1==0 impl A2==2
 0,1292 A1==1 impl A4==2
 0,1239 A1==2 or A2==1
 0,1141 A1==0 or A2==1
 0,1139 A1==1 or A2==1 or A3==1
 0,1137 A1==1 or A4==2
 0,1132 A1==1 or A3==0
 0,1097 A1==1 or A4==1
 0,1065 A1==1 or A2==0 or A3==1
 0,1032 A1==1 xor A4==0
 0,1032 A1==1 equ A4==0
 0,1027 A1==1 or A2==1 or A4==0
 0,1027 A1==1 or A2==0 or A3==0
 0,1021 A1==1 or A3==2
 0,1001 A1==1 xor A3==1
 0,1001 A1==1 equ A3==1
 0,0994 A1==1 or A2==0 or A3==2
 0,0956 A1==1 or A2==2 or A4==2
 0,0921 A1==1 or A2==2 or A4==0
 0,0862 A1==1 or A2==1
 0,0853 A1==1 or A2==2 or A4==1
 0,0829 A1==0 or A2==1 or A3==2
 0,0822 num-of-N((A3 = 1) and (A2 = 0) and (A1 = 2))
 0,0783 A1==2 or A2==1 or A4==2
 0,0753 A1==1 and A3==0
 0,0753 A1==2 or A2==1 or A4==1
 0,0725 A1==0 or A2==1 or A3==0
 0,0715 num-of-N((A4 = 0) and (A2 = 2) and (A1 = 0))
 0,0702 A1==1 or A2==0 or A4==2
 0,0671 A1==1 or A2==0 or A4==1
 0,0638 A1==2 and A3==2
 0,0638 A1==2 and A2==2
 0,0620 A1==1 or A2==2 or A3==0
 0,0610 A2==1 impl A4==2
 0,0609 A1==2 or A4==1
 0,0607 A1==1 and A4==1
 0,0605 A1==0 or A2==1 or A4==0
 0,0597 A1==2 or A2==1 or A3==2
 0,0574 A1==2 and A2==1
 0,0559 A1==2 or A2==1 or A3==1
 0,0559 A1==2 or A2==1 or A3==0
 0,0543 A1==2 impl A4==2
 0,0542 A1==2 and A3==0
 0,0542 A1==0 and A4==2
 0,0542 A1==0 and A2==0
 0,0515 A1==2 impl A4==0
 0,0511 A1==0 and A4==1
 0,0506 A1==1 or A2==2 or A3==2
 0,0487 A1==0 impl A3==1
 0,0487 A1==2 impl A4==1
 0,0486 A1==0 or A2==1 or A4==1
 0,0484 A1==2 and A2==0 and A3==1
 0,0484 A1==1 and A2==2 and A4==2
 0,0484 A1==1 and A2==2 and A3==0
 0,0484 A1==1 and A2==0 and A4==2
 0,0484 A1==1 and A2==0 and A4==1
 0,0484 (A3 = 1) and (A2 = 0) and (A1 = 2)
 0,0481 A1==0 and A2==1
 0,0477 A1==1 and A3==1
 0,0462 A1==1 xor A2==1
 0,0462 A1==1 equ A2==1
 0,0454 A1==0 xor A4==0
 0,0454 A1==0 equ A4==0
 0,0447 A1==0 or A4==0
 0,0441 A1==2 or A3==1
 0,0437 A1==0 or A2==1 or A4==2
 0,0432 A2==1 impl A3==2
 0,0432 A1==0 impl A3==2
 0,0431 A1==1 and A4==0
 0,0418 A1==1 and A2==2 and A4==1
 0,0418 A1==1 and A2==2 and A4==0
 0,0418 A1==1 and A2==2 and A3==2
 0,0418 A1==1 and A2==2 and A3==1
 0,0418 A1==1 and A2==1 and A4==2
 0,0418 A1==1 and A2==0 and A3==2
 0,0418 A1==1 and A2==0 and A3==1
 0,0418 A1==1 and A2==0 and A3==0
 0,0418 A1==0 and A2==2 and A4==0
 0,0418 (A4 = 0) and (A2 = 2) and (A1 = 0)
 0,0406 A1==0 impl A3==0
 0,0401 A1==2 xor A3==1
 0,0401 A1==2 equ A3==1
 0,0401 A1==0 xor A2==1
 0,0401 A1==0 equ A2==1
 0,0398 A1==0 or A3==0
 0,0376 A1==2 or A2==0 or A4==1
 0,0375 A1==2 xor A2==1
 0,0375 A1==2 equ A2==1
 0,0353 A1==1 and A2==1 and A3==2
 0,0340 A1==2 or A3==0
 0,0333 A1==0 or A4==1
 0,0310 A2==0 and A3==1
 0,0290 A1==1 and A2==0 and A4==0
 0,0283 A2
 0,0278 A1==2 impl A3==0
 0,0259 A1==2 or A2==1 or A4==0
 0,0256 A1==2 impl A2==1
 0,0256 A1==2 or A2==0
 0,0243 A2==1 or A3==2
 0,0243 A1==0 or A3==2
 0,0239 A1==2 xor A2==0
 0,0239 A1==2 equ A2==0
 0,0233 A2_x_A4
 0,0228 A2==1 and A4==1
 0,0228 A2==1 and A3==1
 0,0226 A1==1 xor A2==0
 0,0226 A1==1 equ A2==0
 0,0225 A1==0 impl A2==1
 0,0218 A2==2 and A4==0
 0,0213 A1==1 or A2==1 or A4==1
 0,0212 A1==2 impl A3==2
 0,0212 A1==2 impl A2==2
 0,0204 A2==1 and A4==0
 0,0203 A1==0 impl A4==1
 0,0199 A2==1 or A3==0
 0,0196 A1==2 or A2==0 or A3==1
 0,0195 A1==0 or A2==2 or A4==0
 0,0195 A1==0 or A2==2 or A3==0
 0,0193 A1==2 and A4==1
 0,0183 A1==0 impl A4==2
 0,0183 A1==0 impl A2==0
 0,0180 A1==0 and A3==0
 0,0180 A1==2 or A4==2
 0,0179 A2==1 xor A4==2
 0,0179 A2==1 equ A4==2
 0,0178 A2_x_A3
 0,0173 A1==1 or A2==1 or A4==2
 0,0173 A1==1 or A2==1 or A3==2
 0,0170 A1==2 and A4==0
 0,0169 A1==1 or A2==1 or A3==0
 0,0168 A2==1 or A4==2
 0,0168 A1==2 or A4==0
 0,0168 A1==1 xor A4==1
 0,0168 A1==1 equ A4==1
 0,0168 A1==0 or A2==2
 0,0163 A2==1 or A4==1
 0,0158 A2==1 xor A3==2
 0,0158 A2==1 equ A3==2
 0,0151 A2==1 impl A3==0
 0,0148 A1==2 and A4==2
 0,0148 A1==0 and A3==2
 0,0141 A1==2 xor A4==1
 0,0141 A1==2 equ A4==1
 0,0141 A1==0 xor A2==2
 0,0141 A1==0 equ A2==2
 0,0140 A1==2 or A3==2
 0,0140 A1==1 xor A3==0
 0,0140 A1==1 equ A3==0
 0,0118 A1==2 and A2==2 and A4==2
 0,0118 A1==2 and A2==2 and A4==1
 0,0118 A1==2 and A2==2 and A4==0
 0,0118 A1==2 and A2==2 and A3==2
 0,0118 A1==2 and A2==2 and A3==1
 0,0118 A1==2 and A2==2 and A3==0
 0,0118 A1==2 and A2==1 and A4==1
 0,0118 A1==2 and A2==1 and A4==0
 0,0118 A1==2 and A2==1 and A3==2
 0,0118 A1==2 and A2==1 and A3==1
 0,0118 A1==2 and A2==0 and A3==2
 0,0118 A1==0 and A2==2 and A4==2
 0,0116 A1==0 or A2==1 or A3==1
 0,0116 A2==2 xor A4==2
 0,0116 A2==2 equ A4==2
 0,0116 A1==1 xor A2==2
 0,0116 A1==1 equ A2==2
 0,0115 A1==2 or A2==0 or A3==0
 0,0115 A1==0 or A2==2 or A4==1
 0,0106 A1==0 and A3==1
 0,0100 A2==0 impl A3==2
 0,0095 A1==2 and A2==0 and A3==0
 0,0095 A1==0 and A2==1 and A4==1
 0,0095 A1==0 and A2==1 and A3==2
 0,0095 A1==0 and A2==0 and A4==2
 0,0095 A1==0 and A2==0 and A4==1
 0,0095 A1==0 and A2==0 and A4==0
 0,0095 A1==0 and A2==0 and A3==2
 0,0095 A1==0 and A2==0 and A3==1
 0,0095 A1==0 and A2==0 and A3==0
 0,0089 A2==2 or A4==2
 0,0079 A2==0 impl A3==0
 0,0072 A1==2 and A2==1 and A4==2
 0,0072 A1==2 and A2==1 and A3==0
 0,0072 A1==0 and A2==2 and A4==1
 0,0072 A1==0 and A2==1 and A4==2
 0,0072 A1==0 and A2==1 and A4==0
 0,0072 A1==0 and A2==1 and A3==1
 0,0072 A1==0 and A2==1 and A3==0
 0,0067 A2==1 and A3==0
 0,0058 A1==0 xor A3==0
 0,0058 A1==0 equ A3==0
 0,0055 A2==1 impl A4==0
 0,0052 A1==0 or A3==1
 0,0050 A2==2 impl A4==2
 0,0047 A1==0 or A2==2 or A3==2
 0,0040 A2==1 impl A4==1
 0,0040 A2==1 impl A3==1
 0,0039 A2==2 impl A4==1
 0,0037 A2==0 xor A3==2
 0,0037 A2==0 equ A3==2
 0,0033 A1==1 and A2==1
 0,0031 A2==0 or A4==0
 0,0029 A1==2 or A2==0 or A4==2
 0,0029 A2==2 or A3==1
 0,0004 A2==0 or A3==2
 0,0002 A1==0 xor A2==0
 0,0002 A1==0 equ A2==0
 -0,0003 A2==0 impl A4==0
 -0,0007 A2==1 xor A3==0
 -0,0007 A2==1 equ A3==0
 -0,0013 A2==0 xor A4==0
 -0,0013 A2==0 equ A4==0
 -0,0013 A1==2 xor A2==2
 -0,0013 A1==2 equ A2==2
 -0,0019 A2==2 xor A4==0
 -0,0019 A2==2 equ A4==0
 -0,0019 A2==0 or A4==2
 -0,0022 A1==0 or A4==2
 -0,0023 A1==2 or A2==0 or A3==2
 -0,0028 A2==0 xor A3==1
 -0,0028 A2==0 equ A3==1
 -0,0029 A1==2 or A2==2 or A4==0
 -0,0030 A1==0 xor A3==2
 -0,0030 A1==0 equ A3==2
 -0,0044 A2==2 impl A3==2
 -0,0044 A2==2 xor A3==1
 -0,0044 A2==2 equ A3==1
 -0,0044 A1==1 xor A3==2
 -0,0044 A1==1 equ A3==2
 -0,0045 A2==0 and A4==2
 -0,0045 A2==0 and A4==1
 -0,0048 A1==2 or A2==0 or A4==0
 -0,0050 A2==0 impl A4==2
 -0,0050 A2==0 impl A4==1
 -0,0050 A1==1 and A2==1 and A3==0
 -0,0052 A1==1 and A2==1 and A3==1
 -0,0054 A1==2 or A2==2 or A3==1
 -0,0055 A1==1 and A2==1 and A4==1
 -0,0055 A1==1 and A2==1 and A4==0
 -0,0055 A1==0 and A2==2 and A3==0
 -0,0056 A2==2 impl A3==1
 -0,0056 A2==2 impl A3==0
 -0,0057 A1==0 xor A4==1
 -0,0057 A1==0 equ A4==1
 -0,0059 A2==0 xor A3==0
 -0,0059 A2==0 equ A3==0
 -0,0060 A1==2 and A2==0 and A4==0
 -0,0060 A1==0 and A2==2 and A3==1
 -0,0062 A2==2 and A3==1
 -0,0062 A2==2 and A3==0
 -0,0063 A1==2 xor A4==2
 -0,0063 A1==2 equ A4==2
 -0,0064 A1==2 and A2==0 and A4==2
 -0,0064 A1==2 and A2==0 and A4==1
 -0,0064 A1==0 and A2==2 and A3==2
 -0,0065 A1==2 xor A3==0
 -0,0065 A1==2 equ A3==0
 -0,0065 A1==1 xor A4==2
 -0,0065 A1==1 equ A4==2
 -0,0068 A1==0 or A2==0 or A3==1
 -0,0069 A1==2 or A2==2 or A4==1
 -0,0072 A2==1 or A4==0
 -0,0073 A2==0 or A3==0
 -0,0073 A2==2 and A3==2
 -0,0073 A1==0 or A2==2 or A3==1
 -0,0074 A2==1 xor A3==1
 -0,0074 A2==1 equ A3==1
 -0,0074 A1==2 xor A4==0
 -0,0074 A1==2 equ A4==0
 -0,0077 A1==0 or A2==0 or A4==1
 -0,0077 A1==0 or A2==0 or A4==0
 -0,0077 A2==1 and A3==2
 -0,0077 A2==0 and A4==0
 -0,0078 A1==0 or A2==0 or A4==2
 -0,0081 A2==1 xor A4==1
 -0,0081 A2==1 equ A4==1
 -0,0086 A1==2 or A2==2 or A3==0
 -0,0088 A2==1 and A4==2
 -0,0088 A2==2 or A3==2
 -0,0088 A2==0 and A3==2
 -0,0088 A2==0 xor A4==2
 -0,0088 A2==0 equ A4==2
 -0,0090 A2==2 and A4==1
 -0,0090 A2==0 and A3==0
 -0,0090 A1==0 and A2==2
 -0,0090 A1==0 and A4==0
 -0,0091 A1==2 or A2==2
 -0,0092 A2==2 and A4==2
 -0,0092 A1==2 and A3==1
 -0,0093 A1==2 and A2==0
 -0,0093 A2==0 xor A4==1
 -0,0093 A2==0 equ A4==1
 -0,0096 A1==2 or A2==2 or A4==2
 -0,0098 A1==0 xor A3==1
 -0,0098 A1==0 equ A3==1
 -0,0098 A1==0 or A2==2 or A4==2
 -0,0102 A2==2 xor A4==1
 -0,0102 A2==2 equ A4==1
 -0,0102 A2==0 impl A3==1
 -0,0104 A1==0 xor A4==2
 -0,0104 A1==0 equ A4==2
 -0,0105 A2==1 or A3==1
 -0,0105 A2==2 impl A4==0
 -0,0107 A2==0 or A3==1
 -0,0108 A2==2 or A4==1
 -0,0108 A1==0 or A2==0 or A3==2
 -0,0110 A2==1 xor A4==0
 -0,0110 A2==1 equ A4==0
 -0,0111 A1==0 or A2==0 or A3==0
 -0,0112 A1==2 or A2==2 or A3==2
 -0,0112 A2==2 xor A3==2
 -0,0112 A2==2 equ A3==2
 -0,0112 A1==0 or A2==0
 -0,0116 A2==2 xor A3==0
 -0,0116 A2==2 equ A3==0
 -0,0118 A2==2 or A4==0
 -0,0118 A2==2 or A3==0
 -0,0119 A2==0 or A4==1
 -0,0120 A1==2 xor A3==2
 -0,0120 A1==2 equ A3==2
 -0,0168 A4
 -0,0181 A3
 -0,0197 A5
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.25
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.25
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.25
								--------------
									Fold  8
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,4770 A1_x_A2
 0,3838 A1==1 impl A2==1
 0,3713 A1_x_A3
 0,3706 A1_x_A4
 0,3645 (A1 = 1)
 0,3513 A1
 0,2738 num-of-N((A1 = 1) and (A2 = 2))
 0,2548 num-of-N((A1 = 1) and (A2 = 0))
 0,2373 A1==1 or A3==1
 0,2338 A1==1 impl A4==1
 0,2318 A1==1 or A4==0
 0,2307 A1==1 impl A3==1
 0,2246 A1==1 impl A3==0
 0,2216 A1==1 impl A4==0
 0,2096 A1==1 or A2==2 or A3==1
 0,2050 A1==1 or A2==0 or A4==0
 0,1942 num-of-N((A1 = 1) and (A4 = 2))
 0,1894 num-of-N((A1 = 1) and (A3 = 2))
 0,1825 A1==1 or A2==2
 0,1825 A1==1 or A2==0
 0,1742 A1==1 and A2==2
 0,1742 (A1 = 1) and (A2 = 2)
 0,1498 A1==1 and A4==2
 0,1498 A1==1 and A3==2
 0,1498 (A1 = 1) and (A4 = 2)
 0,1498 (A1 = 1) and (A3 = 2)
 0,1478 A1==1 impl A2==0
 0,1451 A1==2 impl A3==1
 0,1419 A1==1 and A2==0
 0,1419 (A1 = 1) and (A2 = 0)
 0,1411 A1==2 impl A2==0
 0,1411 A1==0 impl A4==0
 0,1411 A1==0 impl A2==2
 0,1402 A1==1 impl A4==2
 0,1402 A1==1 impl A3==2
 0,1182 A1==1 impl A2==2
 0,1177 A1==2 or A2==1
 0,1140 A1==1 or A3==0
 0,1100 A1==1 or A4==1
 0,1089 A1==0 or A2==1
 0,1060 A1==1 or A2==0 or A3==0
 0,1022 A1==1 or A4==2
 0,0987 A1==1 or A2==2 or A4==1
 0,0987 A1==1 or A2==1 or A3==1
 0,0952 A1==1 or A2==1 or A4==0
 0,0947 A1==1 or A3==2
 0,0934 A1==2 or A2==1 or A4==2
 0,0917 A1==1 or A2==2 or A4==2
 0,0917 A1==1 or A2==2 or A4==0
 0,0917 A1==1 or A2==0 or A3==1
 0,0867 A1==1 xor A3==1
 0,0867 A1==1 equ A3==1
 0,0848 A1==1 or A2==0 or A3==2
 0,0846 num-of-N((A3 = 1) and (A2 = 0) and (A1 = 2))
 0,0838 A1==0 or A2==1 or A3==2
 0,0778 A1==2 or A2==1 or A4==1
 0,0765 A1==1 xor A4==0
 0,0765 A1==1 equ A4==0
 0,0764 A1==1 or A2==1
 0,0719 A1==0 or A2==1 or A3==0
 0,0670 num-of-N((A4 = 0) and (A2 = 2) and (A1 = 0))
 0,0647 A1==1 or A2==2 or A3==0
 0,0619 A1==2 and A3==2
 0,0617 A1==1 or A2==0 or A4==2
 0,0591 A1==1 and A4==0
 0,0587 A1==1 or A2==0 or A4==1
 0,0587 A1==2 and A2==2
 0,0587 A1==0 and A4==2
 0,0581 A1==2 or A2==1 or A3==2
 0,0577 A1==1 and A3==0
 0,0568 A1==2 or A2==1 or A3==1
 0,0557 A1==2 or A4==1
 0,0555 A1==0 and A2==1
 0,0555 A1==0 and A2==0
 0,0543 A1==0 or A2==1 or A4==2
 0,0535 A2==1 impl A4==2
 0,0532 A1==1 and A3==1
 0,0530 A1==1 or A2==2 or A3==2
 0,0523 A1==2 and A3==0
 0,0523 A1==2 and A2==1
 0,0523 A1==0 and A4==1
 0,0519 A1==1 and A4==1
 0,0479 A1==2 or A2==1 or A3==0
 0,0479 A1==0 or A2==1 or A4==0
 0,0479 A1==2 impl A4==2
 0,0479 A1==2 impl A4==1
 0,0479 A1==0 impl A3==0
 0,0476 A1==2 and A2==0 and A3==1
 0,0476 A1==1 and A2==2 and A4==2
 0,0476 A1==1 and A2==2 and A4==0
 0,0476 A1==1 and A2==2 and A3==1
 0,0476 A1==1 and A2==2 and A3==0
 0,0476 A1==0 and A2==2 and A4==0
 0,0476 (A4 = 0) and (A2 = 2) and (A1 = 0)
 0,0476 (A3 = 1) and (A2 = 0) and (A1 = 2)
 0,0474 A1==0 or A3==0
 0,0458 A1==0 or A2==1 or A4==1
 0,0450 A2==1 impl A3==2
 0,0424 A1==2 impl A4==0
 0,0424 A1==0 impl A3==2
 0,0424 A1==0 impl A3==1
 0,0411 A1==1 and A2==2 and A4==1
 0,0411 A1==1 and A2==2 and A3==2
 0,0411 A1==1 and A2==1 and A4==2
 0,0411 A1==1 and A2==1 and A3==2
 0,0411 A1==1 and A2==0 and A4==1
 0,0411 A1==1 and A2==0 and A4==0
 0,0411 A1==1 and A2==0 and A3==0
 0,0410 A1==2 or A2==0 or A4==1
 0,0406 A1==2 xor A3==1
 0,0406 A1==2 equ A3==1
 0,0397 A1==2 or A3==1
 0,0382 A1==2 xor A2==1
 0,0382 A1==2 equ A2==1
 0,0378 A1==1 xor A2==1
 0,0378 A1==1 equ A2==1
 0,0357 A1==0 xor A4==0
 0,0357 A1==0 equ A4==0
 0,0351 A1==0 or A4==0
 0,0347 A1==1 and A2==0 and A3==2
 0,0347 A1==1 and A2==0 and A3==1
 0,0325 A1==0 or A4==1
 0,0308 A1==0 xor A2==1
 0,0308 A1==0 equ A2==1
 0,0297 A2==2 and A4==0
 0,0285 A1==1 and A2==0 and A4==2
 0,0283 A1==2 or A3==0
 0,0276 A2
 0,0276 A2==1 or A4==2
 0,0276 A1==2 or A2==0
 0,0264 A2==1 xor A4==2
 0,0264 A2==1 equ A4==2
 0,0262 A1==2 xor A2==0
 0,0262 A1==2 equ A2==0
 0,0259 A1==2 or A4==2
 0,0259 A1==0 or A3==2
 0,0252 A2==1 or A3==2
 0,0252 A1==1 xor A2==0
 0,0252 A1==1 equ A2==0
 0,0251 A2==0 and A3==1
 0,0228 A1==2 impl A3==0
 0,0228 A1==2 impl A2==1
 0,0220 A2_x_A4
 0,0214 A1==0 or A2==2 or A3==0
 0,0213 A2==1 and A4==0
 0,0213 A2==1 and A3==1
 0,0206 A1==0 impl A4==1
 0,0205 A1==1 xor A4==1
 0,0205 A1==1 equ A4==1
 0,0200 A1==2 or A2==0 or A3==1
 0,0191 A1==1 xor A3==0
 0,0191 A1==1 equ A3==0
 0,0187 A1==1 or A2==1 or A4==1
 0,0186 A2_x_A3
 0,0185 A1==2 impl A2==2
 0,0185 A1==0 impl A2==1
 0,0185 A1==0 impl A2==0
 0,0180 A2==1 xor A3==2
 0,0180 A2==1 equ A3==2
 0,0179 A1==2 and A4==0
 0,0177 A2==1 or A3==0
 0,0171 A2==1 or A4==1
 0,0165 A1==2 impl A3==2
 0,0165 A1==0 impl A4==2
 0,0164 A1==2 xor A4==1
 0,0164 A1==2 equ A4==1
 0,0157 A2==1 and A4==1
 0,0157 A1==0 and A3==2
 0,0157 A1==0 and A3==1
 0,0148 A1==1 or A2==1 or A3==2
 0,0148 A1==1 or A2==1 or A3==0
 0,0141 A1==2 or A2==0 or A3==0
 0,0135 A1==2 and A4==2
 0,0135 A1==2 and A4==1
 0,0130 A1==1 or A2==1 or A4==2
 0,0130 A1==0 or A2==2
 0,0129 A1==0 xor A3==0
 0,0129 A1==0 xor A2==2
 0,0129 A1==0 equ A3==0
 0,0129 A1==0 equ A2==2
 0,0128 A2==2 impl A4==1
 0,0123 A1==2 and A2==2 and A4==0
 0,0123 A1==2 and A2==2 and A3==2
 0,0123 A1==2 and A2==1 and A3==2
 0,0123 A1==2 and A2==0 and A3==0
 0,0123 A1==0 and A2==1 and A3==2
 0,0123 A1==0 and A2==0 and A4==2
 0,0118 A2==1 impl A3==0
 0,0114 A1==0 and A3==0
 0,0111 A1==1 xor A2==2
 0,0111 A1==1 equ A2==2
 0,0100 A1==2 or A2==1 or A4==0
 0,0100 A1==0 or A2==2 or A4==0
 0,0098 A1==2 and A2==2 and A4==2
 0,0098 A1==2 and A2==2 and A4==1
 0,0098 A1==2 and A2==2 and A3==1
 0,0098 A1==2 and A2==2 and A3==0
 0,0098 A1==2 and A2==1 and A4==1
 0,0098 A1==2 and A2==1 and A4==0
 0,0098 A1==2 and A2==1 and A3==1
 0,0098 A1==2 and A2==0 and A3==2
 0,0098 A1==0 and A2==2 and A4==2
 0,0098 A1==0 and A2==2 and A4==1
 0,0098 A1==0 and A2==1 and A4==2
 0,0098 A1==0 and A2==1 and A4==1
 0,0098 A1==0 and A2==1 and A4==0
 0,0098 A1==0 and A2==1 and A3==1
 0,0098 A1==0 and A2==0 and A4==0
 0,0098 A1==0 and A2==0 and A3==2
 0,0098 A1==0 and A2==0 and A3==1
 0,0098 A1==0 and A2==0 and A3==0
 0,0096 A2==2 impl A4==2
 0,0093 A2==1 and A3==0
 0,0093 A1==2 or A3==2
 0,0089 A1==0 or A2==1 or A3==1
 0,0077 A2==2 or A3==1
 0,0075 A1==2 and A2==1 and A4==2
 0,0075 A1==0 and A2==1 and A3==0
 0,0075 A1==0 and A2==0 and A4==1
 0,0070 A1==0 or A2==2 or A4==1
 0,0066 A2==1 impl A4==1
 0,0059 A1==0 or A4==2
 0,0053 A1==2 and A2==1 and A3==0
 0,0045 A2==1 impl A4==0
 0,0045 A2==1 impl A3==1
 0,0044 A1==2 xor A2==2
 0,0044 A1==2 equ A2==2
 0,0043 A1==2 or A2==0 or A4==2
 0,0039 A2==0 impl A3==2
 0,0034 A2==2 or A4==2
 0,0033 A2==2 xor A4==2
 0,0033 A2==2 equ A4==2
 0,0033 A1==0 or A3==1
 0,0032 A1==1 and A2==1
 0,0031 A2==0 impl A3==0
 0,0023 A1==2 or A4==0
 0,0010 A1==0 or A2==2 or A3==2
 0,0009 A2==0 or A4==0
 0,0005 A2==0 xor A3==2
 0,0005 A2==0 equ A3==2
 0,0003 A2==2 impl A3==2
 -0,0014 A1==2 xor A4==2
 -0,0014 A1==2 equ A4==2
 -0,0019 A2==2 impl A3==1
 -0,0025 A2==2 xor A3==1
 -0,0025 A2==2 equ A3==1
 -0,0025 A2==0 impl A4==2
 -0,0026 A2==0 xor A3==1
 -0,0026 A2==0 equ A3==1
 -0,0026 A1==0 xor A3==2
 -0,0026 A1==0 equ A3==2
 -0,0032 A1==2 or A2==0 or A3==2
 -0,0033 A2==2 impl A3==0
 -0,0034 A2==2 and A3==0
 -0,0035 A2==1 xor A3==0
 -0,0035 A2==1 equ A3==0
 -0,0036 A1==1 xor A4==2
 -0,0036 A1==1 equ A4==2
 -0,0037 A2==0 or A3==2
 -0,0038 A2==0 and A4==1
 -0,0049 A2==2 and A3==1
 -0,0050 A1==0 or A2==0 or A4==1
 -0,0050 A1==0 or A2==0 or A4==0
 -0,0054 A2==0 xor A4==0
 -0,0054 A2==0 equ A4==0
 -0,0054 A1==0 xor A2==0
 -0,0054 A1==0 equ A2==0
 -0,0054 A1==1 and A2==1 and A4==0
 -0,0054 A1==1 and A2==1 and A3==1
 -0,0055 A2==2 xor A4==0
 -0,0055 A2==2 equ A4==0
 -0,0056 A2==2 or A3==2
 -0,0057 A2==2 xor A4==1
 -0,0057 A2==2 equ A4==1
 -0,0057 A1==1 xor A3==2
 -0,0057 A1==1 equ A3==2
 -0,0060 A1==2 and A2==0 and A4==1
 -0,0060 A1==0 and A2==2 and A3==2
 -0,0060 A1==0 and A2==2 and A3==0
 -0,0060 A1==2 or A2==0 or A4==0
 -0,0060 A1==0 or A2==0 or A3==1
 -0,0062 A2==0 or A4==2
 -0,0062 A1==0 xor A4==1
 -0,0062 A1==0 equ A4==1
 -0,0064 A1==2 and A2==0 and A4==2
 -0,0064 A1==2 and A2==0 and A4==0
 -0,0064 A1==1 and A2==1 and A4==1
 -0,0064 A1==1 and A2==1 and A3==0
 -0,0064 A1==0 and A2==2 and A3==1
 -0,0065 A2==1 xor A4==1
 -0,0065 A2==1 equ A4==1
 -0,0065 A2==2 and A3==2
 -0,0065 A2==0 and A4==0
 -0,0069 A2==0 xor A4==2
 -0,0069 A2==0 equ A4==2
 -0,0071 A2==0 xor A4==1
 -0,0071 A2==0 equ A4==1
 -0,0071 A2==0 impl A4==0
 -0,0072 A2==2 or A4==1
 -0,0075 A1==0 or A2==2 or A4==2
 -0,0075 A2==0 xor A3==0
 -0,0075 A2==0 equ A3==0
 -0,0077 A1==2 xor A3==0
 -0,0077 A1==2 equ A3==0
 -0,0080 A2==1 xor A4==0
 -0,0080 A2==1 equ A4==0
 -0,0080 A2==0 and A3==2
 -0,0083 A1==0 or A2==0 or A3==0
 -0,0083 A2==1 and A3==2
 -0,0085 A2==1 xor A3==1
 -0,0085 A2==1 equ A3==1
 -0,0085 A1==0 or A2==0
 -0,0087 A2==0 and A3==0
 -0,0087 A1==2 or A2==2 or A3==1
 -0,0087 A1==0 or A2==2 or A3==1
 -0,0088 A2==0 impl A4==1
 -0,0089 A2==2 and A4==1
 -0,0089 A2==0 impl A3==1
 -0,0089 A2==1 and A4==2
 -0,0089 A2==0 and A4==2
 -0,0092 A2==2 and A4==2
 -0,0092 A1==2 and A3==1
 -0,0092 A1==0 and A4==0
 -0,0092 A1==0 and A2==2
 -0,0092 A2==2 or A4==0
 -0,0092 A1==2 and A2==0
 -0,0096 A2==0 or A3==0
 -0,0097 A1==2 or A2==2 or A3==2
 -0,0097 A1==2 or A2==2 or A4==0
 -0,0098 A2==2 xor A3==2
 -0,0098 A2==2 equ A3==2
 -0,0101 A2==1 or A3==1
 -0,0105 A1==2 or A2==2 or A4==1
 -0,0105 A1==2 or A2==2 or A3==0
 -0,0105 A2==1 or A4==0
 -0,0105 A1==2 or A2==2 or A4==2
 -0,0105 A1==0 or A2==0 or A4==2
 -0,0107 A2==2 impl A4==0
 -0,0113 A2==0 or A4==1
 -0,0113 A2==2 or A3==0
 -0,0113 A1==0 xor A3==1
 -0,0113 A1==0 equ A3==1
 -0,0114 A1==0 or A2==0 or A3==2
 -0,0115 A2==2 xor A3==0
 -0,0115 A2==2 equ A3==0
 -0,0115 A2==0 or A3==1
 -0,0116 A1==2 or A2==2
 -0,0117 A1==2 xor A4==0
 -0,0117 A1==2 equ A4==0
 -0,0118 A1==0 xor A4==2
 -0,0118 A1==0 equ A4==2
 -0,0119 A1==2 xor A3==2
 -0,0119 A1==2 equ A3==2
 -0,0164 A4
 -0,0180 A3
 -0,0208 A5
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.25
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.0
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.5
								--------------
									Fold  9
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,4756 A1_x_A2
 0,3947 A1_x_A3
 0,3838 A1==1 impl A2==1
 0,3789 (A1 = 1)
 0,3778 A1_x_A4
 0,3664 A1
 0,2795 num-of-N((A1 = 1) and (A2 = 2))
 0,2706 num-of-N((A1 = 1) and (A2 = 0))
 0,2684 A1==1 or A3==1
 0,2495 A1==1 impl A4==1
 0,2495 A1==1 impl A3==1
 0,2495 A1==1 impl A3==0
 0,2318 A1==1 or A4==0
 0,2277 num-of-N((A1 = 1) and (A3 = 2))
 0,2216 A1==1 impl A4==0
 0,2189 A1==1 or A2==2 or A3==1
 0,2108 num-of-N((A1 = 1) and (A4 = 2))
 0,1977 A1==1 or A2==2
 0,1960 A1==1 or A2==0 or A4==0
 0,1922 A1==1 or A2==0
 0,1825 A1==1 and A3==2
 0,1825 (A1 = 1) and (A3 = 2)
 0,1660 A1==1 and A2==2
 0,1660 (A1 = 1) and (A2 = 2)
 0,1579 A1==1 and A4==2
 0,1579 (A1 = 1) and (A4 = 2)
 0,1498 A1==1 and A2==0
 0,1498 (A1 = 1) and (A2 = 0)
 0,1492 A1==0 impl A4==0
 0,1476 A1==1 impl A2==0
 0,1451 A1==0 impl A2==2
 0,1400 A1==1 impl A4==2
 0,1372 A1==2 impl A3==1
 0,1325 A1==1 impl A2==2
 0,1294 A1==2 impl A2==0
 0,1232 A1==1 or A4==1
 0,1222 A1==0 or A2==1
 0,1219 A1==1 or A2==1 or A3==1
 0,1181 A1==1 impl A3==2
 0,1151 A1==1 or A4==2
 0,1151 A1==1 or A3==2
 0,1106 A1==1 or A2==0 or A3==2
 0,1069 A1==1 or A2==0 or A3==1
 0,1047 A1==1 xor A3==1
 0,1047 A1==1 equ A3==1
 0,1023 A1==1 or A2==2 or A4==2
 0,1023 A1==1 or A2==2 or A4==0
 0,1022 A1==1 or A3==0
 0,0987 A1==1 or A2==2 or A4==1
 0,0987 A1==2 or A2==1
 0,0917 A1==1 or A2==1 or A4==0
 0,0885 A1==0 or A2==1 or A3==0
 0,0882 A1==1 or A2==0 or A3==0
 0,0836 A1==1 or A2==1
 0,0810 A1==2 or A2==1 or A4==2
 0,0805 num-of-N((A3 = 1) and (A2 = 0) and (A1 = 2))
 0,0797 A1==0 or A2==1 or A3==2
 0,0765 A1==0 or A3==0
 0,0721 A1==1 or A2==0 or A4==1
 0,0690 A1==1 or A2==0 or A4==2
 0,0680 A1==1 xor A4==0
 0,0680 A1==1 equ A4==0
 0,0676 A1==2 or A2==1 or A4==1
 0,0661 A1==0 impl A3==1
 0,0647 A1==1 or A2==2 or A3==2
 0,0647 A1==1 or A2==2 or A3==0
 0,0636 A1==1 and A4==0
 0,0621 A1==0 or A2==1 or A4==2
 0,0619 A1==0 and A4==2
 0,0600 A1==0 impl A3==2
 0,0587 A1==0 and A2==0
 0,0581 A1==2 or A2==1 or A3==0
 0,0581 A1==0 or A2==1 or A4==1
 0,0579 A1==2 or A4==1
 0,0555 A1==2 and A3==0
 0,0555 A1==2 and A2==1
 0,0555 A1==0 and A4==1
 0,0555 A1==0 and A2==1
 0,0523 A1==2 and A3==2
 0,0519 num-of-N((A4 = 0) and (A2 = 2) and (A1 = 0))
 0,0507 A2==1 impl A4==2
 0,0507 A2==1 impl A3==2
 0,0503 A1==0 or A2==1 or A4==0
 0,0479 A1==0 impl A3==0
 0,0476 A1==2 and A2==0 and A3==1
 0,0476 A1==1 and A2==2 and A4==0
 0,0476 A1==1 and A2==2 and A3==2
 0,0476 A1==1 and A2==1 and A4==2
 0,0476 A1==1 and A2==1 and A3==2
 0,0476 A1==1 and A2==0 and A4==0
 0,0476 A1==1 and A2==0 and A3==2
 0,0476 (A3 = 1) and (A2 = 0) and (A1 = 2)
 0,0465 A1==0 or A4==1
 0,0463 A1==1 and A4==1
 0,0463 A1==1 and A3==1
 0,0463 A1==1 and A3==0
 0,0461 A1==2 and A2==2
 0,0451 A1==2 impl A4==2
 0,0451 A1==2 impl A4==1
 0,0444 A1==2 or A2==1 or A3==1
 0,0437 A1==2 or A3==0
 0,0411 A1==1 and A2==2 and A4==2
 0,0411 A1==1 and A2==2 and A4==1
 0,0411 A1==1 and A2==2 and A3==1
 0,0411 A1==1 and A2==2 and A3==0
 0,0406 A1==0 or A4==0
 0,0382 A1==0 xor A2==1
 0,0382 A1==0 equ A2==1
 0,0378 A1==0 or A2==2 or A3==0
 0,0371 A1==2 impl A4==0
 0,0355 A1==2 xor A3==1
 0,0355 A1==2 equ A3==1
 0,0351 A1==1 xor A2==1
 0,0351 A1==1 equ A2==1
 0,0347 A1==1 and A2==0 and A4==2
 0,0347 A1==1 and A2==0 and A4==1
 0,0347 A1==1 and A2==0 and A3==1
 0,0347 A1==1 and A2==0 and A3==0
 0,0347 A1==0 and A2==2 and A4==0
 0,0347 (A4 = 0) and (A2 = 2) and (A1 = 0)
 0,0343 A1==2 or A3==1
 0,0340 A1==2 or A2==1 or A3==2
 0,0337 A1==0 xor A4==0
 0,0337 A1==0 equ A4==0
 0,0334 A1==2 or A2==0 or A4==1
 0,0326 A1==0 impl A4==1
 0,0326 A1==0 impl A2==1
 0,0315 A1==0 and A3==0
 0,0302 A1==0 impl A2==0
 0,0300 A1==1 xor A4==1
 0,0300 A1==1 equ A4==1
 0,0278 A1==0 impl A4==2
 0,0276 A2==1 or A3==0
 0,0266 A2==1 xor A4==2
 0,0266 A2==1 equ A4==2
 0,0260 A1==1 or A2==1 or A4==1
 0,0251 A2==2 and A4==0
 0,0251 A2==0 and A3==1
 0,0244 A1==2 xor A2==1
 0,0244 A1==2 equ A2==1
 0,0243 A2==1 or A4==2
 0,0228 A1==2 impl A2==2
 0,0224 A1==1 xor A2==0
 0,0224 A1==1 equ A2==0
 0,0222 A1==0 xor A3==0
 0,0222 A1==0 equ A3==0
 0,0219 A2
 0,0214 A1==2 or A2==0
 0,0211 A1==2 or A2==0 or A3==0
 0,0207 A2_x_A3
 0,0205 A1==1 xor A2==2
 0,0205 A1==1 equ A2==2
 0,0201 A1==2 xor A4==1
 0,0201 A1==2 equ A4==1
 0,0198 A1==2 or A4==2
 0,0198 A1==1 xor A3==0
 0,0198 A1==1 equ A3==0
 0,0185 A1==2 impl A3==2
 0,0180 A1==2 xor A2==0
 0,0180 A1==2 equ A2==0
 0,0179 A2==1 and A4==1
 0,0179 A2==1 and A3==1
 0,0179 A1==2 and A4==0
 0,0179 A1==0 and A3==2
 0,0176 A1==1 or A2==1 or A4==2
 0,0176 A1==1 or A2==1 or A3==2
 0,0171 A1==0 or A2==2
 0,0165 A1==2 impl A3==0
 0,0165 A1==2 impl A2==1
 0,0164 A1==0 or A2==1 or A3==1
 0,0157 A2==1 or A4==1
 0,0157 A2==1 and A4==0
 0,0157 A2==1 and A3==0
 0,0152 A1==0 or A2==2 or A4==1
 0,0150 A2==1 xor A3==2
 0,0150 A2==1 equ A3==2
 0,0143 A1==0 or A3==2
 0,0141 A1==2 or A2==0 or A3==1
 0,0140 A2_x_A4
 0,0136 A2==1 or A3==2
 0,0135 A1==0 and A3==1
 0,0130 A1==1 or A2==1 or A3==0
 0,0127 A2==2 impl A4==2
 0,0124 A1==0 or A3==1
 0,0123 A1==2 and A2==1 and A4==0
 0,0123 A1==2 and A2==1 and A3==1
 0,0123 A1==2 and A2==1 and A3==0
 0,0123 A1==2 and A2==0 and A3==2
 0,0123 A1==2 and A2==0 and A3==0
 0,0123 A1==0 and A2==2 and A4==2
 0,0123 A1==0 and A2==1 and A4==1
 0,0123 A1==0 and A2==1 and A3==2
 0,0123 A1==0 and A2==0 and A4==2
 0,0123 A1==0 and A2==0 and A3==2
 0,0114 A1==2 and A4==2
 0,0114 A1==2 and A4==1
 0,0110 A1==0 or A2==2 or A4==0
 0,0109 A1==0 xor A2==2
 0,0109 A1==0 equ A2==2
 0,0098 A2==2 xor A4==2
 0,0098 A2==2 equ A4==2
 0,0098 A1==2 and A2==2 and A4==0
 0,0098 A1==2 and A2==2 and A3==2
 0,0098 A1==2 and A2==1 and A4==1
 0,0098 A1==0 and A2==1 and A4==2
 0,0098 A1==0 and A2==1 and A3==1
 0,0098 A1==0 and A2==0 and A4==1
 0,0098 A1==0 and A2==0 and A4==0
 0,0098 A1==0 and A2==0 and A3==1
 0,0098 A1==0 and A2==0 and A3==0
 0,0093 A2==0 xor A3==2
 0,0093 A2==0 equ A3==2
 0,0088 A1==0 or A4==2
 0,0075 A1==2 and A2==2 and A4==2
 0,0075 A1==2 and A2==2 and A3==1
 0,0075 A1==2 and A2==1 and A4==2
 0,0075 A1==0 and A2==2 and A4==1
 0,0075 A1==0 and A2==1 and A4==0
 0,0075 A1==0 and A2==1 and A3==0
 0,0067 A1==1 and A2==1
 0,0066 A2==2 or A4==2
 0,0062 A2==0 or A3==2
 0,0058 A2==2 impl A4==1
 0,0053 A1==2 and A2==2 and A4==1
 0,0053 A1==2 and A2==2 and A3==0
 0,0053 A1==2 and A2==1 and A3==2
 0,0052 A1==2 or A2==1 or A4==0
 0,0051 A2==2 or A3==1
 0,0046 A2==0 impl A3==0
 0,0026 A2==1 impl A4==0
 0,0026 A2==1 impl A3==0
 0,0018 A1==2 or A2==0 or A4==2
 0,0013 A2==2 impl A3==0
 0,0013 A2==0 impl A3==2
 0,0012 A2==1 impl A4==1
 0,0012 A2==1 impl A3==1
 -0,0002 A2==2 or A3==2
 -0,0004 A1==2 or A4==0
 -0,0005 A1==0 or A2==0 or A3==1
 -0,0013 A1==0 or A2==0 or A4==0
 -0,0016 A2==1 xor A3==0
 -0,0016 A2==1 equ A3==0
 -0,0016 A2==0 or A4==0
 -0,0016 A1==0 xor A4==1
 -0,0016 A1==0 equ A4==1
 -0,0018 A1==0 and A2==2 and A3==0
 -0,0019 A1==0 or A2==0 or A3==0
 -0,0022 A1==2 or A3==2
 -0,0024 A2==0 xor A3==1
 -0,0024 A2==0 equ A3==1
 -0,0027 A1==2 xor A3==0
 -0,0027 A1==2 equ A3==0
 -0,0028 A1==1 xor A4==2
 -0,0028 A1==1 equ A4==2
 -0,0031 A2==2 impl A3==1
 -0,0032 A1==0 or A2==0 or A4==1
 -0,0034 A2==2 and A3==2
 -0,0035 A1==2 xor A4==2
 -0,0035 A1==2 equ A4==2
 -0,0037 A2==2 impl A3==2
 -0,0038 A2==2 and A3==1
 -0,0044 A2==2 xor A3==1
 -0,0044 A2==2 equ A3==1
 -0,0047 A1==2 xor A2==2
 -0,0047 A1==2 equ A2==2
 -0,0049 A2==0 and A4==0
 -0,0051 A2==0 impl A4==2
 -0,0054 A1==0 or A2==0
 -0,0055 A1==0 or A2==2 or A3==2
 -0,0060 A1==0 and A2==2 and A3==2
 -0,0060 A1==0 and A2==2 and A3==1
 -0,0060 A1==2 or A2==2 or A4==1
 -0,0062 A2==0 impl A4==1
 -0,0064 A2==0 or A4==2
 -0,0064 A1==2 and A2==0 and A4==2
 -0,0064 A1==2 and A2==0 and A4==1
 -0,0064 A1==2 and A2==0 and A4==0
 -0,0064 A1==1 and A2==1 and A4==1
 -0,0064 A1==1 and A2==1 and A4==0
 -0,0064 A1==1 and A2==1 and A3==1
 -0,0064 A1==1 and A2==1 and A3==0
 -0,0069 A2==1 xor A3==1
 -0,0069 A2==1 equ A3==1
 -0,0070 A1==2 or A2==2 or A3==1
 -0,0070 A1==2 or A2==0 or A4==0
 -0,0070 A1==0 or A2==2 or A3==1
 -0,0070 A2==2 and A3==0
 -0,0075 A2==0 and A3==0
 -0,0077 A2==0 and A4==1
 -0,0078 A1==1 xor A3==2
 -0,0078 A1==1 equ A3==2
 -0,0078 A1==0 xor A2==0
 -0,0078 A1==0 equ A2==0
 -0,0078 A1==0 xor A3==1
 -0,0078 A1==0 equ A3==1
 -0,0078 A1==2 or A2==2 or A3==0
 -0,0080 A2==1 xor A4==1
 -0,0080 A2==1 equ A4==1
 -0,0080 A2==1 xor A4==0
 -0,0080 A2==1 equ A4==0
 -0,0080 A1==0 and A2==2
 -0,0083 A2==2 xor A3==2
 -0,0083 A2==2 equ A3==2
 -0,0084 A1==0 and A4==0
 -0,0084 A2==2 or A4==0
 -0,0084 A2==0 and A4==2
 -0,0085 A2==0 xor A4==2
 -0,0085 A2==0 xor A4==0
 -0,0085 A2==0 equ A4==2
 -0,0085 A2==0 equ A4==0
 -0,0085 A2==2 and A4==1
 -0,0085 A2==2 xor A4==0
 -0,0085 A2==2 equ A4==0
 -0,0085 A1==0 xor A3==2
 -0,0085 A1==0 equ A3==2
 -0,0086 A1==0 or A2==2 or A4==2
 -0,0087 A1==2 or A2==0 or A3==2
 -0,0088 A2==0 impl A4==0
 -0,0089 A2==2 and A4==2
 -0,0089 A2==1 and A4==2
 -0,0089 A2==1 and A3==2
 -0,0090 A2==0 impl A3==1
 -0,0091 A1==2 or A2==2 or A3==2
 -0,0091 A2==0 and A3==2
 -0,0091 A1==2 and A2==0
 -0,0092 A1==2 and A3==1
 -0,0099 A1==2 or A2==2 or A4==0
 -0,0104 A3
 -0,0105 A1==2 or A2==2 or A4==2
 -0,0106 A2==0 xor A4==1
 -0,0106 A2==0 equ A4==1
 -0,0106 A1==2 or A2==2
 -0,0107 A2==2 impl A4==0
 -0,0107 A1==2 xor A3==2
 -0,0107 A1==2 equ A3==2
 -0,0108 A2==1 or A4==0
 -0,0109 A1==0 or A2==0 or A3==2
 -0,0109 A2==2 or A4==1
 -0,0109 A2==1 or A3==1
 -0,0109 A2==0 xor A3==0
 -0,0109 A2==0 equ A3==0
 -0,0110 A2==2 xor A3==0
 -0,0110 A2==2 equ A3==0
 -0,0113 A2==2 xor A4==1
 -0,0113 A2==2 equ A4==1
 -0,0113 A1==0 or A2==0 or A4==2
 -0,0116 A2==0 or A3==1
 -0,0117 A2==0 or A4==1
 -0,0119 A1==0 xor A4==2
 -0,0119 A1==0 equ A4==2
 -0,0119 A2==2 or A3==0
 -0,0120 A1==2 xor A4==0
 -0,0120 A1==2 equ A4==0
 -0,0120 A2==0 or A3==0
 -0,0151 A4
 -0,0224 A5
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.25
MDL (param. search)
The best parameter when using FURIA: MDL@0.5
MDL (param. search)
The best parameter when using RandomForest: MDL@0.5
								--------------
									Fold 10
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,4854 A1_x_A2
 0,3838 A1==1 impl A2==1
 0,3813 A1_x_A3
 0,3808 A1_x_A4
 0,3772 (A1 = 1)
 0,3639 A1
 0,2915 num-of-N((A1 = 1) and (A2 = 0))
 0,2622 num-of-N((A1 = 1) and (A2 = 2))
 0,2523 A1==1 or A3==1
 0,2485 A1==1 or A4==0
 0,2431 A1==1 impl A4==0
 0,2431 A1==1 impl A3==0
 0,2400 A1==1 impl A4==1
 0,2216 A1==1 impl A3==1
 0,2189 A1==1 or A2==2 or A3==1
 0,2189 A1==1 or A2==0 or A4==0
 0,2144 num-of-N((A1 = 1) and (A4 = 2))
 0,2048 A1==1 or A2==0
 0,1992 num-of-N((A1 = 1) and (A3 = 2))
 0,1925 A1==1 or A2==2
 0,1742 A1==1 and A2==0
 0,1742 (A1 = 1) and (A2 = 0)
 0,1660 A1==1 and A4==2
 0,1660 (A1 = 1) and (A4 = 2)
 0,1556 A1==1 impl A2==2
 0,1498 A1==1 and A3==2
 0,1498 (A1 = 1) and (A3 = 2)
 0,1492 A1==2 impl A2==0
 0,1478 A1==1 impl A3==2
 0,1451 A1==2 impl A3==1
 0,1419 A1==1 and A2==2
 0,1419 (A1 = 1) and (A2 = 2)
 0,1411 A1==0 impl A4==0
 0,1411 A1==0 impl A2==2
 0,1327 A1==1 impl A4==2
 0,1254 A1==1 impl A2==0
 0,1191 A1==2 or A2==1
 0,1177 A1==0 or A2==1
 0,1144 A1==1 or A4==2
 0,1100 A1==1 or A3==2
 0,1098 A1==1 or A2==0 or A3==1
 0,1065 A1==1 or A3==0
 0,1061 A1==1 or A2==0 or A3==0
 0,1060 A1==1 or A2==2 or A4==0
 0,1027 A1==1 or A4==1
 0,1023 A1==1 or A2==0 or A3==2
 0,0953 A1==1 or A2==1 or A3==1
 0,0952 A1==1 or A2==2 or A4==2
 0,0952 A1==1 or A2==2 or A4==1
 0,0918 A1==1 xor A4==0
 0,0918 A1==1 equ A4==0
 0,0917 A1==1 or A2==1 or A4==0
 0,0885 A1==0 or A2==1 or A3==2
 0,0810 A1==2 or A2==1 or A4==2
 0,0810 A1==2 or A2==1 or A4==1
 0,0802 A1==1 xor A3==1
 0,0802 A1==1 equ A3==1
 0,0778 A1==0 or A2==1 or A3==0
 0,0762 A1==1 or A2==0 or A4==2
 0,0699 A1==1 or A2==1
 0,0692 num-of-N((A4 = 0) and (A2 = 2) and (A1 = 0))
 0,0652 A1==1 and A3==1
 0,0647 A1==1 or A2==2 or A3==2
 0,0645 A1==2 or A4==1
 0,0636 A1==1 or A2==0 or A4==1
 0,0623 num-of-N((A3 = 1) and (A2 = 0) and (A1 = 2))
 0,0619 A1==2 and A2==1
 0,0607 A1==0 or A2==1 or A4==1
 0,0595 A1==2 or A2==1 or A3==0
 0,0594 A2==1 impl A4==2
 0,0587 A1==1 or A2==2 or A3==0
 0,0587 A1==2 and A3==2
 0,0587 A1==0 and A2==1
 0,0581 A1==2 or A2==1 or A3==2
 0,0579 A1==0 or A3==0
 0,0555 A1==2 and A3==0
 0,0555 A1==2 and A2==2
 0,0555 A1==0 and A4==2
 0,0555 A1==0 and A4==1
 0,0532 A1==1 and A4==1
 0,0529 A1==0 or A2==1 or A4==2
 0,0523 A1==0 and A2==0
 0,0519 A1==1 and A4==0
 0,0519 A1==1 and A3==0
 0,0507 A2==1 impl A3==2
 0,0507 A1==2 impl A4==2
 0,0507 A1==2 impl A4==0
 0,0506 A1==0 impl A3==1
 0,0503 A1==2 or A2==1 or A3==1
 0,0493 A1==0 or A2==1 or A4==0
 0,0479 A1==0 impl A3==2
 0,0476 A1==2 and A2==0 and A3==1
 0,0476 A1==1 and A2==1 and A4==2
 0,0476 A1==1 and A2==0 and A4==2
 0,0476 A1==1 and A2==0 and A4==0
 0,0476 A1==1 and A2==0 and A3==2
 0,0476 A1==1 and A2==0 and A3==1
 0,0476 (A3 = 1) and (A2 = 0) and (A1 = 2)
 0,0450 A1==0 impl A3==0
 0,0445 A1==0 or A4==1
 0,0434 A1==2 or A3==0
 0,0424 A1==0 or A2==2 or A3==0
 0,0424 A1==2 impl A4==1
 0,0411 A1==1 and A2==2 and A4==1
 0,0411 A1==1 and A2==2 and A3==1
 0,0411 A1==1 and A2==2 and A3==0
 0,0411 A1==1 and A2==1 and A3==2
 0,0411 A1==1 and A2==0 and A4==1
 0,0411 A1==1 and A2==0 and A3==0
 0,0411 A1==0 and A2==2 and A4==0
 0,0411 (A4 = 0) and (A2 = 2) and (A1 = 0)
 0,0347 A1==1 and A2==2 and A4==2
 0,0347 A1==1 and A2==2 and A4==0
 0,0346 A2==0 and A3==1
 0,0343 A1==0 or A4==0
 0,0332 A1==0 xor A4==0
 0,0332 A1==0 xor A2==1
 0,0332 A1==0 equ A4==0
 0,0332 A1==0 equ A2==1
 0,0324 A2
 0,0310 A1==2 xor A2==1
 0,0310 A1==2 equ A2==1
 0,0308 A1==2 or A3==1
 0,0300 A1==1 xor A2==2
 0,0300 A1==1 equ A2==2
 0,0286 A1==2 xor A3==1
 0,0286 A1==2 equ A3==1
 0,0285 A1==1 and A2==2 and A3==2
 0,0280 A1==2 or A2==0 or A4==1
 0,0276 A2==1 or A3==2
 0,0276 A1==1 xor A2==1
 0,0276 A1==1 equ A2==1
 0,0269 A1==0 or A2==2
 0,0266 A2==1 or A4==1
 0,0263 A2==1 and A4==1
 0,0262 A1==0 xor A2==2
 0,0262 A1==0 equ A2==2
 0,0260 A2_x_A4
 0,0252 A1==0 or A3==2
 0,0249 A1==0 or A2==2 or A4==1
 0,0243 A2==1 or A3==0
 0,0240 A1==0 impl A2==0
 0,0231 A2_x_A3
 0,0228 A1==2 impl A3==0
 0,0228 A1==2 impl A2==2
 0,0220 A2==1 xor A3==2
 0,0220 A2==1 equ A3==2
 0,0220 A2==1 or A4==2
 0,0218 A1==0 impl A4==2
 0,0218 A1==0 impl A4==1
 0,0206 A1==2 impl A3==2
 0,0206 A2==2 and A4==0
 0,0202 A2==1 and A3==0
 0,0202 A1==2 and A4==1
 0,0201 A2==1 xor A4==2
 0,0201 A2==1 equ A4==2
 0,0196 A1==0 impl A2==1
 0,0185 A1==2 impl A2==1
 0,0184 A1==2 or A4==2
 0,0184 A1==1 xor A2==0
 0,0184 A1==1 equ A2==0
 0,0179 A1==0 and A3==0
 0,0179 A2==0 impl A3==0
 0,0177 A1==2 or A2==1 or A4==0
 0,0177 A1==1 xor A3==0
 0,0177 A1==1 equ A3==0
 0,0171 A1==1 xor A4==1
 0,0171 A1==1 equ A4==1
 0,0165 A1==0 and A3==2
 0,0162 A1==2 xor A4==1
 0,0162 A1==2 equ A4==1
 0,0157 A2==1 and A4==0
 0,0152 A1==0 or A2==2 or A4==0
 0,0152 A1==1 or A2==1 or A4==2
 0,0143 A1==0 xor A3==0
 0,0143 A1==0 equ A3==0
 0,0135 A2==1 and A3==1
 0,0135 A1==2 and A4==2
 0,0135 A1==2 and A4==0
 0,0135 A1==0 and A3==1
 0,0133 A1==1 or A2==1 or A3==0
 0,0130 A1==1 or A2==1 or A3==2
 0,0130 A1==2 or A2==0
 0,0129 A1==2 xor A2==0
 0,0129 A1==2 equ A2==0
 0,0123 A1==2 and A2==2 and A4==1
 0,0123 A1==2 and A2==2 and A3==1
 0,0123 A1==2 and A2==1 and A4==1
 0,0123 A1==2 and A2==1 and A4==0
 0,0123 A1==2 and A2==1 and A3==2
 0,0123 A1==2 and A2==1 and A3==0
 0,0123 A1==0 and A2==1 and A4==2
 0,0123 A1==0 and A2==1 and A4==1
 0,0123 A1==0 and A2==1 and A3==0
 0,0121 A1==0 or A2==1 or A3==1
 0,0119 A2==0 impl A3==2
 0,0115 A1==1 or A2==1 or A4==1
 0,0111 A2==1 impl A3==1
 0,0111 A1==2 or A2==0 or A3==0
 0,0098 A1==2 and A2==2 and A4==0
 0,0098 A1==2 and A2==2 and A3==2
 0,0098 A1==2 and A2==1 and A4==2
 0,0098 A1==2 and A2==1 and A3==1
 0,0098 A1==2 and A2==0 and A3==2
 0,0098 A1==2 and A2==0 and A3==0
 0,0098 A1==0 and A2==2 and A4==1
 0,0098 A1==0 and A2==1 and A3==2
 0,0098 A1==0 and A2==1 and A3==1
 0,0098 A1==0 and A2==0 and A4==2
 0,0098 A1==0 and A2==0 and A4==0
 0,0098 A1==0 and A2==0 and A3==1
 0,0098 A1==0 and A2==0 and A3==0
 0,0094 A2==0 or A4==0
 0,0094 A2==1 impl A4==0
 0,0088 A1==2 or A3==2
 0,0075 A1==2 and A2==2 and A4==2
 0,0075 A1==2 and A2==2 and A3==0
 0,0075 A1==0 and A2==2 and A4==2
 0,0075 A1==0 and A2==1 and A4==0
 0,0075 A1==0 and A2==0 and A4==1
 0,0075 A1==0 and A2==0 and A3==2
 0,0064 A1==2 or A4==0
 0,0063 A1==1 and A2==1
 0,0060 A2==1 impl A3==0
 0,0052 A1==0 or A2==2 or A3==2
 0,0052 A1==2 or A2==0 or A3==1
 0,0051 A2==2 or A3==1
 0,0051 A2==0 or A3==2
 0,0044 A2==2 xor A4==2
 0,0044 A2==2 equ A4==2
 0,0043 A2==2 impl A4==1
 0,0041 A2==1 impl A4==1
 0,0038 A2==0 xor A3==2
 0,0038 A2==0 equ A3==2
 0,0022 A2==2 or A4==2
 0,0022 A2==0 or A4==2
 0,0020 A2==0 impl A4==1
 0,0019 A1==0 xor A2==0
 0,0019 A1==0 or A4==2
 0,0019 A1==0 equ A2==0
 0,0013 A2==2 impl A4==2
 0,0013 A2==0 impl A4==2
 0,0009 A1==0 or A3==1
 -0,0013 A1==1 xor A3==2
 -0,0013 A1==1 equ A3==2
 -0,0014 A1==0 xor A3==2
 -0,0014 A1==0 equ A3==2
 -0,0017 A2==0 and A4==0
 -0,0019 A2==0 impl A4==0
 -0,0019 A1==2 or A2==2 or A3==0
 -0,0022 A2==2 xor A3==1
 -0,0022 A2==2 equ A3==1
 -0,0025 A1==2 or A2==2 or A4==1
 -0,0026 A1==0 xor A4==1
 -0,0026 A1==0 equ A4==1
 -0,0026 A1==2 or A2==0 or A4==2
 -0,0033 A1==2 xor A3==0
 -0,0033 A1==2 equ A3==0
 -0,0036 A2==0 xor A4==0
 -0,0036 A2==0 equ A4==0
 -0,0039 A2==2 impl A3==2
 -0,0044 A1==1 xor A4==2
 -0,0044 A1==1 equ A4==2
 -0,0049 A2==0 and A4==2
 -0,0051 A1==2 and A2==0 and A4==0
 -0,0053 A2==2 and A3==0
 -0,0053 A2==0 and A4==1
 -0,0053 A2==1 xor A4==1
 -0,0053 A2==1 equ A4==1
 -0,0053 A1==2 xor A4==2
 -0,0053 A1==2 equ A4==2
 -0,0053 A1==0 and A2==2 and A3==2
 -0,0054 A1==1 and A2==1 and A4==1
 -0,0055 A2==1 xor A3==0
 -0,0055 A2==1 equ A3==0
 -0,0060 A1==1 and A2==1 and A3==1
 -0,0060 A1==0 and A2==2 and A3==1
 -0,0060 A1==2 or A2==2 or A4==0
 -0,0060 A1==2 or A2==2 or A3==1
 -0,0061 A2==0 xor A4==2
 -0,0061 A2==0 equ A4==2
 -0,0064 A2==2 xor A3==0
 -0,0064 A2==2 equ A3==0
 -0,0064 A2==0 or A3==1
 -0,0064 A1==2 and A2==0 and A4==2
 -0,0064 A1==2 and A2==0 and A4==1
 -0,0064 A1==1 and A2==1 and A4==0
 -0,0064 A1==1 and A2==1 and A3==0
 -0,0064 A1==0 and A2==2 and A3==0
 -0,0065 A2==2 and A3==1
 -0,0066 A2==0 xor A3==0
 -0,0066 A2==0 equ A3==0
 -0,0066 A2==2 impl A3==1
 -0,0069 A2==2 or A3==2
 -0,0069 A1==2 xor A2==2
 -0,0069 A1==2 equ A2==2
 -0,0070 A1==2 or A2==0 or A3==2
 -0,0070 A1==0 or A2==2 or A4==2
 -0,0071 A1==0 or A2==0 or A4==2
 -0,0072 A1==2 or A2==2
 -0,0072 A2==2 xor A4==0
 -0,0072 A2==2 equ A4==0
 -0,0075 A2==2 impl A3==0
 -0,0078 A2==0 xor A3==1
 -0,0078 A2==0 equ A3==1
 -0,0078 A1==0 or A2==2 or A3==1
 -0,0080 A2==0 or A3==0
 -0,0080 A2==2 and A3==2
 -0,0085 A2==2 xor A3==2
 -0,0085 A2==2 equ A3==2
 -0,0086 A2==2 and A4==2
 -0,0087 A2==2 and A4==1
 -0,0087 A2==1 and A3==2
 -0,0087 A1==2 or A2==0 or A4==0
 -0,0087 A1==0 or A2==0 or A4==1
 -0,0087 A1==0 or A2==0 or A4==0
 -0,0089 A2==0 and A3==0
 -0,0089 A1==0 and A4==0
 -0,0089 A1==0 and A2==2
 -0,0089 A2==0 and A3==2
 -0,0090 A2==1 or A4==0
 -0,0092 A1==2 and A2==0
 -0,0092 A2==1 and A4==2
 -0,0092 A1==2 and A3==1
 -0,0098 A2==1 or A3==1
 -0,0098 A2==2 impl A4==0
 -0,0099 A2==1 xor A3==1
 -0,0099 A2==1 equ A3==1
 -0,0101 A1==2 xor A4==0
 -0,0101 A1==2 equ A4==0
 -0,0101 A2==1 xor A4==0
 -0,0101 A2==1 equ A4==0
 -0,0102 A1==0 or A2==0 or A3==1
 -0,0102 A1==0 or A2==0 or A3==0
 -0,0105 A2==2 or A4==0
 -0,0105 A1==0 or A2==0 or A3==2
 -0,0106 A2==2 or A3==0
 -0,0108 A2==0 impl A3==1
 -0,0109 A2==0 xor A4==1
 -0,0109 A2==0 equ A4==1
 -0,0111 A1==2 or A2==2 or A4==2
 -0,0111 A1==2 or A2==2 or A3==2
 -0,0114 A2==2 xor A4==1
 -0,0114 A2==2 equ A4==1
 -0,0115 A1==0 xor A4==2
 -0,0115 A1==0 equ A4==2
 -0,0115 A1==0 xor A3==1
 -0,0115 A1==0 equ A3==1
 -0,0117 A1==0 or A2==0
 -0,0120 A2==0 or A4==1
 -0,0120 A1==2 xor A3==2
 -0,0120 A1==2 equ A3==2
 -0,0120 A2==2 or A4==1
 -0,0123 A4
 -0,0129 A3
 -0,0208 A5
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.25
MDL (param. search)
The best parameter when using SMO: MDL@0.25
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.25
MDL (param. search)
The best parameter when using RandomForest: MDL@0.5
dataset: cDisjunct.arff
								--------------
									Fold  1
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,7464 (A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7)
 0,7381 num-of-N((A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7))
 0,4942 (A1 <= 0.5) and (A3 >= 0.4)
 0,4897 num-of-N((A1 <= 0.5) and (A3 >= 0.4))
 0,4854 A1_x_A3
 0,3954 A1==B2of2 or A2==B2of2
 0,3869 A1_x_A2
 0,3215 A2_x_A3
 0,3073 A1 SUBTRACT A3
 0,2950 A3 DIVIDE A1
 0,2950 A1 DIVIDE A3
 0,2605 A1==B2of2 xor A3==B2of2
 0,2605 A1==B2of2 equ A3==B2of2
 0,2460 A1==B2of2 xor A2==B2of2
 0,2460 A1==B2of2 equ A2==B2of2
 0,2457 A1 LESSTHAN A3
 0,2434 A1
 0,2178 A2==B2of2 xor A3==B2of2
 0,2178 A2==B2of2 equ A3==B2of2
 0,1894 A3
 0,1769 A2 SUBTRACT A3
 0,1722 A1 ADD A2
 0,1706 A3 DIVIDE A2
 0,1706 A2 DIVIDE A3
 0,1610 A2 LESSTHAN A3
 0,1446 A1==B2of2 impl A2==B2of2
 0,1373 A1 MULTIPLY A2
 0,1244 A2
 0,1194 A1==B2of2 and A3==B2of2
 0,1142 A2==B2of2 or A3==B2of2
 0,0825 A1==B2of2 or A3==B2of2
 0,0728 A1==B2of2 impl A3==B2of2
 0,0647 A1 MULTIPLY A3
 0,0623 A2==B2of2 and A3==B2of2
 0,0528 A1==B2of2 and A2==B2of2
 0,0521 A1==B2of2 or A2==B2of2 or A3==B2of2
 0,0505 A1 ADD A3
 0,0489 A1 SUBTRACT A2
 0,0450 A2==B2of2 impl A3==B2of2
 0,0336 A2 ADD A3
 0,0286 A1==B2of2 and A2==B2of2 and A3==B2of2
 0,0224 A2 DIVIDE A1
 0,0224 A1 DIVIDE A2
 0,0209 A2 MULTIPLY A3
 0,0161 A1 LESSTHAN A2
 0,0010 A1 DIFF A2
 0,0003 A5
 0,0002 A1 DIFF A3
 -0,0007 A4
 -0,0011 A2 DIFF A3
MDL (param. search)
The best parameter when using J48: MDL@0.25
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.25
MDL (param. search)
The best parameter when using SMO: MDL@0.5
MDL (param. search)
The best parameter when using IBk: MDL@0.25
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.5
								--------------
									Fold  2
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,7464 (A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7)
 0,7381 num-of-N((A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7))
 0,4851 (A1 <= 0.5) and (A3 >= 0.4)
 0,4806 num-of-N((A1 <= 0.5) and (A3 >= 0.4))
 0,4763 A1_x_A3
 0,4005 A1==B2of2 or A2==B2of2
 0,3920 A1_x_A2
 0,3191 A2_x_A3
 0,2964 A1 SUBTRACT A3
 0,2903 A3 DIVIDE A1
 0,2903 A1 DIVIDE A3
 0,2563 A1==B2of2 xor A3==B2of2
 0,2563 A1==B2of2 equ A3==B2of2
 0,2487 A1==B2of2 xor A2==B2of2
 0,2487 A1==B2of2 equ A2==B2of2
 0,2417 A1
 0,2415 A1 LESSTHAN A3
 0,2119 A2==B2of2 xor A3==B2of2
 0,2119 A2==B2of2 equ A3==B2of2
 0,1876 A3
 0,1802 A1 ADD A2
 0,1754 A2 SUBTRACT A3
 0,1699 A3 DIVIDE A2
 0,1699 A2 DIVIDE A3
 0,1601 A2 LESSTHAN A3
 0,1430 A1==B2of2 impl A2==B2of2
 0,1365 A1 MULTIPLY A2
 0,1280 A2
 0,1182 A1==B2of2 and A3==B2of2
 0,1097 A2==B2of2 or A3==B2of2
 0,0812 A1==B2of2 or A3==B2of2
 0,0728 A1==B2of2 impl A3==B2of2
 0,0633 A1 MULTIPLY A3
 0,0625 A2==B2of2 and A3==B2of2
 0,0531 A1==B2of2 and A2==B2of2
 0,0510 A1 ADD A3
 0,0505 A1==B2of2 or A2==B2of2 or A3==B2of2
 0,0496 A1 SUBTRACT A2
 0,0475 A2==B2of2 impl A3==B2of2
 0,0330 A2 ADD A3
 0,0269 A1==B2of2 and A2==B2of2 and A3==B2of2
 0,0215 A2 MULTIPLY A3
 0,0202 A2 DIVIDE A1
 0,0202 A1 DIVIDE A2
 0,0146 A1 LESSTHAN A2
 0,0001 A1 DIFF A2
 0,0000 A1 DIFF A3
 0,0000 A5
 -0,0007 A4
 -0,0011 A2 DIFF A3
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.25
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.25
MDL (param. search)
The best parameter when using RandomForest: MDL@0.5
								--------------
									Fold  3
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,7464 (A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7)
 0,7381 num-of-N((A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7))
 0,4871 (A1 <= 0.5) and (A3 >= 0.4)
 0,4826 num-of-N((A1 <= 0.5) and (A3 >= 0.4))
 0,4783 A1_x_A3
 0,3983 A1==B2of2 or A2==B2of2
 0,3898 A1_x_A2
 0,3256 A2_x_A3
 0,2853 A1 SUBTRACT A3
 0,2786 A3 DIVIDE A1
 0,2786 A1 DIVIDE A3
 0,2523 A1==B2of2 xor A3==B2of2
 0,2523 A1==B2of2 equ A3==B2of2
 0,2465 A1==B2of2 xor A2==B2of2
 0,2465 A1==B2of2 equ A2==B2of2
 0,2434 A1
 0,2394 A1 LESSTHAN A3
 0,2190 A2==B2of2 xor A3==B2of2
 0,2190 A2==B2of2 equ A3==B2of2
 0,1909 A3
 0,1815 A2 SUBTRACT A3
 0,1784 A1 ADD A2
 0,1756 A3 DIVIDE A2
 0,1756 A2 DIVIDE A3
 0,1656 A2 LESSTHAN A3
 0,1436 A1==B2of2 impl A2==B2of2
 0,1350 A1 MULTIPLY A2
 0,1265 A2
 0,1162 A1==B2of2 and A3==B2of2
 0,1142 A2==B2of2 or A3==B2of2
 0,0807 A1==B2of2 or A3==B2of2
 0,0756 A1==B2of2 impl A3==B2of2
 0,0630 A2==B2of2 and A3==B2of2
 0,0604 A1 MULTIPLY A3
 0,0535 A1==B2of2 and A2==B2of2
 0,0512 A1==B2of2 or A2==B2of2 or A3==B2of2
 0,0482 A1 ADD A3
 0,0459 A2==B2of2 impl A3==B2of2
 0,0432 A1 SUBTRACT A2
 0,0354 A2 ADD A3
 0,0277 A1==B2of2 and A2==B2of2 and A3==B2of2
 0,0197 A2 MULTIPLY A3
 0,0152 A2 DIVIDE A1
 0,0152 A1 DIVIDE A2
 0,0096 A1 LESSTHAN A2
 0,0001 A1 DIFF A2
 -0,0001 A1 DIFF A3
 -0,0002 A5
 -0,0009 A4
 -0,0009 A2 DIFF A3
MDL (param. search)
The best parameter when using J48: MDL@0.5
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.25
MDL (param. search)
The best parameter when using IBk: MDL@0.0
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.25
								--------------
									Fold  4
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,7464 (A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7)
 0,7381 num-of-N((A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7))
 0,4891 (A1 <= 0.5) and (A3 >= 0.4)
 0,4846 num-of-N((A1 <= 0.5) and (A3 >= 0.4))
 0,4803 A1_x_A3
 0,3976 A1==B2of2 or A2==B2of2
 0,3891 A1_x_A2
 0,3214 A2_x_A3
 0,2957 A1 SUBTRACT A3
 0,2879 A3 DIVIDE A1
 0,2879 A1 DIVIDE A3
 0,2577 A1==B2of2 xor A3==B2of2
 0,2577 A1==B2of2 equ A3==B2of2
 0,2447 A1==B2of2 xor A2==B2of2
 0,2447 A1==B2of2 equ A2==B2of2
 0,2421 A1
 0,2394 A1 LESSTHAN A3
 0,2134 A2==B2of2 xor A3==B2of2
 0,2134 A2==B2of2 equ A3==B2of2
 0,1891 A3
 0,1759 A1 ADD A2
 0,1759 A2 SUBTRACT A3
 0,1667 A3 DIVIDE A2
 0,1667 A2 DIVIDE A3
 0,1586 A2 LESSTHAN A3
 0,1417 A1==B2of2 impl A2==B2of2
 0,1372 A1 MULTIPLY A2
 0,1280 A2
 0,1182 A1==B2of2 and A3==B2of2
 0,1108 A2==B2of2 or A3==B2of2
 0,0819 A1==B2of2 or A3==B2of2
 0,0731 A1==B2of2 impl A3==B2of2
 0,0642 A1 MULTIPLY A3
 0,0625 A2==B2of2 and A3==B2of2
 0,0542 A1==B2of2 and A2==B2of2
 0,0514 A1==B2of2 or A2==B2of2 or A3==B2of2
 0,0508 A1 ADD A3
 0,0475 A2==B2of2 impl A3==B2of2
 0,0445 A1 SUBTRACT A2
 0,0310 A2 ADD A3
 0,0277 A1==B2of2 and A2==B2of2 and A3==B2of2
 0,0215 A2 DIVIDE A1
 0,0215 A1 DIVIDE A2
 0,0180 A2 MULTIPLY A3
 0,0148 A1 LESSTHAN A2
 0,0000 A1 DIFF A3
 -0,0001 A5
 -0,0004 A1 DIFF A2
 -0,0007 A4
 -0,0011 A2 DIFF A3
MDL (param. search)
The best parameter when using J48: MDL@0.25
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.0
MDL (param. search)
The best parameter when using FURIA: MDL@0.5
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  5
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,7474 (A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7)
 0,7391 num-of-N((A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7))
 0,4960 (A1 <= 0.5) and (A3 >= 0.4)
 0,4915 num-of-N((A1 <= 0.5) and (A3 >= 0.4))
 0,4872 A1_x_A3
 0,3917 A1==B2of2 or A2==B2of2
 0,3832 A1_x_A2
 0,3243 A2_x_A3
 0,2965 A1 SUBTRACT A3
 0,2881 A3 DIVIDE A1
 0,2881 A1 DIVIDE A3
 0,2590 A1==B2of2 xor A3==B2of2
 0,2590 A1==B2of2 equ A3==B2of2
 0,2450 A1==B2of2 xor A2==B2of2
 0,2450 A1==B2of2 equ A2==B2of2
 0,2421 A1 LESSTHAN A3
 0,2420 A1
 0,2189 A2==B2of2 xor A3==B2of2
 0,2189 A2==B2of2 equ A3==B2of2
 0,1937 A3
 0,1844 A1 ADD A2
 0,1843 A2 SUBTRACT A3
 0,1755 A3 DIVIDE A2
 0,1755 A2 DIVIDE A3
 0,1683 A2 LESSTHAN A3
 0,1444 A1==B2of2 impl A2==B2of2
 0,1399 A1 MULTIPLY A2
 0,1233 A2
 0,1169 A2==B2of2 or A3==B2of2
 0,1169 A1==B2of2 and A3==B2of2
 0,0840 A1==B2of2 or A3==B2of2
 0,0743 A1==B2of2 impl A3==B2of2
 0,0618 A1 MULTIPLY A3
 0,0608 A2==B2of2 and A3==B2of2
 0,0537 A1==B2of2 or A2==B2of2 or A3==B2of2
 0,0523 A1==B2of2 and A2==B2of2
 0,0500 A1 ADD A3
 0,0456 A2==B2of2 impl A3==B2of2
 0,0425 A1 SUBTRACT A2
 0,0344 A2 ADD A3
 0,0274 A1==B2of2 and A2==B2of2 and A3==B2of2
 0,0210 A2 MULTIPLY A3
 0,0199 A2 DIVIDE A1
 0,0199 A1 DIVIDE A2
 0,0141 A1 LESSTHAN A2
 0,0002 A5
 0,0002 A1 DIFF A3
 -0,0004 A1 DIFF A2
 -0,0009 A4
 -0,0011 A2 DIFF A3
MDL (param. search)
The best parameter when using J48: MDL@0.25
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.25
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.25
MDL (param. search)
The best parameter when using RandomForest: MDL@0.25
								--------------
									Fold  6
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,7474 (A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7)
 0,7391 num-of-N((A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7))
 0,4980 (A1 <= 0.5) and (A3 >= 0.4)
 0,4936 num-of-N((A1 <= 0.5) and (A3 >= 0.4))
 0,4893 A1_x_A3
 0,3967 A1==B2of2 or A2==B2of2
 0,3883 A1_x_A2
 0,3231 A2_x_A3
 0,2987 A1 SUBTRACT A3
 0,2932 A3 DIVIDE A1
 0,2932 A1 DIVIDE A3
 0,2585 A1==B2of2 xor A3==B2of2
 0,2585 A1==B2of2 equ A3==B2of2
 0,2459 A1
 0,2429 A1==B2of2 xor A2==B2of2
 0,2429 A1==B2of2 equ A2==B2of2
 0,2377 A1 LESSTHAN A3
 0,2149 A2==B2of2 xor A3==B2of2
 0,2149 A2==B2of2 equ A3==B2of2
 0,1923 A3
 0,1828 A2 SUBTRACT A3
 0,1799 A1 ADD A2
 0,1776 A3 DIVIDE A2
 0,1776 A2 DIVIDE A3
 0,1707 A2 LESSTHAN A3
 0,1434 A1==B2of2 impl A2==B2of2
 0,1402 A1 MULTIPLY A2
 0,1263 A2
 0,1186 A1==B2of2 and A3==B2of2
 0,1134 A2==B2of2 or A3==B2of2
 0,0822 A1==B2of2 or A3==B2of2
 0,0751 A1==B2of2 impl A3==B2of2
 0,0615 A1 MULTIPLY A3
 0,0613 A2==B2of2 and A3==B2of2
 0,0551 A1==B2of2 and A2==B2of2
 0,0521 A1==B2of2 or A2==B2of2 or A3==B2of2
 0,0495 A1 ADD A3
 0,0475 A2==B2of2 impl A3==B2of2
 0,0430 A1 SUBTRACT A2
 0,0313 A2 ADD A3
 0,0282 A1==B2of2 and A2==B2of2 and A3==B2of2
 0,0200 A2 MULTIPLY A3
 0,0193 A2 DIVIDE A1
 0,0193 A1 DIVIDE A2
 0,0142 A1 LESSTHAN A2
 0,0001 A1 DIFF A3
 0,0000 A5
 -0,0007 A4
 -0,0007 A1 DIFF A2
 -0,0011 A2 DIFF A3
MDL (param. search)
The best parameter when using J48: MDL@0.0
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.5
MDL (param. search)
The best parameter when using IBk: MDL@0.25
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.5
								--------------
									Fold  7
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,7474 (A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7)
 0,7391 num-of-N((A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7))
 0,4898 (A1 <= 0.5) and (A3 >= 0.4)
 0,4854 num-of-N((A1 <= 0.5) and (A3 >= 0.4))
 0,4811 A1_x_A3
 0,4011 A1==B2of2 or A2==B2of2
 0,3927 A1_x_A2
 0,3243 A2_x_A3
 0,3001 A1 SUBTRACT A3
 0,2891 A3 DIVIDE A1
 0,2891 A1 DIVIDE A3
 0,2531 A1==B2of2 xor A3==B2of2
 0,2531 A1==B2of2 equ A3==B2of2
 0,2522 A1==B2of2 xor A2==B2of2
 0,2522 A1==B2of2 equ A2==B2of2
 0,2442 A1
 0,2410 A1 LESSTHAN A3
 0,2185 A2==B2of2 xor A3==B2of2
 0,2185 A2==B2of2 equ A3==B2of2
 0,1923 A3
 0,1784 A1 ADD A2
 0,1776 A2 SUBTRACT A3
 0,1700 A3 DIVIDE A2
 0,1700 A2 DIVIDE A3
 0,1628 A2 LESSTHAN A3
 0,1469 A1==B2of2 impl A2==B2of2
 0,1358 A1 MULTIPLY A2
 0,1248 A2
 0,1163 A1==B2of2 and A3==B2of2
 0,1154 A2==B2of2 or A3==B2of2
 0,0812 A1==B2of2 or A3==B2of2
 0,0761 A1==B2of2 impl A3==B2of2
 0,0620 A1 MULTIPLY A3
 0,0618 A2==B2of2 and A3==B2of2
 0,0516 A1==B2of2 and A2==B2of2
 0,0507 A1==B2of2 or A2==B2of2 or A3==B2of2
 0,0495 A1 ADD A3
 0,0459 A2==B2of2 impl A3==B2of2
 0,0441 A1 SUBTRACT A2
 0,0319 A2 ADD A3
 0,0270 A1==B2of2 and A2==B2of2 and A3==B2of2
 0,0180 A2 MULTIPLY A3
 0,0166 A2 DIVIDE A1
 0,0166 A1 DIVIDE A2
 0,0129 A1 LESSTHAN A2
 0,0003 A1 DIFF A2
 -0,0001 A1 DIFF A3
 -0,0004 A4
 -0,0006 A5
 -0,0012 A2 DIFF A3
MDL (param. search)
The best parameter when using J48: MDL@0.5
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.25
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.5
MDL (param. search)
The best parameter when using FURIA: MDL@0.5
MDL (param. search)
The best parameter when using RandomForest: MDL@0.25
								--------------
									Fold  8
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,7474 (A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7)
 0,7391 num-of-N((A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7))
 0,4960 (A1 <= 0.5) and (A3 >= 0.4)
 0,4915 num-of-N((A1 <= 0.5) and (A3 >= 0.4))
 0,4872 A1_x_A3
 0,4019 A1==B2of2 or A2==B2of2
 0,3934 A1_x_A2
 0,3196 A2_x_A3
 0,3044 A1 SUBTRACT A3
 0,2956 A3 DIVIDE A1
 0,2956 A1 DIVIDE A3
 0,2599 A1==B2of2 xor A3==B2of2
 0,2599 A1==B2of2 equ A3==B2of2
 0,2495 A1==B2of2 xor A2==B2of2
 0,2495 A1==B2of2 equ A2==B2of2
 0,2459 A1
 0,2440 A1 LESSTHAN A3
 0,2133 A2==B2of2 xor A3==B2of2
 0,2133 A2==B2of2 equ A3==B2of2
 0,1897 A3
 0,1784 A1 ADD A2
 0,1738 A2 SUBTRACT A3
 0,1691 A3 DIVIDE A2
 0,1691 A2 DIVIDE A3
 0,1632 A2 LESSTHAN A3
 0,1460 A1==B2of2 impl A2==B2of2
 0,1402 A1 MULTIPLY A2
 0,1260 A2
 0,1201 A1==B2of2 and A3==B2of2
 0,1120 A2==B2of2 or A3==B2of2
 0,0817 A1==B2of2 or A3==B2of2
 0,0738 A1==B2of2 impl A3==B2of2
 0,0642 A1 MULTIPLY A3
 0,0615 A2==B2of2 and A3==B2of2
 0,0532 A1==B2of2 and A2==B2of2
 0,0505 A1==B2of2 or A2==B2of2 or A3==B2of2
 0,0502 A1 ADD A3
 0,0470 A2==B2of2 impl A3==B2of2
 0,0443 A1 SUBTRACT A2
 0,0317 A2 ADD A3
 0,0280 A1==B2of2 and A2==B2of2 and A3==B2of2
 0,0209 A2 MULTIPLY A3
 0,0185 A2 DIVIDE A1
 0,0185 A1 DIVIDE A2
 0,0133 A1 LESSTHAN A2
 0,0003 A1 DIFF A2
 0,0003 A5
 -0,0001 A1 DIFF A3
 -0,0010 A4
 -0,0012 A2 DIFF A3
MDL (param. search)
The best parameter when using J48: MDL@0.5
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.25
MDL (param. search)
The best parameter when using FURIA: MDL@0.25
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold  9
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,7474 (A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7)
 0,7391 num-of-N((A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7))
 0,4858 (A1 <= 0.5) and (A3 >= 0.4)
 0,4814 num-of-N((A1 <= 0.5) and (A3 >= 0.4))
 0,4770 A1_x_A3
 0,4079 A1==B2of2 or A2==B2of2
 0,3994 A1_x_A2
 0,3231 A2_x_A3
 0,2930 A1 SUBTRACT A3
 0,2887 A3 DIVIDE A1
 0,2887 A1 DIVIDE A3
 0,2535 A1==B2of2 xor A2==B2of2
 0,2535 A1==B2of2 equ A2==B2of2
 0,2517 A1==B2of2 xor A3==B2of2
 0,2517 A1==B2of2 equ A3==B2of2
 0,2437 A1
 0,2384 A1 LESSTHAN A3
 0,2121 A2==B2of2 xor A3==B2of2
 0,2121 A2==B2of2 equ A3==B2of2
 0,1908 A3
 0,1887 A1 ADD A2
 0,1816 A2 SUBTRACT A3
 0,1759 A3 DIVIDE A2
 0,1759 A2 DIVIDE A3
 0,1691 A2 LESSTHAN A3
 0,1447 A1==B2of2 impl A2==B2of2
 0,1367 A1 MULTIPLY A2
 0,1296 A2
 0,1163 A1==B2of2 and A3==B2of2
 0,1103 A2==B2of2 or A3==B2of2
 0,0804 A1==B2of2 or A3==B2of2
 0,0758 A1==B2of2 impl A3==B2of2
 0,0632 A1 MULTIPLY A3
 0,0623 A2==B2of2 and A3==B2of2
 0,0530 A1==B2of2 and A2==B2of2
 0,0500 A1 ADD A3
 0,0491 A2==B2of2 impl A3==B2of2
 0,0486 A1==B2of2 or A2==B2of2 or A3==B2of2
 0,0452 A1 SUBTRACT A2
 0,0315 A2 ADD A3
 0,0265 A1==B2of2 and A2==B2of2 and A3==B2of2
 0,0168 A2 MULTIPLY A3
 0,0165 A2 DIVIDE A1
 0,0165 A1 DIVIDE A2
 0,0124 A1 LESSTHAN A2
 0,0003 A5
 0,0002 A1 DIFF A3
 0,0001 A1 DIFF A2
 -0,0009 A4
 -0,0011 A2 DIFF A3
MDL (param. search)
The best parameter when using J48: MDL@0.25
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using SMO: MDL@0.25
MDL (param. search)
The best parameter when using IBk: MDL@0.0
MDL (param. search)
The best parameter when using FURIA: MDL@0.5
MDL (param. search)
The best parameter when using RandomForest: MDL@0.0
								--------------
									Fold 10
								--------------
Feature evaluation: MDL (All features dataset) - After CI
 0,7474 (A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7)
 0,7391 num-of-N((A1 <= 0.5) and (A3 >= 0.4) and (A2 <= 0.7))
 0,4939 (A1 <= 0.5) and (A3 >= 0.4)
 0,4895 num-of-N((A1 <= 0.5) and (A3 >= 0.4))
 0,4851 A1_x_A3
 0,4019 A1==B2of2 or A2==B2of2
 0,3934 A1_x_A2
 0,3237 A2_x_A3
 0,2955 A1 SUBTRACT A3
 0,2888 A3 DIVIDE A1
 0,2888 A1 DIVIDE A3
 0,2544 A1==B2of2 xor A3==B2of2
 0,2544 A1==B2of2 equ A3==B2of2
 0,2495 A1==B2of2 xor A2==B2of2
 0,2495 A1==B2of2 equ A2==B2of2
 0,2464 A1
 0,2382 A1 LESSTHAN A3
 0,2165 A2==B2of2 xor A3==B2of2
 0,2165 A2==B2of2 equ A3==B2of2
 0,1923 A3
 0,1825 A1 ADD A2
 0,1705 A2 SUBTRACT A3
 0,1663 A3 DIVIDE A2
 0,1663 A2 DIVIDE A3
 0,1581 A2 LESSTHAN A3
 0,1463 A1==B2of2 impl A2==B2of2
 0,1343 A1 MULTIPLY A2
 0,1257 A2
 0,1174 A1==B2of2 and A3==B2of2
 0,1143 A2==B2of2 or A3==B2of2
 0,0809 A1==B2of2 or A3==B2of2
 0,0763 A1==B2of2 impl A3==B2of2
 0,0630 A1 MULTIPLY A3
 0,0615 A2==B2of2 and A3==B2of2
 0,0532 A1==B2of2 and A2==B2of2
 0,0505 A1==B2of2 or A2==B2of2 or A3==B2of2
 0,0502 A1 ADD A3
 0,0468 A2==B2of2 impl A3==B2of2
 0,0441 A1 SUBTRACT A2
 0,0346 A2 ADD A3
 0,0276 A1==B2of2 and A2==B2of2 and A3==B2of2
 0,0182 A2 MULTIPLY A3
 0,0170 A2 DIVIDE A1
 0,0170 A1 DIVIDE A2
 0,0129 A1 LESSTHAN A2
 0,0001 A5
 0,0001 A1 DIFF A2
 -0,0001 A1 DIFF A3
 -0,0007 A4
 -0,0012 A2 DIFF A3
MDL (param. search)
The best parameter when using J48: MDL@0.5
MDL (param. search)
The best parameter when using NaiveBayes: MDL@0.5
MDL (param. search)
The best parameter when using SMO: MDL@0.25
MDL (param. search)
The best parameter when using SMO: MDL@0.0
MDL (param. search)
The best parameter when using IBk: MDL@0.0
MDL (param. search)
The best parameter when using FURIA: MDL@0.0
MDL (param. search)
The best parameter when using RandomForest: MDL@0.5
